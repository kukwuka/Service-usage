{"version":3,"sources":["node_modules/dxf-parser/src/DxfArrayScanner.js","node_modules/dxf-parser/src/AutoCadColorIndex.js","node_modules/dxf-parser/src/ParseHelpers.js","node_modules/dxf-parser/src/entities/3dface.js","node_modules/dxf-parser/src/entities/arc.js","node_modules/dxf-parser/src/entities/attdef.js","node_modules/dxf-parser/src/entities/circle.js","node_modules/dxf-parser/src/entities/dimension.js","node_modules/dxf-parser/src/entities/ellipse.js","node_modules/dxf-parser/src/entities/insert.js","node_modules/dxf-parser/src/entities/line.js","node_modules/dxf-parser/src/entities/lwpolyline.js","node_modules/dxf-parser/src/entities/mtext.js","node_modules/dxf-parser/src/entities/point.js","node_modules/dxf-parser/src/entities/vertex.js","node_modules/dxf-parser/src/entities/polyline.js","node_modules/dxf-parser/src/entities/solid.js","node_modules/dxf-parser/src/entities/spline.js","node_modules/dxf-parser/src/entities/text.js","node_modules/loglevel/lib/loglevel.js","node_modules/dxf-parser/src/DxfParser.js","node_modules/dxf-parser/src/index.js","node_modules/process/browser.js","src/dxf-parser/DxfScanner.ts","src/utils/utils.ts","src/lines.app.ts","node_modules/parcel-bundler/src/builtins/hmr-runtime.js"],"names":["DxfArrayScanner","data","_pointer","_data","_eof","prototype","next","group","hasNext","Error","code","parseInt","value","parseGroupValue","trim","lastReadGroup","peek","rewind","numberOfGroups","length","isEOF","parseFloat","parseBoolean","console","log","str","TypeError","getAcadColor","index","AUTO_CAD_COLOR_INDEX","parsePoint","scanner","point","curr","x","y","z","checkCommonEntityProperties","entity","type","handle","lineType","layer","lineTypeScale","visible","colorIndex","color","Math","abs","inPaperSpace","ownerHandle","materialObjectHandle","lineweight","extendedData","customStrings","push","applicationName","EntityParser","ForEntityName","parseEntity","vertices","shape","hasContinuousLinetypePattern","parse3dFaceVertices","helpers","i","vertexIsStarted","vertexIsFinished","verticesPer3dFace","vertex","endAngle","center","radius","startAngle","PI","angleLength","scale","textStyle","text","tag","prompt","startPoint","endPoint","thickness","textHeight","rotation","obliqueAngle","invisible","constant","verificationRequired","preset","backwards","mirrored","horizontalJustification","fieldLength","verticalJustification","extrusionDirectionX","extrusionDirectionY","extrusionDirectionZ","block","anchorPoint","middleOfText","insertionPoint","linearOrAngularPoint1","linearOrAngularPoint2","diameterOrRadiusPoint","arcPoint","dimensionType","attachmentPoint","actualMeasurement","angle","majorAxisEndPoint","axisRatio","name","xScale","yScale","zScale","position","columnCount","rowCount","columnSpacing","rowSpacing","extrusionDirection","unshift","numberOfVertices","elevation","depth","parseLWPolylineVertices","width","n","startWidth","endWidth","bulge","height","drawingDirection","curveFittingVertex","curveFitTangent","splineVertex","splineControlPoint","threeDPolylineVertex","threeDPolylineMesh","polyfaceMeshVertex","faceA","faceB","faceC","faceD","includesCurveFitVertices","includesSplineFitVertices","is3dPolyline","is3dPolygonMesh","is3dPolygonMeshClosed","isPolyfaceMesh","parsePolylineVertices","vertexParser","VertexParser","parseSeqEnd","currentGroup","points","controlPoints","fitPoints","startTangent","endTangent","knotValues","closed","periodic","rational","planar","linear","degreeOfSplineCurve","numberOfKnots","numberOfControlPoints","numberOfFitPoints","normalVector","halign","valign","root","definition","define","amd","module","exports","noop","undefinedType","isIE","window","navigator","test","userAgent","logMethods","bindMethod","obj","methodName","method","bind","Function","call","e","apply","arguments","traceForIE","trace","realMethod","undefined","replaceLoggingMethods","level","loggerName","methodFactory","debug","enableLoggingWhenConsoleArrives","defaultMethodFactory","Logger","defaultLevel","factory","self","currentLevel","storageKey","persistLevelIfPossible","levelNum","levelName","toUpperCase","localStorage","ignore","document","cookie","encodeURIComponent","getPersistedLevel","storedLevel","location","indexOf","exec","slice","levels","getLevel","setLevel","persist","SILENT","setDefaultLevel","enableAll","TRACE","disableAll","initialLevel","defaultLogger","_loggersByName","getLogger","logger","_log","noConflict","getLoggers","registerDefaultEntityHandlers","dxfParser","registerEntityHandler","Face","Arc","AttDef","Circle","Dimension","Ellipse","Insert","Line","LWPolyline","MText","Point","Polyline","Solid","Spline","Text","DxfParser","_entityHandlers","parse","source","done","handlerType","instance","parseSync","_parse","error","parseStream","stream","dxfString","on","onData","onEnd","onError","chunk","dxf","err","lastHandle","dxfLinesArray","split","parseAll","debugCode","header","parseHeader","blocks","parseBlocks","entities","parseEntities","tables","parseTables","warn","groupIs","currVarName","currVarValue","parseBlock","ensureHandle","logUnhandledGroup","xrefPath","name2","paperSpace","tableDefinition","tableDefinitions","tableName","parseTable","END_OF_TABLE_VALUE","table","expectedCount","actualCount","dxfSymbolName","tableRecordsProperty","parseTableRecords","tableRecords","constructor","Array","Object","keys","parseViewPortRecords","viewPorts","viewPort","lowerLeftCorner","upperRightCorner","snapBasePoint","snapSpacing","gridSpacing","viewDirectionFromTarget","viewTarget","lensLength","frontClippingPlane","backClippingPlane","viewHeight","snapRotationAngle","viewTwistAngle","orthographicType","ucsOrigin","ucsXAxis","ucsYAxis","renderMode","defaultLightingType","defaultLightingOn","ambientColor","parseLineTypes","ltypes","ltypeName","ltype","description","pattern","patternLength","parseLayers","layers","layerName","frozen","VPORT","LTYPE","LAYER","forBlock","endingOnValue","handler","BLOCK_ANONYMOUS_FLAG","BLOCK_NON_CONSTANT_FLAG","BLOCK_XREF_FLAG","BLOCK_XREF_OVERLAY_FLAG","BLOCK_EXTERNALLY_DEPENDENT_FLAG","BLOCK_RESOLVED_OR_DEPENDENT_FLAG","BLOCK_REFERENCED_XREF","process","cachedSetTimeout","cachedClearTimeout","defaultSetTimout","defaultClearTimeout","setTimeout","clearTimeout","runTimeout","fun","runClearTimeout","marker","queue","draining","currentQueue","queueIndex","cleanUpNextTick","concat","drainQueue","timeout","len","run","nextTick","args","Item","array","title","env","argv","version","versions","addListener","once","off","removeListener","removeAllListeners","emit","prependListener","prependOnceListener","listeners","binding","cwd","chdir","dir","umask","OVERLAY_ID","OldModule","bundle","Module","moduleName","hot","hotData","_acceptCallbacks","_disposeCallbacks","accept","fn","dispose","checkedAssets","assetsToAccept","parent","isParcelRequire","WebSocket","hostname","protocol","ws","onmessage","event","JSON","handled","assets","forEach","asset","isNew","didAccept","hmrAcceptCheck","global","parcelRequire","id","every","generated","js","clear","hmrApply","v","hmrAcceptRun","reload","close","onclose","removeErrorOverlay","message","stack","overlay","createErrorOverlay","body","appendChild","getElementById","remove","createElement","stackTrace","innerText","innerHTML","getParents","modules","parents","k","d","dep","isArray","deps","cached","cache","some","cb"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACe,SAASA,eAAT,CAAyBC,IAAzB,EAA+B;AAC7C,OAAKC,QAAL,GAAgB,CAAhB;AACA,OAAKC,KAAL,GAAaF,IAAb;AACA,OAAKG,IAAL,GAAY,KAAZ;AACA;AAED;AACA;AACA;AACA;AACA;;;AACAJ,eAAe,CAACK,SAAhB,CAA0BC,IAA1B,GAAiC,YAAW;AAC3C,MAAIC,KAAJ;;AACA,MAAG,CAAC,KAAKC,OAAL,EAAJ,EAAoB;AACnB,QAAG,CAAC,KAAKJ,IAAT,EACC,MAAM,IAAIK,KAAJ,CAAU,mFAAmF,KAAKN,KAAL,CAAW,KAAKD,QAAhB,CAA7F,CAAN,CADD,KAGC,MAAM,IAAIO,KAAJ,CAAU,oDAAV,CAAN;AACD;;AAEDF,EAAAA,KAAK,GAAG;AACPG,IAAAA,IAAI,EAAEC,QAAQ,CAAC,KAAKR,KAAL,CAAW,KAAKD,QAAhB,CAAD;AADP,GAAR;AAIA,OAAKA,QAAL;AAEAK,EAAAA,KAAK,CAACK,KAAN,GAAcC,eAAe,CAACN,KAAK,CAACG,IAAP,EAAa,KAAKP,KAAL,CAAW,KAAKD,QAAhB,EAA0BY,IAA1B,EAAb,CAA7B;AAEA,OAAKZ,QAAL;AAEA,MAAGK,KAAK,CAACG,IAAN,KAAe,CAAf,IAAoBH,KAAK,CAACK,KAAN,KAAgB,KAAvC,EAA8C,KAAKR,IAAL,GAAY,IAAZ;AAE9C,OAAKW,aAAL,GAAqBR,KAArB;AAEA,SAAOA,KAAP;AACA,CAxBD;;AA0BAP,eAAe,CAACK,SAAhB,CAA0BW,IAA1B,GAAiC,YAAW;AAC3C,MAAG,CAAC,KAAKR,OAAL,EAAJ,EAAoB;AACnB,QAAG,CAAC,KAAKJ,IAAT,EACC,MAAM,IAAIK,KAAJ,CAAU,mFAAmF,KAAKN,KAAL,CAAW,KAAKD,QAAhB,CAA7F,CAAN,CADD,KAGC,MAAM,IAAIO,KAAJ,CAAU,oDAAV,CAAN;AACD;;AAED,MAAIF,KAAK,GAAG;AACXG,IAAAA,IAAI,EAAEC,QAAQ,CAAC,KAAKR,KAAL,CAAW,KAAKD,QAAhB,CAAD;AADH,GAAZ;AAIAK,EAAAA,KAAK,CAACK,KAAN,GAAcC,eAAe,CAACN,KAAK,CAACG,IAAP,EAAa,KAAKP,KAAL,CAAW,KAAKD,QAAL,GAAgB,CAA3B,EAA8BY,IAA9B,EAAb,CAA7B;AAEA,SAAOP,KAAP;AACA,CAfD;;AAkBAP,eAAe,CAACK,SAAhB,CAA0BY,MAA1B,GAAmC,UAASC,cAAT,EAAyB;AAC3DA,EAAAA,cAAc,GAAGA,cAAc,IAAI,CAAnC;AACA,OAAKhB,QAAL,GAAgB,KAAKA,QAAL,GAAgBgB,cAAc,GAAG,CAAjD;AACA,CAHD;AAKA;AACA;AACA;AACA;;;AACAlB,eAAe,CAACK,SAAhB,CAA0BG,OAA1B,GAAoC,YAAW;AAC9C;AACA,MAAG,KAAKJ,IAAR,EAAc;AACb,WAAO,KAAP;AACA,GAJ6C,CAM9C;;;AACA,MAAG,KAAKF,QAAL,GAAgB,KAAKC,KAAL,CAAWgB,MAAX,GAAoB,CAAvC,EAA0C;AACzC,WAAO,KAAP;AACA;;AACD,SAAO,IAAP;AACA,CAXD;AAaA;AACA;AACA;AACA;;;AACAnB,eAAe,CAACK,SAAhB,CAA0Be,KAA1B,GAAkC,YAAW;AAC5C,SAAO,KAAKhB,IAAZ;AACA,CAFD;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,SAASS,eAAT,CAAyBH,IAAzB,EAA+BE,KAA/B,EAAsC;AACrC,MAAGF,IAAI,IAAI,CAAX,EAAc,OAAOE,KAAP;AACd,MAAGF,IAAI,IAAI,EAAR,IAAcA,IAAI,IAAI,EAAzB,EAA6B,OAAOW,UAAU,CAACT,KAAD,CAAjB;AAC7B,MAAGF,IAAI,IAAI,EAAR,IAAcA,IAAI,IAAI,EAAzB,EAA6B,OAAOC,QAAQ,CAACC,KAAD,CAAf;AAC7B,MAAGF,IAAI,IAAI,GAAR,IAAeA,IAAI,IAAI,GAA1B,EAA+B,OAAOE,KAAP;AAC/B,MAAGF,IAAI,IAAI,GAAR,IAAeA,IAAI,IAAI,GAA1B,EAA+B,OAAOW,UAAU,CAACT,KAAD,CAAjB;AAC/B,MAAGF,IAAI,IAAI,GAAR,IAAeA,IAAI,IAAI,GAA1B,EAA+B,OAAOC,QAAQ,CAACC,KAAD,CAAf;AAC/B,MAAGF,IAAI,IAAI,GAAR,IAAeA,IAAI,IAAI,GAA1B,EAA+B,OAAOW,UAAU,CAACT,KAAD,CAAjB;AAC/B,MAAGF,IAAI,IAAI,GAAR,IAAeA,IAAI,IAAI,GAA1B,EAA+B,OAAOC,QAAQ,CAACC,KAAD,CAAf;AAC/B,MAAGF,IAAI,IAAI,GAAR,IAAeA,IAAI,IAAI,GAA1B,EAA+B,OAAOY,YAAY,CAACV,KAAD,CAAnB;AAC/B,MAAGF,IAAI,IAAI,GAAR,IAAeA,IAAI,IAAI,GAA1B,EAA+B,OAAOE,KAAP;AAC/B,MAAGF,IAAI,IAAI,GAAR,IAAeA,IAAI,IAAI,GAA1B,EAA+B,OAAOC,QAAQ,CAACC,KAAD,CAAf;AAC/B,MAAGF,IAAI,IAAI,GAAR,IAAeA,IAAI,IAAI,GAA1B,EAA+B,OAAOE,KAAP;AAC/B,MAAGF,IAAI,IAAI,GAAR,IAAeA,IAAI,IAAI,GAA1B,EAA+B,OAAOC,QAAQ,CAACC,KAAD,CAAf;AAC/B,MAAGF,IAAI,IAAI,GAAR,IAAeA,IAAI,IAAI,GAA1B,EAA+B,OAAOE,KAAP;AAC/B,MAAGF,IAAI,IAAI,GAAR,IAAeA,IAAI,IAAI,GAA1B,EAA+B,OAAOC,QAAQ,CAACC,KAAD,CAAf;AAC/B,MAAGF,IAAI,IAAI,GAAR,IAAeA,IAAI,IAAI,GAA1B,EAA+B,OAAOE,KAAP;AAC/B,MAAGF,IAAI,IAAI,GAAR,IAAeA,IAAI,IAAI,GAA1B,EAA+B,OAAOC,QAAQ,CAACC,KAAD,CAAf;AAC/B,MAAGF,IAAI,IAAI,GAAR,IAAeA,IAAI,IAAI,GAA1B,EAA+B,OAAOW,UAAU,CAACT,KAAD,CAAjB;AAC/B,MAAGF,IAAI,IAAI,GAAR,IAAeA,IAAI,IAAI,GAA1B,EAA+B,OAAOE,KAAP;AAC/B,MAAGF,IAAI,KAAK,GAAZ,EAAiB,OAAOE,KAAP;AACjB,MAAGF,IAAI,IAAI,IAAR,IAAgBA,IAAI,IAAI,IAA3B,EAAiC,OAAOE,KAAP;AACjC,MAAGF,IAAI,IAAI,IAAR,IAAgBA,IAAI,IAAI,IAA3B,EAAiC,OAAOW,UAAU,CAACT,KAAD,CAAjB;AACjC,MAAGF,IAAI,IAAI,IAAR,IAAgBA,IAAI,IAAI,IAA3B,EAAiC,OAAOC,QAAQ,CAACC,KAAD,CAAf;AAEjCW,EAAAA,OAAO,CAACC,GAAR,CAAY,sDAAZ,EAAoE;AAAEd,IAAAA,IAAI,EAAEA,IAAR;AAAcE,IAAAA,KAAK,EAAEA;AAArB,GAApE;AACA,SAAOA,KAAP;AACA;AAED;AACA;AACA;AACA;AACA;;;AACA,SAASU,YAAT,CAAsBG,GAAtB,EAA2B;AAC1B,MAAGA,GAAG,KAAK,GAAX,EAAgB,OAAO,KAAP;AAChB,MAAGA,GAAG,KAAK,GAAX,EAAgB,OAAO,IAAP;AAChB,QAAMC,SAAS,CAAC,cAAcD,GAAd,GAAoB,mCAArB,CAAf;AACA;;;;;;;;;AC9ID;AACA;AACA;AACA;AACA;AACA;eAEe,CACd,CADc,EAEd,QAFc,EAGd,QAHc,EAId,KAJc,EAKd,KALc,EAMd,GANc,EAOd,QAPc,EAQd,QARc,EASd,OATc,EAUd,QAVc,EAWd,QAXc,EAYd,QAZc,EAad,QAbc,EAcd,QAdc,EAed,QAfc,EAgBd,QAhBc,EAiBd,OAjBc,EAkBd,OAlBc,EAmBd,OAnBc,EAoBd,OApBc,EAqBd,QArBc,EAsBd,QAtBc,EAuBd,QAvBc,EAwBd,QAxBc,EAyBd,QAzBc,EA0Bd,QA1Bc,EA2Bd,OA3Bc,EA4Bd,OA5Bc,EA6Bd,OA7Bc,EA8Bd,OA9Bc,EA+Bd,QA/Bc,EAgCd,QAhCc,EAiCd,QAjCc,EAkCd,QAlCc,EAmCd,QAnCc,EAoCd,QApCc,EAqCd,OArCc,EAsCd,OAtCc,EAuCd,OAvCc,EAwCd,OAxCc,EAyCd,QAzCc,EA0Cd,QA1Cc,EA2Cd,QA3Cc,EA4Cd,QA5Cc,EA6Cd,QA7Cc,EA8Cd,QA9Cc,EA+Cd,OA/Cc,EAgDd,OAhDc,EAiDd,OAjDc,EAkDd,OAlDc,EAmDd,QAnDc,EAoDd,QApDc,EAqDd,QArDc,EAsDd,QAtDc,EAuDd,QAvDc,EAwDd,QAxDc,EAyDd,OAzDc,EA0Dd,OA1Dc,EA2Dd,OA3Dc,EA4Dd,OA5Dc,EA6Dd,QA7Dc,EA8Dd,QA9Dc,EA+Dd,QA/Dc,EAgEd,QAhEc,EAiEd,OAjEc,EAkEd,OAlEc,EAmEd,OAnEc,EAoEd,OApEc,EAqEd,OArEc,EAsEd,OAtEc,EAuEd,OAvEc,EAwEd,QAxEc,EAyEd,OAzEc,EA0Ed,QA1Ec,EA2Ed,OA3Ec,EA4Ed,OA5Ec,EA6Ed,OA7Ec,EA8Ed,OA9Ec,EA+Ed,OA/Ec,EAgFd,OAhFc,EAiFd,OAjFc,EAkFd,QAlFc,EAmFd,OAnFc,EAoFd,OApFc,EAqFd,OArFc,EAsFd,OAtFc,EAuFd,OAvFc,EAwFd,OAxFc,EAyFd,OAzFc,EA0Fd,OA1Fc,EA2Fd,KA3Fc,EA4Fd,OA5Fc,EA6Fd,KA7Fc,EA8Fd,OA9Fc,EA+Fd,KA/Fc,EAgGd,OAhGc,EAiGd,KAjGc,EAkGd,OAlGc,EAmGd,KAnGc,EAoGd,OApGc,EAqGd,KArGc,EAsGd,OAtGc,EAuGd,KAvGc,EAwGd,OAxGc,EAyGd,KAzGc,EA0Gd,OA1Gc,EA2Gd,KA3Gc,EA4Gd,OA5Gc,EA6Gd,KA7Gc,EA8Gd,OA9Gc,EA+Gd,KA/Gc,EAgHd,OAhHc,EAiHd,KAjHc,EAkHd,OAlHc,EAmHd,KAnHc,EAoHd,OApHc,EAqHd,KArHc,EAsHd,OAtHc,EAuHd,KAvHc,EAwHd,OAxHc,EAyHd,KAzHc,EA0Hd,OA1Hc,EA2Hd,KA3Hc,EA4Hd,OA5Hc,EA6Hd,KA7Hc,EA8Hd,OA9Hc,EA+Hd,KA/Hc,EAgId,OAhIc,EAiId,KAjIc,EAkId,OAlIc,EAmId,KAnIc,EAoId,OApIc,EAqId,KArIc,EAsId,OAtIc,EAuId,KAvIc,EAwId,OAxIc,EAyId,KAzIc,EA0Id,OA1Ic,EA2Id,KA3Ic,EA4Id,OA5Ic,EA6Id,KA7Ic,EA8Id,OA9Ic,EA+Id,KA/Ic,EAgJd,OAhJc,EAiJd,KAjJc,EAkJd,OAlJc,EAmJd,KAnJc,EAoJd,OApJc,EAqJd,KArJc,EAsJd,OAtJc,EAuJd,KAvJc,EAwJd,OAxJc,EAyJd,KAzJc,EA0Jd,OA1Jc,EA2Jd,KA3Jc,EA4Jd,OA5Jc,EA6Jd,KA7Jc,EA8Jd,OA9Jc,EA+Jd,IA/Jc,EAgKd,OAhKc,EAiKd,KAjKc,EAkKd,OAlKc,EAmKd,KAnKc,EAoKd,OApKc,EAqKd,IArKc,EAsKd,OAtKc,EAuKd,IAvKc,EAwKd,OAxKc,EAyKd,IAzKc,EA0Kd,OA1Kc,EA2Kd,GA3Kc,EA4Kd,OA5Kc,EA6Kd,GA7Kc,EA8Kd,OA9Kc,EA+Kd,GA/Kc,EAgLd,OAhLc,EAiLd,GAjLc,EAkLd,OAlLc,EAmLd,EAnLc,EAoLd,OApLc,EAqLd,OArLc,EAsLd,QAtLc,EAuLd,OAvLc,EAwLd,OAxLc,EAyLd,OAzLc,EA0Ld,OA1Lc,EA2Ld,OA3Lc,EA4Ld,OA5Lc,EA6Ld,OA7Lc,EA8Ld,OA9Lc,EA+Ld,OA/Lc,EAgMd,QAhMc,EAiMd,OAjMc,EAkMd,QAlMc,EAmMd,OAnMc,EAoMd,OApMc,EAqMd,OArMc,EAsMd,OAtMc,EAuMd,OAvMc,EAwMd,OAxMc,EAyMd,QAzMc,EA0Md,QA1Mc,EA2Md,QA3Mc,EA4Md,QA5Mc,EA6Md,OA7Mc,EA8Md,OA9Mc,EA+Md,OA/Mc,EAgNd,OAhNc,EAiNd,OAjNc,EAkNd,OAlNc,EAmNd,QAnNc,EAoNd,QApNc,EAqNd,QArNc,EAsNd,QAtNc,EAuNd,OAvNc,EAwNd,OAxNc,EAyNd,OAzNc,EA0Nd,OA1Nc,EA2Nd,OA3Nc,EA4Nd,OA5Nc,EA6Nd,QA7Nc,EA8Nd,QA9Nc,EA+Nd,QA/Nc,EAgOd,QAhOc,EAiOd,OAjOc,EAkOd,OAlOc,EAmOd,OAnOc,EAoOd,OApOc,EAqOd,OArOc,EAsOd,OAtOc,EAuOd,QAvOc,EAwOd,QAxOc,EAyOd,QAzOc,EA0Od,QA1Oc,EA2Od,OA3Oc,EA4Od,OA5Oc,EA6Od,OA7Oc,EA8Od,OA9Oc,EA+Od,OA/Oc,EAgPd,OAhPc,EAiPd,QAjPc,EAkPd,QAlPc,EAmPd,QAnPc,EAoPd,QApPc,EAqPd,OArPc,EAsPd,OAtPc,EAuPd,OAvPc,EAwPd,OAxPc,EAyPd,OAzPc,EA0Pd,OA1Pc,EA2Pd,OA3Pc,EA4Pd,OA5Pc,EA6Pd,OA7Pc,EA8Pd,QA9Pc,EA+Pd,QA/Pc,EAgQd,QAhQc;;;;;;;;;;;;ACPf;;;;AAEA;AACA;AACA;AACA;AACO,SAASE,YAAT,CAAsBC,KAAtB,EAA6B;AACnC,SAAOC,2BAAqBD,KAArB,CAAP;AACA;AAED;AACA;AACA;AACA;AACA;;;AACO,SAASE,UAAT,CAAoBC,OAApB,EAA6B;AAChC,MAAIC,KAAK,GAAG,EAAZ,CADgC,CAGhC;;AACAD,EAAAA,OAAO,CAACd,MAAR;AACA,MAAIgB,IAAI,GAAGF,OAAO,CAACzB,IAAR,EAAX;AAEA,MAAII,IAAI,GAAGuB,IAAI,CAACvB,IAAhB;AACAsB,EAAAA,KAAK,CAACE,CAAN,GAAUD,IAAI,CAACrB,KAAf;AAEAF,EAAAA,IAAI,IAAI,EAAR;AACAuB,EAAAA,IAAI,GAAGF,OAAO,CAACzB,IAAR,EAAP;AACA,MAAG2B,IAAI,CAACvB,IAAL,IAAaA,IAAhB,EACI,MAAM,IAAID,KAAJ,CAAU,yCAAyCC,IAAzC,GAChB,WADgB,GACFuB,IAAI,CAACvB,IADH,GACU,GADpB,CAAN;AAEJsB,EAAAA,KAAK,CAACG,CAAN,GAAUF,IAAI,CAACrB,KAAf;AAEAF,EAAAA,IAAI,IAAI,EAAR;AACAuB,EAAAA,IAAI,GAAGF,OAAO,CAACzB,IAAR,EAAP;;AACA,MAAG2B,IAAI,CAACvB,IAAL,IAAaA,IAAhB,EACA;AACI;AACAqB,IAAAA,OAAO,CAACd,MAAR,GAFJ,CAEsB;;AAClB,WAAOe,KAAP;AACH;;AACDA,EAAAA,KAAK,CAACI,CAAN,GAAUH,IAAI,CAACrB,KAAf;AAEA,SAAOoB,KAAP;AACH;;AAAA;AAED;AACA;AACA;AACA;AACA;AACA;;AACO,SAASK,2BAAT,CAAqCC,MAArC,EAA6CL,IAA7C,EAAmD;AACtD,UAAOA,IAAI,CAACvB,IAAZ;AACI,SAAK,CAAL;AACI4B,MAAAA,MAAM,CAACC,IAAP,GAAcN,IAAI,CAACrB,KAAnB;AACA;;AACJ,SAAK,CAAL;AACI0B,MAAAA,MAAM,CAACE,MAAP,GAAgBP,IAAI,CAACrB,KAArB;AACA;;AACJ,SAAK,CAAL;AACI0B,MAAAA,MAAM,CAACG,QAAP,GAAkBR,IAAI,CAACrB,KAAvB;AACA;;AACJ,SAAK,CAAL;AAAQ;AACJ0B,MAAAA,MAAM,CAACI,KAAP,GAAeT,IAAI,CAACrB,KAApB;AACA;;AACJ,SAAK,EAAL;AACI0B,MAAAA,MAAM,CAACK,aAAP,GAAuBV,IAAI,CAACrB,KAA5B;AACA;;AACJ,SAAK,EAAL;AACI0B,MAAAA,MAAM,CAACM,OAAP,GAAiBX,IAAI,CAACrB,KAAL,KAAe,CAAhC;AACA;;AACJ,SAAK,EAAL;AAAS;AACL0B,MAAAA,MAAM,CAACO,UAAP,GAAoBZ,IAAI,CAACrB,KAAzB;AACA0B,MAAAA,MAAM,CAACQ,KAAP,GAAenB,YAAY,CAACoB,IAAI,CAACC,GAAL,CAASf,IAAI,CAACrB,KAAd,CAAD,CAA3B;AACA;;AACJ,SAAK,EAAL;AACI0B,MAAAA,MAAM,CAACW,YAAP,GAAsBhB,IAAI,CAACrB,KAAL,KAAe,CAArC;AACA;;AACJ,SAAK,GAAL;AACI;AACA;;AACJ,SAAK,GAAL;AACI0B,MAAAA,MAAM,CAACY,WAAP,GAAqBjB,IAAI,CAACrB,KAA1B;AACA;;AACJ,SAAK,GAAL;AACI0B,MAAAA,MAAM,CAACa,oBAAP,GAA8BlB,IAAI,CAACrB,KAAnC;AACA;;AACJ,SAAK,GAAL;AACI;AACA;AACA;AACA;AACA0B,MAAAA,MAAM,CAACc,UAAP,GAAoBnB,IAAI,CAACrB,KAAzB;AACA;;AACJ,SAAK,GAAL;AAAU;AACN0B,MAAAA,MAAM,CAACQ,KAAP,GAAeb,IAAI,CAACrB,KAApB;AACA;;AACJ,SAAK,IAAL;AACI0B,MAAAA,MAAM,CAACe,YAAP,GAAsBf,MAAM,CAACe,YAAP,IAAuB,EAA7C;AACAf,MAAAA,MAAM,CAACe,YAAP,CAAoBC,aAApB,GAAoChB,MAAM,CAACe,YAAP,CAAoBC,aAApB,IAAqC,EAAzE;AACAhB,MAAAA,MAAM,CAACe,YAAP,CAAoBC,aAApB,CAAkCC,IAAlC,CAAuCtB,IAAI,CAACrB,KAA5C;AACA;;AACJ,SAAK,IAAL;AACI0B,MAAAA,MAAM,CAACe,YAAP,GAAsBf,MAAM,CAACe,YAAP,IAAuB,EAA7C;AACAf,MAAAA,MAAM,CAACe,YAAP,CAAoBG,eAApB,GAAsCvB,IAAI,CAACrB,KAA3C;AACA;;AACJ;AACI,aAAO,KAAP;AAvDR;;AAyDA,SAAO,IAAP;AACH;;AAAA;;;;;;;;;AC7GD;;;;;;AAEe,SAAS6C,YAAT,GAAwB,CAAE;;AAEzCA,YAAY,CAACC,aAAb,GAA6B,QAA7B;;AAEAD,YAAY,CAACpD,SAAb,CAAuBsD,WAAvB,GAAqC,UAAS5B,OAAT,EAAkBE,IAAlB,EAAwB;AAEzD,MAAIK,MAAM,GAAG;AAAEC,IAAAA,IAAI,EAAEN,IAAI,CAACrB,KAAb;AAAoBgD,IAAAA,QAAQ,EAAE;AAA9B,GAAb;AACA3B,EAAAA,IAAI,GAAGF,OAAO,CAACzB,IAAR,EAAP;;AACA,SAAO2B,IAAI,KAAK,KAAhB,EAAuB;AACnB,QAAIA,IAAI,CAACvB,IAAL,KAAc,CAAlB,EAAqB;;AACrB,YAAQuB,IAAI,CAACvB,IAAb;AACI,WAAK,EAAL;AAAS;AACL4B,QAAAA,MAAM,CAACuB,KAAP,GAAgB,CAAC5B,IAAI,CAACrB,KAAL,GAAa,CAAd,MAAqB,CAArC;AACA0B,QAAAA,MAAM,CAACwB,4BAAP,GAAuC,CAAC7B,IAAI,CAACrB,KAAL,GAAa,GAAd,MAAuB,GAA9D;AACA;;AACJ,WAAK,EAAL;AAAS;AACL0B,QAAAA,MAAM,CAACsB,QAAP,GAAkBG,mBAAmB,CAAChC,OAAD,EAAUE,IAAV,CAArC;AACAA,QAAAA,IAAI,GAAGF,OAAO,CAAChB,aAAf;AACA;;AACJ;AACIiD,QAAAA,OAAO,CAAC3B,2BAAR,CAAoCC,MAApC,EAA4CL,IAA5C;AACA;AAXR;;AAaAA,IAAAA,IAAI,GAAGF,OAAO,CAACzB,IAAR,EAAP;AACH;;AACD,SAAOgC,MAAP;AACH,CAtBD;;AAwBA,SAASyB,mBAAT,CAA6BhC,OAA7B,EAAsCE,IAAtC,EAA4C;AACxC,MAAI2B,QAAQ,GAAG,EAAf;AAAA,MACIK,CADJ;AAEA,MAAIC,eAAe,GAAG,KAAtB;AACA,MAAIC,gBAAgB,GAAG,KAAvB;AACA,MAAIC,iBAAiB,GAAG,CAAxB,CALwC,CAKb;;AAE3B,OAAKH,CAAC,GAAG,CAAT,EAAYA,CAAC,IAAIG,iBAAjB,EAAoCH,CAAC,EAArC,EAAyC;AACrC,QAAII,MAAM,GAAG,EAAb;;AACA,WAAOpC,IAAI,KAAK,KAAhB,EAAuB;AACnB,UAAIA,IAAI,CAACvB,IAAL,KAAc,CAAd,IAAmByD,gBAAvB,EAAyC;;AAEzC,cAAQlC,IAAI,CAACvB,IAAb;AACI,aAAK,EAAL,CADJ,CACa;;AACT,aAAK,EAAL,CAFJ,CAEa;;AACT,aAAK,EAAL,CAHJ,CAGa;;AACT,aAAK,EAAL;AAAS;AACL,cAAIwD,eAAJ,EAAqB;AACjBC,YAAAA,gBAAgB,GAAG,IAAnB;AACA;AACH;;AACDE,UAAAA,MAAM,CAACnC,CAAP,GAAWD,IAAI,CAACrB,KAAhB;AACAsD,UAAAA,eAAe,GAAG,IAAlB;AACA;;AACJ,aAAK,EAAL,CAZJ,CAYa;;AACT,aAAK,EAAL;AACA,aAAK,EAAL;AACA,aAAK,EAAL;AACIG,UAAAA,MAAM,CAAClC,CAAP,GAAWF,IAAI,CAACrB,KAAhB;AACA;;AACJ,aAAK,EAAL,CAlBJ,CAkBa;;AACT,aAAK,EAAL;AACA,aAAK,EAAL;AACA,aAAK,EAAL;AACIyD,UAAAA,MAAM,CAACjC,CAAP,GAAWH,IAAI,CAACrB,KAAhB;AACA;;AACJ;AACI;AACA;AACA,iBAAOgD,QAAP;AACA;AA5BR;;AA8BA3B,MAAAA,IAAI,GAAGF,OAAO,CAACzB,IAAR,EAAP;AACH,KApCoC,CAqCrC;;;AACAsD,IAAAA,QAAQ,CAACL,IAAT,CAAcc,MAAd;AACAH,IAAAA,eAAe,GAAG,KAAlB;AACAC,IAAAA,gBAAgB,GAAG,KAAnB;AACH;;AACDpC,EAAAA,OAAO,CAACd,MAAR;AACA,SAAO2C,QAAP;AACH;;AAAA;;;;;;;;;ACjFD;;;;;;AAEe,SAASH,YAAT,GAAwB,CAAE;;AAEzCA,YAAY,CAACC,aAAb,GAA6B,KAA7B;;AAEAD,YAAY,CAACpD,SAAb,CAAuBsD,WAAvB,GAAqC,UAAS5B,OAAT,EAAkBE,IAAlB,EAAwB;AACzD,MAAIK,MAAJ,EAAYgC,QAAZ;AACAhC,EAAAA,MAAM,GAAG;AAAEC,IAAAA,IAAI,EAAEN,IAAI,CAACrB;AAAb,GAAT;AACAqB,EAAAA,IAAI,GAAGF,OAAO,CAACzB,IAAR,EAAP;;AACA,SAAM2B,IAAI,KAAK,KAAf,EAAsB;AAClB,QAAGA,IAAI,CAACvB,IAAL,KAAc,CAAjB,EAAoB;;AAEpB,YAAOuB,IAAI,CAACvB,IAAZ;AACI,WAAK,EAAL;AAAS;AACL4B,QAAAA,MAAM,CAACiC,MAAP,GAAgBP,OAAO,CAAClC,UAAR,CAAmBC,OAAnB,CAAhB;AACA;;AACJ,WAAK,EAAL;AAAS;AACLO,QAAAA,MAAM,CAACkC,MAAP,GAAgBvC,IAAI,CAACrB,KAArB;AACA;;AACJ,WAAK,EAAL;AAAS;AACL0B,QAAAA,MAAM,CAACmC,UAAP,GAAoB1B,IAAI,CAAC2B,EAAL,GAAU,GAAV,GAAgBzC,IAAI,CAACrB,KAAzC;AACA;;AACJ,WAAK,EAAL;AAAS;AACL0B,QAAAA,MAAM,CAACgC,QAAP,GAAkBvB,IAAI,CAAC2B,EAAL,GAAU,GAAV,GAAgBzC,IAAI,CAACrB,KAAvC;AACA0B,QAAAA,MAAM,CAACqC,WAAP,GAAqBrC,MAAM,CAACgC,QAAP,GAAkBhC,MAAM,CAACmC,UAA9C,CAFJ,CAE8D;;AAC1D;;AACJ;AAAS;AACLT,QAAAA,OAAO,CAAC3B,2BAAR,CAAoCC,MAApC,EAA4CL,IAA5C;AACA;AAhBR;;AAkBAA,IAAAA,IAAI,GAAGF,OAAO,CAACzB,IAAR,EAAP;AACH;;AACD,SAAOgC,MAAP;AACH,CA5BD;;;;;;;;;ACNA;;;;;;AAEe,SAASmB,YAAT,GAAwB,CAAE;;AAEzCA,YAAY,CAACC,aAAb,GAA6B,QAA7B;;AAEAD,YAAY,CAACpD,SAAb,CAAuBsD,WAAvB,GAAqC,UAAS5B,OAAT,EAAkBE,IAAlB,EAAwB;AACzD,MAAIK,MAAM,GAAG;AACTC,IAAAA,IAAI,EAAEN,IAAI,CAACrB,KADF;AAETgE,IAAAA,KAAK,EAAE,CAFE;AAGTC,IAAAA,SAAS,EAAE;AAHF,GAAb;AAKA5C,EAAAA,IAAI,GAAGF,OAAO,CAACzB,IAAR,EAAP;;AACA,SAAO2B,IAAI,KAAK,KAAhB,EAAuB;AACnB,QAAIA,IAAI,CAACvB,IAAL,KAAc,CAAlB,EAAqB;AACjB;AACH;;AACD,YAAOuB,IAAI,CAACvB,IAAZ;AACI,WAAK,CAAL;AACI4B,QAAAA,MAAM,CAACwC,IAAP,GAAc7C,IAAI,CAACrB,KAAnB;AACA;;AACJ,WAAK,CAAL;AACI0B,QAAAA,MAAM,CAACyC,GAAP,GAAa9C,IAAI,CAACrB,KAAlB;AACA;;AACJ,WAAK,CAAL;AACI0B,QAAAA,MAAM,CAAC0C,MAAP,GAAgB/C,IAAI,CAACrB,KAArB;AACA;;AACJ,WAAK,CAAL;AACI0B,QAAAA,MAAM,CAACuC,SAAP,GAAmB5C,IAAI,CAACrB,KAAxB;AACA;;AACJ,WAAK,EAAL;AAAS;AACL0B,QAAAA,MAAM,CAAC2C,UAAP,GAAoBjB,OAAO,CAAClC,UAAR,CAAmBC,OAAnB,CAApB;AACA;;AACJ,WAAK,EAAL;AAAS;AACLO,QAAAA,MAAM,CAAC4C,QAAP,GAAkBlB,OAAO,CAAClC,UAAR,CAAmBC,OAAnB,CAAlB;AACA;;AACJ,WAAK,EAAL;AACIO,QAAAA,MAAM,CAAC6C,SAAP,GAAmBlD,IAAI,CAACrB,KAAxB;AACA;;AACJ,WAAK,EAAL;AACI0B,QAAAA,MAAM,CAAC8C,UAAP,GAAoBnD,IAAI,CAACrB,KAAzB;AACA;;AACJ,WAAK,EAAL;AACI0B,QAAAA,MAAM,CAACsC,KAAP,GAAe3C,IAAI,CAACrB,KAApB;AACA;;AACJ,WAAK,EAAL;AACI0B,QAAAA,MAAM,CAAC+C,QAAP,GAAkBpD,IAAI,CAACrB,KAAvB;AACA;;AACJ,WAAK,EAAL;AACI0B,QAAAA,MAAM,CAACgD,YAAP,GAAsBrD,IAAI,CAACrB,KAA3B;AACA;;AACJ,WAAK,EAAL;AACI0B,QAAAA,MAAM,CAACiD,SAAP,GAAmB,CAAC,EAAEtD,IAAI,CAACrB,KAAL,GAAa,IAAf,CAApB;AACA0B,QAAAA,MAAM,CAACkD,QAAP,GAAkB,CAAC,EAAEvD,IAAI,CAACrB,KAAL,GAAa,IAAf,CAAnB;AACA0B,QAAAA,MAAM,CAACmD,oBAAP,GAA8B,CAAC,EAAExD,IAAI,CAACrB,KAAL,GAAa,IAAf,CAA/B;AACA0B,QAAAA,MAAM,CAACoD,MAAP,GAAgB,CAAC,EAAEzD,IAAI,CAACrB,KAAL,GAAa,IAAf,CAAjB;AACA;;AACJ,WAAK,EAAL;AACI0B,QAAAA,MAAM,CAACqD,SAAP,GAAmB,CAAC,EAAE1D,IAAI,CAACrB,KAAL,GAAa,IAAf,CAApB;AACA0B,QAAAA,MAAM,CAACsD,QAAP,GAAkB,CAAC,EAAE3D,IAAI,CAACrB,KAAL,GAAa,IAAf,CAAnB;AACA;;AACJ,WAAK,EAAL;AACI;AACA0B,QAAAA,MAAM,CAACuD,uBAAP,GAAiC5D,IAAI,CAACrB,KAAtC;AACA;;AACJ,WAAK,EAAL;AACI0B,QAAAA,MAAM,CAACwD,WAAP,GAAqB7D,IAAI,CAACrB,KAA1B;AACA;;AACJ,WAAK,EAAL;AACI;AACA0B,QAAAA,MAAM,CAACyD,qBAAP,GAA+B9D,IAAI,CAACrB,KAApC;AACA;;AACJ,WAAK,GAAL;AACI;;AACJ,WAAK,GAAL;AACI0B,QAAAA,MAAM,CAAC0D,mBAAP,GAA6B/D,IAAI,CAACrB,KAAlC;AACA;;AACJ,WAAK,GAAL;AACI0B,QAAAA,MAAM,CAAC2D,mBAAP,GAA6BhE,IAAI,CAACrB,KAAlC;AACA;;AACJ,WAAK,GAAL;AACI0B,QAAAA,MAAM,CAAC4D,mBAAP,GAA6BjE,IAAI,CAACrB,KAAlC;AACA;;AACJ;AACIoD,QAAAA,OAAO,CAAC3B,2BAAR,CAAoCC,MAApC,EAA4CL,IAA5C;AACA;AApER;;AAsEAA,IAAAA,IAAI,GAAGF,OAAO,CAACzB,IAAR,EAAP;AACH;;AAED,SAAOgC,MAAP;AACH,CArFD;;;;;;;;;ACNA;;;;;;AAEe,SAASmB,YAAT,GAAwB,CAAE;;AAEzCA,YAAY,CAACC,aAAb,GAA6B,QAA7B;;AAEAD,YAAY,CAACpD,SAAb,CAAuBsD,WAAvB,GAAqC,UAAS5B,OAAT,EAAkBE,IAAlB,EAAwB;AACzD,MAAIK,MAAJ,EAAYgC,QAAZ;AACAhC,EAAAA,MAAM,GAAG;AAAEC,IAAAA,IAAI,EAAEN,IAAI,CAACrB;AAAb,GAAT;AACAqB,EAAAA,IAAI,GAAGF,OAAO,CAACzB,IAAR,EAAP;;AACA,SAAM2B,IAAI,KAAK,KAAf,EAAsB;AAClB,QAAGA,IAAI,CAACvB,IAAL,KAAc,CAAjB,EAAoB;;AAEpB,YAAOuB,IAAI,CAACvB,IAAZ;AACI,WAAK,EAAL;AAAS;AACL4B,QAAAA,MAAM,CAACiC,MAAP,GAAgBP,OAAO,CAAClC,UAAR,CAAmBC,OAAnB,CAAhB;AACA;;AACJ,WAAK,EAAL;AAAS;AACLO,QAAAA,MAAM,CAACkC,MAAP,GAAgBvC,IAAI,CAACrB,KAArB;AACA;;AACJ,WAAK,EAAL;AAAS;AACL0B,QAAAA,MAAM,CAACmC,UAAP,GAAoB1B,IAAI,CAAC2B,EAAL,GAAU,GAAV,GAAgBzC,IAAI,CAACrB,KAAzC;AACA;;AACJ,WAAK,EAAL;AAAS;AACL0D,QAAAA,QAAQ,GAAGvB,IAAI,CAAC2B,EAAL,GAAU,GAAV,GAAgBzC,IAAI,CAACrB,KAAhC;AACA,YAAG0D,QAAQ,GAAGhC,MAAM,CAACmC,UAArB,EACInC,MAAM,CAACqC,WAAP,GAAqBL,QAAQ,GAAG,IAAIvB,IAAI,CAAC2B,EAApB,GAAyBpC,MAAM,CAACmC,UAArD,CADJ,KAGInC,MAAM,CAACqC,WAAP,GAAqBL,QAAQ,GAAGhC,MAAM,CAACmC,UAAvC;AACJnC,QAAAA,MAAM,CAACgC,QAAP,GAAkBA,QAAlB;AACA;;AACJ;AAAS;AACLN,QAAAA,OAAO,CAAC3B,2BAAR,CAAoCC,MAApC,EAA4CL,IAA5C;AACA;AApBR;;AAsBAA,IAAAA,IAAI,GAAGF,OAAO,CAACzB,IAAR,EAAP;AACH;;AACD,SAAOgC,MAAP;AACH,CAhCD;;;;;;;;;ACNA;;;;;;AAEe,SAASmB,YAAT,GAAwB,CAAE;;AAEzCA,YAAY,CAACC,aAAb,GAA6B,WAA7B;;AAEAD,YAAY,CAACpD,SAAb,CAAuBsD,WAAvB,GAAqC,UAAS5B,OAAT,EAAkBE,IAAlB,EAAwB;AACzD,MAAIK,MAAJ;AACFA,EAAAA,MAAM,GAAG;AAAEC,IAAAA,IAAI,EAAEN,IAAI,CAACrB;AAAb,GAAT;AACAqB,EAAAA,IAAI,GAAGF,OAAO,CAACzB,IAAR,EAAP;;AACA,SAAM2B,IAAI,KAAK,KAAf,EAAsB;AACrB,QAAGA,IAAI,CAACvB,IAAL,KAAc,CAAjB,EAAoB;;AAEpB,YAAOuB,IAAI,CAACvB,IAAZ;AACC,WAAK,CAAL;AAAQ;AACP4B,QAAAA,MAAM,CAAC6D,KAAP,GAAelE,IAAI,CAACrB,KAApB;AACA;;AACD,WAAK,EAAL;AAAS;AACR0B,QAAAA,MAAM,CAAC8D,WAAP,GAAqBpC,OAAO,CAAClC,UAAR,CAAmBC,OAAnB,CAArB;AACA;;AACD,WAAK,EAAL;AACCO,QAAAA,MAAM,CAAC+D,YAAP,GAAsBrC,OAAO,CAAClC,UAAR,CAAmBC,OAAnB,CAAtB;AACA;;AACD,WAAK,EAAL;AAAS;AACRO,QAAAA,MAAM,CAACgE,cAAP,GAAwBtC,OAAO,CAAClC,UAAR,CAAmBC,OAAnB,CAAxB;AACA;;AACD,WAAK,EAAL;AAAS;AACRO,QAAAA,MAAM,CAACiE,qBAAP,GAA+BvC,OAAO,CAAClC,UAAR,CAAmBC,OAAnB,CAA/B;AACA;;AACD,WAAK,EAAL;AAAS;AACRO,QAAAA,MAAM,CAACkE,qBAAP,GAA+BxC,OAAO,CAAClC,UAAR,CAAmBC,OAAnB,CAA/B;AACA;;AACD,WAAK,EAAL;AAAS;AACRO,QAAAA,MAAM,CAACmE,qBAAP,GAA+BzC,OAAO,CAAClC,UAAR,CAAmBC,OAAnB,CAA/B;AACA;;AACD,WAAK,EAAL;AAAS;AACRO,QAAAA,MAAM,CAACoE,QAAP,GAAkB1C,OAAO,CAAClC,UAAR,CAAmBC,OAAnB,CAAlB;AACA;;AACD,WAAK,EAAL;AAAS;AACRO,QAAAA,MAAM,CAACqE,aAAP,GAAuB1E,IAAI,CAACrB,KAA5B;AACA;;AACD,WAAK,EAAL;AAAS;AACR0B,QAAAA,MAAM,CAACsE,eAAP,GAAyB3E,IAAI,CAACrB,KAA9B;AACA;;AACD,WAAK,EAAL;AAAS;AACR0B,QAAAA,MAAM,CAACuE,iBAAP,GAA2B5E,IAAI,CAACrB,KAAhC;AACA;;AACD,WAAK,CAAL;AAAQ;AACP0B,QAAAA,MAAM,CAACwC,IAAP,GAAc7C,IAAI,CAACrB,KAAnB;AACA;;AACD,WAAK,EAAL;AAAS;AACR0B,QAAAA,MAAM,CAACwE,KAAP,GAAe7E,IAAI,CAACrB,KAApB;AACA;;AACD;AAAS;AACRoD,QAAAA,OAAO,CAAC3B,2BAAR,CAAoCC,MAApC,EAA4CL,IAA5C;AACA;AA1CF;;AA4CAA,IAAAA,IAAI,GAAGF,OAAO,CAACzB,IAAR,EAAP;AACA;;AAED,SAAOgC,MAAP;AACD,CAvDD;;;;;;;;;ACNA;;;;;;AAEe,SAASmB,YAAT,GAAwB,CAAE;;AAEzCA,YAAY,CAACC,aAAb,GAA6B,SAA7B;;AAEAD,YAAY,CAACpD,SAAb,CAAuBsD,WAAvB,GAAqC,UAAS5B,OAAT,EAAkBE,IAAlB,EAAwB;AACzD,MAAIK,MAAJ;AACAA,EAAAA,MAAM,GAAG;AAAEC,IAAAA,IAAI,EAAEN,IAAI,CAACrB;AAAb,GAAT;AACAqB,EAAAA,IAAI,GAAGF,OAAO,CAACzB,IAAR,EAAP;;AACA,SAAM2B,IAAI,KAAK,KAAf,EAAsB;AAClB,QAAGA,IAAI,CAACvB,IAAL,KAAc,CAAjB,EAAoB;;AAEpB,YAAOuB,IAAI,CAACvB,IAAZ;AACI,WAAK,EAAL;AACI4B,QAAAA,MAAM,CAACiC,MAAP,GAAgBP,OAAO,CAAClC,UAAR,CAAmBC,OAAnB,CAAhB;AACA;;AACJ,WAAK,EAAL;AACIO,QAAAA,MAAM,CAACyE,iBAAP,GAA2B/C,OAAO,CAAClC,UAAR,CAAmBC,OAAnB,CAA3B;AACA;;AACJ,WAAK,EAAL;AACIO,QAAAA,MAAM,CAAC0E,SAAP,GAAmB/E,IAAI,CAACrB,KAAxB;AACA;;AACJ,WAAK,EAAL;AACI0B,QAAAA,MAAM,CAACmC,UAAP,GAAoBxC,IAAI,CAACrB,KAAzB;AACA;;AACJ,WAAK,EAAL;AACI0B,QAAAA,MAAM,CAACgC,QAAP,GAAkBrC,IAAI,CAACrB,KAAvB;AACA;;AACJ,WAAK,CAAL;AACI0B,QAAAA,MAAM,CAAC2E,IAAP,GAAchF,IAAI,CAACrB,KAAnB;AACA;;AACJ;AAAS;AACLoD,QAAAA,OAAO,CAAC3B,2BAAR,CAAoCC,MAApC,EAA4CL,IAA5C;AACA;AArBR;;AAwBAA,IAAAA,IAAI,GAAGF,OAAO,CAACzB,IAAR,EAAP;AACH;;AAED,SAAOgC,MAAP;AACH,CAnCD;;;;;;;;;ACNA;;;;;;AAEe,SAASmB,YAAT,GAAwB,CAAE;;AAEzCA,YAAY,CAACC,aAAb,GAA6B,QAA7B;;AAEAD,YAAY,CAACpD,SAAb,CAAuBsD,WAAvB,GAAqC,UAAS5B,OAAT,EAAkBE,IAAlB,EAAwB;AACzD,MAAIK,MAAJ;AACAA,EAAAA,MAAM,GAAG;AAAEC,IAAAA,IAAI,EAAEN,IAAI,CAACrB;AAAb,GAAT;AACAqB,EAAAA,IAAI,GAAGF,OAAO,CAACzB,IAAR,EAAP;;AACA,SAAM2B,IAAI,KAAK,KAAf,EAAsB;AAClB,QAAGA,IAAI,CAACvB,IAAL,KAAc,CAAjB,EAAoB;;AAEpB,YAAOuB,IAAI,CAACvB,IAAZ;AACI,WAAK,CAAL;AACI4B,QAAAA,MAAM,CAAC2E,IAAP,GAAchF,IAAI,CAACrB,KAAnB;AACA;;AACJ,WAAK,EAAL;AACI0B,QAAAA,MAAM,CAAC4E,MAAP,GAAgBjF,IAAI,CAACrB,KAArB;AACA;;AACJ,WAAK,EAAL;AACI0B,QAAAA,MAAM,CAAC6E,MAAP,GAAgBlF,IAAI,CAACrB,KAArB;AACA;;AACJ,WAAK,EAAL;AACI0B,QAAAA,MAAM,CAAC8E,MAAP,GAAgBnF,IAAI,CAACrB,KAArB;AACA;;AACJ,WAAK,EAAL;AACI0B,QAAAA,MAAM,CAAC+E,QAAP,GAAkBrD,OAAO,CAAClC,UAAR,CAAmBC,OAAnB,CAAlB;AACA;;AACJ,WAAK,EAAL;AACIO,QAAAA,MAAM,CAAC+C,QAAP,GAAkBpD,IAAI,CAACrB,KAAvB;AACA;;AACJ,WAAK,EAAL;AACI0B,QAAAA,MAAM,CAACgF,WAAP,GAAqBrF,IAAI,CAACrB,KAA1B;AACA;;AACJ,WAAK,EAAL;AACI0B,QAAAA,MAAM,CAACiF,QAAP,GAAkBtF,IAAI,CAACrB,KAAvB;AACA;;AACJ,WAAK,EAAL;AACI0B,QAAAA,MAAM,CAACkF,aAAP,GAAuBvF,IAAI,CAACrB,KAA5B;AACA;;AACJ,WAAK,EAAL;AACI0B,QAAAA,MAAM,CAACmF,UAAP,GAAoBxF,IAAI,CAACrB,KAAzB;AACA;;AACJ,WAAK,GAAL;AACI0B,QAAAA,MAAM,CAACoF,kBAAP,GAA4B1D,OAAO,CAAClC,UAAR,CAAmBC,OAAnB,CAA5B;AACA;;AACJ;AAAS;AACLiC,QAAAA,OAAO,CAAC3B,2BAAR,CAAoCC,MAApC,EAA4CL,IAA5C;AACA;AApCR;;AAsCAA,IAAAA,IAAI,GAAGF,OAAO,CAACzB,IAAR,EAAP;AACH;;AAED,SAAOgC,MAAP;AACH,CAjDD;;;;;;;;;ACNA;;;;;;AAEe,SAASmB,YAAT,GAAwB,CAAE;;AAEzCA,YAAY,CAACC,aAAb,GAA6B,MAA7B;;AAEAD,YAAY,CAACpD,SAAb,CAAuBsD,WAAvB,GAAqC,UAAS5B,OAAT,EAAkBE,IAAlB,EAAwB;AACzD,MAAIK,MAAM,GAAG;AAAEC,IAAAA,IAAI,EAAEN,IAAI,CAACrB,KAAb;AAAoBgD,IAAAA,QAAQ,EAAE;AAA9B,GAAb;AACA3B,EAAAA,IAAI,GAAGF,OAAO,CAACzB,IAAR,EAAP;;AACA,SAAM2B,IAAI,KAAK,KAAf,EAAsB;AAClB,QAAGA,IAAI,CAACvB,IAAL,KAAc,CAAjB,EAAoB;;AAEpB,YAAOuB,IAAI,CAACvB,IAAZ;AACI,WAAK,EAAL;AAAS;AACL4B,QAAAA,MAAM,CAACsB,QAAP,CAAgB+D,OAAhB,CAAwB3D,OAAO,CAAClC,UAAR,CAAmBC,OAAnB,CAAxB;AACA;;AACJ,WAAK,EAAL;AACIO,QAAAA,MAAM,CAACsB,QAAP,CAAgBL,IAAhB,CAAqBS,OAAO,CAAClC,UAAR,CAAmBC,OAAnB,CAArB;AACA;;AACJ,WAAK,GAAL;AACIO,QAAAA,MAAM,CAACoF,kBAAP,GAA4B1D,OAAO,CAAClC,UAAR,CAAmBC,OAAnB,CAA5B;AACA;;AACJ,WAAK,GAAL;AACI;;AACJ;AACIiC,QAAAA,OAAO,CAAC3B,2BAAR,CAAoCC,MAApC,EAA4CL,IAA5C;AACA;AAdR;;AAiBAA,IAAAA,IAAI,GAAGF,OAAO,CAACzB,IAAR,EAAP;AACH;;AACD,SAAOgC,MAAP;AACH,CA1BD;;;;;;;;;ACNA;;;;;;AAEe,SAASmB,YAAT,GAAwB,CAAE;;AAEzCA,YAAY,CAACC,aAAb,GAA6B,YAA7B;;AAEAD,YAAY,CAACpD,SAAb,CAAuBsD,WAAvB,GAAqC,UAAS5B,OAAT,EAAkBE,IAAlB,EAAwB;AACzD,MAAIK,MAAM,GAAG;AAAEC,IAAAA,IAAI,EAAEN,IAAI,CAACrB,KAAb;AAAoBgD,IAAAA,QAAQ,EAAE;AAA9B,GAAb;AAAA,MACIgE,gBAAgB,GAAG,CADvB;AAEA3F,EAAAA,IAAI,GAAGF,OAAO,CAACzB,IAAR,EAAP;;AACA,SAAM2B,IAAI,KAAK,KAAf,EAAsB;AAClB,QAAGA,IAAI,CAACvB,IAAL,KAAc,CAAjB,EAAoB;;AAEpB,YAAOuB,IAAI,CAACvB,IAAZ;AACI,WAAK,EAAL;AACI4B,QAAAA,MAAM,CAACuF,SAAP,GAAmB5F,IAAI,CAACrB,KAAxB;AACA;;AACJ,WAAK,EAAL;AACI0B,QAAAA,MAAM,CAACwF,KAAP,GAAe7F,IAAI,CAACrB,KAApB;AACA;;AACJ,WAAK,EAAL;AAAS;AACL0B,QAAAA,MAAM,CAACuB,KAAP,GAAgB,CAAC5B,IAAI,CAACrB,KAAL,GAAa,CAAd,MAAqB,CAArC;AACA0B,QAAAA,MAAM,CAACwB,4BAAP,GAAuC,CAAC7B,IAAI,CAACrB,KAAL,GAAa,GAAd,MAAuB,GAA9D;AACA;;AACJ,WAAK,EAAL;AACIgH,QAAAA,gBAAgB,GAAG3F,IAAI,CAACrB,KAAxB;AACA;;AACJ,WAAK,EAAL;AAAS;AACL0B,QAAAA,MAAM,CAACsB,QAAP,GAAkBmE,uBAAuB,CAACH,gBAAD,EAAmB7F,OAAnB,CAAzC;AACA;;AACJ,WAAK,EAAL;AACI,YAAGE,IAAI,CAACrB,KAAL,KAAe,CAAlB,EAAqB0B,MAAM,CAAC0F,KAAP,GAAe/F,IAAI,CAACrB,KAApB;AACrB;;AACJ,WAAK,GAAL;AACI0B,QAAAA,MAAM,CAAC0D,mBAAP,GAA6B/D,IAAI,CAACrB,KAAlC;AACA;;AACJ,WAAK,GAAL;AACI0B,QAAAA,MAAM,CAAC2D,mBAAP,GAA6BhE,IAAI,CAACrB,KAAlC;AACA;;AACJ,WAAK,GAAL;AACI0B,QAAAA,MAAM,CAAC4D,mBAAP,GAA6BjE,IAAI,CAACrB,KAAlC;AACA;;AACJ;AACIoD,QAAAA,OAAO,CAAC3B,2BAAR,CAAoCC,MAApC,EAA4CL,IAA5C;AACA;AA/BR;;AAiCAA,IAAAA,IAAI,GAAGF,OAAO,CAACzB,IAAR,EAAP;AACH;;AACD,SAAOgC,MAAP;AACH,CA3CD;;AA6CA,SAASyF,uBAAT,CAAiCE,CAAjC,EAAoClG,OAApC,EAA6C;AACzC,MAAG,CAACkG,CAAD,IAAMA,CAAC,IAAI,CAAd,EAAiB,MAAMxH,KAAK,CAAC,oCAAD,CAAX;AACjB,MAAImD,QAAQ,GAAG,EAAf;AAAA,MAAmBK,CAAnB;AACA,MAAIC,eAAe,GAAG,KAAtB;AACA,MAAIC,gBAAgB,GAAG,KAAvB;AACA,MAAIlC,IAAI,GAAGF,OAAO,CAAChB,aAAnB;;AAEA,OAAIkD,CAAC,GAAG,CAAR,EAAWA,CAAC,GAAGgE,CAAf,EAAkBhE,CAAC,EAAnB,EAAuB;AACnB,QAAII,MAAM,GAAG,EAAb;;AACA,WAAMpC,IAAI,KAAK,KAAf,EAAsB;AAClB,UAAGA,IAAI,CAACvB,IAAL,KAAc,CAAd,IAAmByD,gBAAtB,EAAwC;;AAExC,cAAOlC,IAAI,CAACvB,IAAZ;AACI,aAAK,EAAL;AAAS;AACL,cAAGwD,eAAH,EAAoB;AAChBC,YAAAA,gBAAgB,GAAG,IAAnB;AACA;AACH;;AACDE,UAAAA,MAAM,CAACnC,CAAP,GAAWD,IAAI,CAACrB,KAAhB;AACAsD,UAAAA,eAAe,GAAG,IAAlB;AACA;;AACJ,aAAK,EAAL;AAAS;AACLG,UAAAA,MAAM,CAAClC,CAAP,GAAWF,IAAI,CAACrB,KAAhB;AACA;;AACJ,aAAK,EAAL;AAAS;AACLyD,UAAAA,MAAM,CAACjC,CAAP,GAAWH,IAAI,CAACrB,KAAhB;AACA;;AACJ,aAAK,EAAL;AAAS;AACLyD,UAAAA,MAAM,CAAC6D,UAAP,GAAoBjG,IAAI,CAACrB,KAAzB;AACA;;AACJ,aAAK,EAAL;AAAS;AACLyD,UAAAA,MAAM,CAAC8D,QAAP,GAAkBlG,IAAI,CAACrB,KAAvB;AACA;;AACJ,aAAK,EAAL;AAAS;AACL,cAAGqB,IAAI,CAACrB,KAAL,IAAc,CAAjB,EAAoByD,MAAM,CAAC+D,KAAP,GAAenG,IAAI,CAACrB,KAApB;AACpB;;AACJ;AACI;AACA,cAAIsD,eAAJ,EAAqB;AACjBN,YAAAA,QAAQ,CAACL,IAAT,CAAcc,MAAd;AACH;;AACDtC,UAAAA,OAAO,CAACd,MAAR;AACA,iBAAO2C,QAAP;AA9BR;;AAgCA3B,MAAAA,IAAI,GAAGF,OAAO,CAACzB,IAAR,EAAP;AACH,KAtCkB,CAuCnB;;;AACAsD,IAAAA,QAAQ,CAACL,IAAT,CAAcc,MAAd;AACAH,IAAAA,eAAe,GAAG,KAAlB;AACAC,IAAAA,gBAAgB,GAAG,KAAnB;AACH;;AACDpC,EAAAA,OAAO,CAACd,MAAR;AACA,SAAO2C,QAAP;AACH;;AAAA;;;;;;;;;ACxGD;;;;;;AAEe,SAASH,YAAT,GAAwB,CAAE;;AAEzCA,YAAY,CAACC,aAAb,GAA6B,OAA7B;;AAEAD,YAAY,CAACpD,SAAb,CAAuBsD,WAAvB,GAAqC,UAAS5B,OAAT,EAAkBE,IAAlB,EAAwB;AACzD,MAAIK,MAAM,GAAG;AAAEC,IAAAA,IAAI,EAAEN,IAAI,CAACrB;AAAb,GAAb;AACFqB,EAAAA,IAAI,GAAGF,OAAO,CAACzB,IAAR,EAAP;;AACE,SAAM2B,IAAI,KAAK,KAAf,EAAsB;AAClB,QAAGA,IAAI,CAACvB,IAAL,KAAc,CAAjB,EAAoB;;AAEpB,YAAOuB,IAAI,CAACvB,IAAZ;AACI,WAAK,CAAL;AACI4B,QAAAA,MAAM,CAACwC,IAAP,GAAcxC,MAAM,CAACwC,IAAP,IAAe7C,IAAI,CAACrB,KAAlC,GAA0C0B,MAAM,CAACwC,IAAP,GAAc7C,IAAI,CAACrB,KAA7D;AACA;;AACJ,WAAK,CAAL;AACI0B,QAAAA,MAAM,CAACwC,IAAP,GAAcxC,MAAM,CAACwC,IAAP,IAAe7C,IAAI,CAACrB,KAAlC,GAA0C0B,MAAM,CAACwC,IAAP,GAAc7C,IAAI,CAACrB,KAA7D;AACA;;AACJ,WAAK,EAAL;AACI0B,QAAAA,MAAM,CAAC+E,QAAP,GAAkBrD,OAAO,CAAClC,UAAR,CAAmBC,OAAnB,CAAlB;AACA;;AACJ,WAAK,EAAL;AACI;AACAO,QAAAA,MAAM,CAAC+F,MAAP,GAAgBpG,IAAI,CAACrB,KAArB;AACA;;AACJ,WAAK,EAAL;AACI0B,QAAAA,MAAM,CAAC0F,KAAP,GAAe/F,IAAI,CAACrB,KAApB;AACA;;AACJ,WAAK,EAAL;AACI0B,QAAAA,MAAM,CAAC+C,QAAP,GAAkBpD,IAAI,CAACrB,KAAvB;AACA;;AACJ,WAAK,EAAL;AACI0B,QAAAA,MAAM,CAACsE,eAAP,GAAyB3E,IAAI,CAACrB,KAA9B;AACA;;AACJ,WAAK,EAAL;AACI0B,QAAAA,MAAM,CAACgG,gBAAP,GAA0BrG,IAAI,CAACrB,KAA/B;AACA;;AACJ;AACIoD,QAAAA,OAAO,CAAC3B,2BAAR,CAAoCC,MAApC,EAA4CL,IAA5C;AACA;AA5BR;;AA8BAA,IAAAA,IAAI,GAAGF,OAAO,CAACzB,IAAR,EAAP;AACH;;AACD,SAAOgC,MAAP;AACH,CAvCD;;;;;;;;;ACNA;;;;;;AAEe,SAASmB,YAAT,GAAwB,CAAE;;AAEzCA,YAAY,CAACC,aAAb,GAA6B,OAA7B;;AAEAD,YAAY,CAACpD,SAAb,CAAuBsD,WAAvB,GAAqC,UAAS5B,OAAT,EAAkBE,IAAlB,EAAwB;AACzD,MAAIK,MAAJ;AACAA,EAAAA,MAAM,GAAG;AAAEC,IAAAA,IAAI,EAAEN,IAAI,CAACrB;AAAb,GAAT;AACAqB,EAAAA,IAAI,GAAGF,OAAO,CAACzB,IAAR,EAAP;;AACA,SAAM2B,IAAI,KAAK,KAAf,EAAsB;AAClB,QAAGA,IAAI,CAACvB,IAAL,KAAc,CAAjB,EAAoB;;AAEpB,YAAOuB,IAAI,CAACvB,IAAZ;AACI,WAAK,EAAL;AACI4B,QAAAA,MAAM,CAAC+E,QAAP,GAAkBrD,OAAO,CAAClC,UAAR,CAAmBC,OAAnB,CAAlB;AACA;;AACJ,WAAK,EAAL;AACIO,QAAAA,MAAM,CAAC6C,SAAP,GAAmBlD,IAAI,CAACrB,KAAxB;AACA;;AACJ,WAAK,GAAL;AACI0B,QAAAA,MAAM,CAACoF,kBAAP,GAA4B1D,OAAO,CAAClC,UAAR,CAAmBC,OAAnB,CAA5B;AACA;;AACJ,WAAK,GAAL;AACI;;AACJ;AAAS;AACLiC,QAAAA,OAAO,CAAC3B,2BAAR,CAAoCC,MAApC,EAA4CL,IAA5C;AACA;AAdR;;AAgBAA,IAAAA,IAAI,GAAGF,OAAO,CAACzB,IAAR,EAAP;AACH;;AAED,SAAOgC,MAAP;AACH,CA3BD;;;;;;;;;ACNA;;;;;;AAEe,SAASmB,YAAT,GAAwB,CAAE;;AAEzCA,YAAY,CAACC,aAAb,GAA6B,QAA7B;;AAEAD,YAAY,CAACpD,SAAb,CAAuBsD,WAAvB,GAAqC,UAAS5B,OAAT,EAAkBE,IAAlB,EAAwB;AACzD,MAAIK,MAAM,GAAG;AAAEC,IAAAA,IAAI,EAAEN,IAAI,CAACrB;AAAb,GAAb;AACAqB,EAAAA,IAAI,GAAGF,OAAO,CAACzB,IAAR,EAAP;;AACA,SAAM2B,IAAI,KAAK,KAAf,EAAsB;AAClB,QAAGA,IAAI,CAACvB,IAAL,KAAc,CAAjB,EAAoB;;AAEpB,YAAOuB,IAAI,CAACvB,IAAZ;AACI,WAAK,EAAL;AAAS;AACL4B,QAAAA,MAAM,CAACJ,CAAP,GAAWD,IAAI,CAACrB,KAAhB;AACA;;AACJ,WAAK,EAAL;AAAS;AACL0B,QAAAA,MAAM,CAACH,CAAP,GAAWF,IAAI,CAACrB,KAAhB;AACA;;AACJ,WAAK,EAAL;AAAS;AACL0B,QAAAA,MAAM,CAACF,CAAP,GAAWH,IAAI,CAACrB,KAAhB;AACA;;AACJ,WAAK,EAAL;AAAS;AACL;;AACJ,WAAK,EAAL;AAAS;AACL;;AACJ,WAAK,EAAL;AAAS;AACL,YAAGqB,IAAI,CAACrB,KAAL,IAAc,CAAjB,EAAoB0B,MAAM,CAAC8F,KAAP,GAAenG,IAAI,CAACrB,KAApB;AACpB;;AACJ,WAAK,EAAL;AAAS;AACL0B,QAAAA,MAAM,CAACiG,kBAAP,GAA4B,CAACtG,IAAI,CAACrB,KAAL,GAAa,CAAd,MAAqB,CAAjD;AACA0B,QAAAA,MAAM,CAACkG,eAAP,GAAyB,CAACvG,IAAI,CAACrB,KAAL,GAAa,CAAd,MAAqB,CAA9C;AACA0B,QAAAA,MAAM,CAACmG,YAAP,GAAsB,CAACxG,IAAI,CAACrB,KAAL,GAAa,CAAd,MAAqB,CAA3C;AACA0B,QAAAA,MAAM,CAACoG,kBAAP,GAA4B,CAACzG,IAAI,CAACrB,KAAL,GAAa,EAAd,MAAsB,CAAlD;AACA0B,QAAAA,MAAM,CAACqG,oBAAP,GAA8B,CAAC1G,IAAI,CAACrB,KAAL,GAAa,EAAd,MAAsB,CAApD;AACA0B,QAAAA,MAAM,CAACsG,kBAAP,GAA4B,CAAC3G,IAAI,CAACrB,KAAL,GAAa,EAAd,MAAsB,CAAlD;AACA0B,QAAAA,MAAM,CAACuG,kBAAP,GAA4B,CAAC5G,IAAI,CAACrB,KAAL,GAAa,GAAd,MAAuB,CAAnD;AACA;;AACJ,WAAK,EAAL;AAAS;AACL;;AACJ,WAAK,EAAL;AAAS;AACL0B,QAAAA,MAAM,CAACwG,KAAP,GAAe7G,IAAI,CAACrB,KAApB;AACA;;AACJ,WAAK,EAAL;AAAS;AACL0B,QAAAA,MAAM,CAACyG,KAAP,GAAe9G,IAAI,CAACrB,KAApB;AACA;;AACJ,WAAK,EAAL;AAAS;AACL0B,QAAAA,MAAM,CAAC0G,KAAP,GAAe/G,IAAI,CAACrB,KAApB;AACA;;AACJ,WAAK,EAAL;AAAS;AACL0B,QAAAA,MAAM,CAAC2G,KAAP,GAAehH,IAAI,CAACrB,KAApB;AACA;;AACJ;AACIoD,QAAAA,OAAO,CAAC3B,2BAAR,CAAoCC,MAApC,EAA4CL,IAA5C;AACA;AA1CR;;AA6CAA,IAAAA,IAAI,GAAGF,OAAO,CAACzB,IAAR,EAAP;AACH;;AACD,SAAOgC,MAAP;AACH,CAtDD;;;;;;;;;ACNA;;AACA;;;;;;;;AAEe,SAASmB,YAAT,GAAwB,CAAE;;AAEzCA,YAAY,CAACC,aAAb,GAA6B,UAA7B;;AAEAD,YAAY,CAACpD,SAAb,CAAuBsD,WAAvB,GAAqC,UAAS5B,OAAT,EAAkBE,IAAlB,EAAwB;AACzD,MAAIK,MAAM,GAAG;AAAEC,IAAAA,IAAI,EAAEN,IAAI,CAACrB,KAAb;AAAoBgD,IAAAA,QAAQ,EAAE;AAA9B,GAAb;AACF3B,EAAAA,IAAI,GAAGF,OAAO,CAACzB,IAAR,EAAP;;AACA,SAAM2B,IAAI,KAAK,KAAf,EAAsB;AACrB,QAAGA,IAAI,CAACvB,IAAL,KAAc,CAAjB,EAAoB;;AAEpB,YAAOuB,IAAI,CAACvB,IAAZ;AACa,WAAK,EAAL;AAAS;AACL;;AAChB,WAAK,EAAL;AAAS;AACO;;AAChB,WAAK,EAAL;AAAS;AACO;;AAChB,WAAK,EAAL;AAAS;AACO4B,QAAAA,MAAM,CAAC6C,SAAP,GAAmBlD,IAAI,CAACrB,KAAxB;AACf;;AACD,WAAK,EAAL;AAAS;AACO;;AAChB,WAAK,EAAL;AAAS;AACR;;AACD,WAAK,EAAL;AACC0B,QAAAA,MAAM,CAACuB,KAAP,GAAe,CAAC5B,IAAI,CAACrB,KAAL,GAAa,CAAd,MAAqB,CAApC;AACe0B,QAAAA,MAAM,CAAC4G,wBAAP,GAAkC,CAACjH,IAAI,CAACrB,KAAL,GAAa,CAAd,MAAqB,CAAvD;AACA0B,QAAAA,MAAM,CAAC6G,yBAAP,GAAmC,CAAClH,IAAI,CAACrB,KAAL,GAAa,CAAd,MAAqB,CAAxD;AACA0B,QAAAA,MAAM,CAAC8G,YAAP,GAAsB,CAACnH,IAAI,CAACrB,KAAL,GAAa,CAAd,MAAqB,CAA3C;AACA0B,QAAAA,MAAM,CAAC+G,eAAP,GAAyB,CAACpH,IAAI,CAACrB,KAAL,GAAa,EAAd,MAAsB,CAA/C;AACA0B,QAAAA,MAAM,CAACgH,qBAAP,GAA+B,CAACrH,IAAI,CAACrB,KAAL,GAAa,EAAd,MAAsB,CAArD,CANhB,CAMwE;;AACxD0B,QAAAA,MAAM,CAACiH,cAAP,GAAwB,CAACtH,IAAI,CAACrB,KAAL,GAAa,EAAd,MAAsB,CAA9C;AACA0B,QAAAA,MAAM,CAACwB,4BAAP,GAAsC,CAAC7B,IAAI,CAACrB,KAAL,GAAa,GAAd,MAAuB,CAA7D;AACf;;AACD,WAAK,EAAL;AAAS;AACO;;AAChB,WAAK,EAAL;AAAS;AACO;;AAChB,WAAK,EAAL;AAAS;AACO;;AAChB,WAAK,EAAL;AAAS;AACO;;AAChB,WAAK,EAAL;AAAS;AACR;;AACD,WAAK,GAAL;AACgB0B,QAAAA,MAAM,CAACoF,kBAAP,GAA4B1D,OAAO,CAAClC,UAAR,CAAmBC,OAAnB,CAA5B;AACf;;AACD;AACCiC,QAAAA,OAAO,CAAC3B,2BAAR,CAAoCC,MAApC,EAA4CL,IAA5C;AACA;AAvCF;;AAyCAA,IAAAA,IAAI,GAAGF,OAAO,CAACzB,IAAR,EAAP;AACA;;AAEDgC,EAAAA,MAAM,CAACsB,QAAP,GAAkB4F,qBAAqB,CAACzH,OAAD,EAAUE,IAAV,CAAvC;AAEA,SAAOK,MAAP;AACD,CArDD;;AAuDA,SAASkH,qBAAT,CAA+BzH,OAA/B,EAAwCE,IAAxC,EAA8C;AAC1C,MAAIwH,YAAY,GAAG,IAAIC,eAAJ,EAAnB;AAEA,MAAI9F,QAAQ,GAAG,EAAf;;AACA,SAAO,CAAC7B,OAAO,CAACX,KAAR,EAAR,EAAyB;AACrB,QAAIa,IAAI,CAACvB,IAAL,KAAc,CAAlB,EAAqB;AACjB,UAAIuB,IAAI,CAACrB,KAAL,KAAe,QAAnB,EAA6B;AACzBgD,QAAAA,QAAQ,CAACL,IAAT,CAAckG,YAAY,CAAC9F,WAAb,CAAyB5B,OAAzB,EAAkCE,IAAlC,CAAd;AACAA,QAAAA,IAAI,GAAGF,OAAO,CAAChB,aAAf;AACH,OAHD,MAGO,IAAIkB,IAAI,CAACrB,KAAL,KAAe,QAAnB,EAA6B;AAChC+I,QAAAA,WAAW,CAAC5H,OAAD,EAAUE,IAAV,CAAX;AACA;AACH;AACJ;AACJ;;AACD,SAAO2B,QAAP;AACH;;AAAA;;AAED,SAAS+F,WAAT,CAAqB5H,OAArB,EAA8BE,IAA9B,EAAoC;AAChC,MAAIK,MAAM,GAAG;AAAEC,IAAAA,IAAI,EAAEN,IAAI,CAACrB;AAAb,GAAb;AACAqB,EAAAA,IAAI,GAAGF,OAAO,CAACzB,IAAR,EAAP;;AACA,SAAM2B,IAAI,IAAI,KAAd,EAAqB;AACjB,QAAIA,IAAI,CAACvB,IAAL,IAAa,CAAjB,EAAoB;AACpBsD,IAAAA,OAAO,CAAC3B,2BAAR,CAAoCC,MAApC,EAA4CL,IAA5C;AACAA,IAAAA,IAAI,GAAGF,OAAO,CAACzB,IAAR,EAAP;AACH;;AAED,SAAOgC,MAAP;AACH;;AAAA;;;;;;;;;AC1FD;;;;;;AAEe,SAASmB,YAAT,GAAwB,CAAE;;AAEzCA,YAAY,CAACC,aAAb,GAA6B,OAA7B;;AAEAD,YAAY,CAACpD,SAAb,CAAuBsD,WAAvB,GAAqC,UAAS5B,OAAT,EAAkB6H,YAAlB,EAAgC;AACjE,MAAItH,MAAJ;AACAA,EAAAA,MAAM,GAAG;AAAEC,IAAAA,IAAI,EAAEqH,YAAY,CAAChJ;AAArB,GAAT;AACA0B,EAAAA,MAAM,CAACuH,MAAP,GAAgB,EAAhB;AACAD,EAAAA,YAAY,GAAG7H,OAAO,CAACzB,IAAR,EAAf;;AACA,SAAMsJ,YAAY,KAAK,KAAvB,EAA8B;AAC1B,QAAGA,YAAY,CAAClJ,IAAb,KAAsB,CAAzB,EAA4B;;AAE5B,YAAOkJ,YAAY,CAAClJ,IAApB;AACI,WAAK,EAAL;AACI4B,QAAAA,MAAM,CAACuH,MAAP,CAAc,CAAd,IAAmB7F,OAAO,CAAClC,UAAR,CAAmBC,OAAnB,CAAnB;AACA;;AACJ,WAAK,EAAL;AACIO,QAAAA,MAAM,CAACuH,MAAP,CAAc,CAAd,IAAmB7F,OAAO,CAAClC,UAAR,CAAmBC,OAAnB,CAAnB;AACA;;AACJ,WAAK,EAAL;AACIO,QAAAA,MAAM,CAACuH,MAAP,CAAc,CAAd,IAAmB7F,OAAO,CAAClC,UAAR,CAAmBC,OAAnB,CAAnB;AACA;;AACJ,WAAK,EAAL;AACIO,QAAAA,MAAM,CAACuH,MAAP,CAAc,CAAd,IAAmB7F,OAAO,CAAClC,UAAR,CAAmBC,OAAnB,CAAnB;AACA;;AACJ,WAAK,GAAL;AACIO,QAAAA,MAAM,CAACoF,kBAAP,GAA4B1D,OAAO,CAAClC,UAAR,CAAmBC,OAAnB,CAA5B;AACA;;AACJ;AAAS;AACLiC,QAAAA,OAAO,CAAC3B,2BAAR,CAAoCC,MAApC,EAA4CsH,YAA5C;AACA;AAlBR;;AAoBAA,IAAAA,YAAY,GAAG7H,OAAO,CAACzB,IAAR,EAAf;AACH;;AAED,SAAOgC,MAAP;AACH,CAhCD;;;;;;;;;ACNA;;;;;;AAEe,SAASmB,YAAT,GAAwB,CAAE;;AAEzCA,YAAY,CAACC,aAAb,GAA6B,QAA7B;;AAEAD,YAAY,CAACpD,SAAb,CAAuBsD,WAAvB,GAAqC,UAAS5B,OAAT,EAAkBE,IAAlB,EAAwB;AACzD,MAAIK,MAAJ;AACAA,EAAAA,MAAM,GAAG;AAAEC,IAAAA,IAAI,EAAEN,IAAI,CAACrB;AAAb,GAAT;AACAqB,EAAAA,IAAI,GAAGF,OAAO,CAACzB,IAAR,EAAP;;AACA,SAAM2B,IAAI,KAAK,KAAf,EACA;AACI,QAAGA,IAAI,CAACvB,IAAL,KAAc,CAAjB,EAAoB;;AAEpB,YAAOuB,IAAI,CAACvB,IAAZ;AACI,WAAK,EAAL;AACI,YAAI,CAAC4B,MAAM,CAACwH,aAAZ,EAA2BxH,MAAM,CAACwH,aAAP,GAAuB,EAAvB;AAC3BxH,QAAAA,MAAM,CAACwH,aAAP,CAAqBvG,IAArB,CAA0BS,OAAO,CAAClC,UAAR,CAAmBC,OAAnB,CAA1B;AACA;;AACJ,WAAK,EAAL;AACI,YAAI,CAACO,MAAM,CAACyH,SAAZ,EAAuBzH,MAAM,CAACyH,SAAP,GAAmB,EAAnB;AACvBzH,QAAAA,MAAM,CAACyH,SAAP,CAAiBxG,IAAjB,CAAsBS,OAAO,CAAClC,UAAR,CAAmBC,OAAnB,CAAtB;AACA;;AACJ,WAAK,EAAL;AACIO,QAAAA,MAAM,CAAC0H,YAAP,GAAsBhG,OAAO,CAAClC,UAAR,CAAmBC,OAAnB,CAAtB;AACA;;AACJ,WAAK,EAAL;AACIO,QAAAA,MAAM,CAAC2H,UAAP,GAAoBjG,OAAO,CAAClC,UAAR,CAAmBC,OAAnB,CAApB;AACA;;AACJ,WAAK,EAAL;AACI,YAAI,CAACO,MAAM,CAAC4H,UAAZ,EAAwB5H,MAAM,CAAC4H,UAAP,GAAoB,EAApB;AACxB5H,QAAAA,MAAM,CAAC4H,UAAP,CAAkB3G,IAAlB,CAAuBtB,IAAI,CAACrB,KAA5B;AACA;;AACJ,WAAK,EAAL;AACI,YAAI,CAACqB,IAAI,CAACrB,KAAL,GAAa,CAAd,KAAoB,CAAxB,EAA2B0B,MAAM,CAAC6H,MAAP,GAAgB,IAAhB;AAC3B,YAAI,CAAClI,IAAI,CAACrB,KAAL,GAAa,CAAd,KAAoB,CAAxB,EAA2B0B,MAAM,CAAC8H,QAAP,GAAkB,IAAlB;AAC3B,YAAI,CAACnI,IAAI,CAACrB,KAAL,GAAa,CAAd,KAAoB,CAAxB,EAA2B0B,MAAM,CAAC+H,QAAP,GAAkB,IAAlB;AAC3B,YAAI,CAACpI,IAAI,CAACrB,KAAL,GAAa,CAAd,KAAoB,CAAxB,EAA2B0B,MAAM,CAACgI,MAAP,GAAgB,IAAhB;;AAC3B,YAAI,CAACrI,IAAI,CAACrB,KAAL,GAAa,EAAd,KAAqB,CAAzB,EACA;AACI0B,UAAAA,MAAM,CAACgI,MAAP,GAAgB,IAAhB;AACAhI,UAAAA,MAAM,CAACiI,MAAP,GAAgB,IAAhB;AACH;;AACD;;AAEJ,WAAK,EAAL;AACIjI,QAAAA,MAAM,CAACkI,mBAAP,GAA6BvI,IAAI,CAACrB,KAAlC;AACA;;AACJ,WAAK,EAAL;AACI0B,QAAAA,MAAM,CAACmI,aAAP,GAAuBxI,IAAI,CAACrB,KAA5B;AACA;;AACJ,WAAK,EAAL;AACI0B,QAAAA,MAAM,CAACoI,qBAAP,GAA+BzI,IAAI,CAACrB,KAApC;AACA;;AACJ,WAAK,EAAL;AACI0B,QAAAA,MAAM,CAACqI,iBAAP,GAA2B1I,IAAI,CAACrB,KAAhC;AACA;;AACJ,WAAK,GAAL;AACI0B,QAAAA,MAAM,CAACsI,YAAP,GAAsB5G,OAAO,CAAClC,UAAR,CAAmBC,OAAnB,CAAtB;AACA;;AACJ;AACIiC,QAAAA,OAAO,CAAC3B,2BAAR,CAAoCC,MAApC,EAA4CL,IAA5C;AACA;AAhDR;;AAkDAA,IAAAA,IAAI,GAAGF,OAAO,CAACzB,IAAR,EAAP;AACH;;AAED,SAAOgC,MAAP;AACH,CA9DD;;;;;;;;;ACNA;;;;;;AAEe,SAASmB,YAAT,GAAwB,CAAE;;AAEzCA,YAAY,CAACC,aAAb,GAA6B,MAA7B;;AAEAD,YAAY,CAACpD,SAAb,CAAuBsD,WAAvB,GAAqC,UAAS5B,OAAT,EAAkBE,IAAlB,EAAwB;AACzD,MAAIK,MAAJ;AACFA,EAAAA,MAAM,GAAG;AAAEC,IAAAA,IAAI,EAAEN,IAAI,CAACrB;AAAb,GAAT;AACEqB,EAAAA,IAAI,GAAGF,OAAO,CAACzB,IAAR,EAAP;;AACA,SAAM2B,IAAI,KAAK,KAAf,EAAsB;AAClB,QAAGA,IAAI,CAACvB,IAAL,KAAc,CAAjB,EAAoB;;AACpB,YAAOuB,IAAI,CAACvB,IAAZ;AACI,WAAK,EAAL;AAAS;AACL4B,QAAAA,MAAM,CAAC2C,UAAP,GAAoBjB,OAAO,CAAClC,UAAR,CAAmBC,OAAnB,CAApB;AACA;;AACJ,WAAK,EAAL;AAAS;AACLO,QAAAA,MAAM,CAAC4C,QAAP,GAAkBlB,OAAO,CAAClC,UAAR,CAAmBC,OAAnB,CAAlB;AACA;;AACJ,WAAK,EAAL;AAAS;AACLO,QAAAA,MAAM,CAAC8C,UAAP,GAAoBnD,IAAI,CAACrB,KAAzB;AACA;;AACJ,WAAK,EAAL;AACI0B,QAAAA,MAAM,CAAC4E,MAAP,GAAgBjF,IAAI,CAACrB,KAArB;AACA;;AACJ,WAAK,EAAL;AAAS;AACL0B,QAAAA,MAAM,CAAC+C,QAAP,GAAkBpD,IAAI,CAACrB,KAAvB;AACA;;AACJ,WAAK,CAAL;AAAQ;AACJ0B,QAAAA,MAAM,CAACwC,IAAP,GAAc7C,IAAI,CAACrB,KAAnB;AACA;AACJ;;AACA,WAAK,EAAL;AAAS;AACL0B,QAAAA,MAAM,CAACuI,MAAP,GAAgB5I,IAAI,CAACrB,KAArB;AACA;;AACJ,WAAK,EAAL;AAAS;AACL0B,QAAAA,MAAM,CAACwI,MAAP,GAAgB7I,IAAI,CAACrB,KAArB;AACA;;AACJ;AAAS;AACLoD,QAAAA,OAAO,CAAC3B,2BAAR,CAAoCC,MAApC,EAA4CL,IAA5C;AACA;AA5BR;;AA8BAA,IAAAA,IAAI,GAAGF,OAAO,CAACzB,IAAR,EAAP;AACH;;AACD,SAAOgC,MAAP;AACH,CAvCD;;;ACPA;AACA;AACA;AACA;AACA;AACA;AACC,WAAUyI,IAAV,EAAgBC,UAAhB,EAA4B;AACzB;;AACA,MAAI,OAAOC,MAAP,KAAkB,UAAlB,IAAgCA,MAAM,CAACC,GAA3C,EAAgD;AAC5CD,IAAAA,MAAM,CAACD,UAAD,CAAN;AACH,GAFD,MAEO,IAAI,OAAOG,MAAP,KAAkB,QAAlB,IAA8BA,MAAM,CAACC,OAAzC,EAAkD;AACrDD,IAAAA,MAAM,CAACC,OAAP,GAAiBJ,UAAU,EAA3B;AACH,GAFM,MAEA;AACHD,IAAAA,IAAI,CAACvJ,GAAL,GAAWwJ,UAAU,EAArB;AACH;AACJ,CATA,EASC,IATD,EASO,YAAY;AAChB,eADgB,CAGhB;;AACA,MAAIK,IAAI,GAAG,YAAW,CAAE,CAAxB;;AACA,MAAIC,aAAa,GAAG,WAApB;AACA,MAAIC,IAAI,GAAI,OAAOC,MAAP,KAAkBF,aAAnB,IAAsC,OAAOE,MAAM,CAACC,SAAd,KAA4BH,aAAlE,IACP,kBAAkBI,IAAlB,CAAuBF,MAAM,CAACC,SAAP,CAAiBE,SAAxC,CADJ;AAIA,MAAIC,UAAU,GAAG,CACb,OADa,EAEb,OAFa,EAGb,MAHa,EAIb,MAJa,EAKb,OALa,CAAjB,CAVgB,CAkBhB;;AACA,WAASC,UAAT,CAAoBC,GAApB,EAAyBC,UAAzB,EAAqC;AACjC,QAAIC,MAAM,GAAGF,GAAG,CAACC,UAAD,CAAhB;;AACA,QAAI,OAAOC,MAAM,CAACC,IAAd,KAAuB,UAA3B,EAAuC;AACnC,aAAOD,MAAM,CAACC,IAAP,CAAYH,GAAZ,CAAP;AACH,KAFD,MAEO;AACH,UAAI;AACA,eAAOI,QAAQ,CAAC7L,SAAT,CAAmB4L,IAAnB,CAAwBE,IAAxB,CAA6BH,MAA7B,EAAqCF,GAArC,CAAP;AACH,OAFD,CAEE,OAAOM,CAAP,EAAU;AACR;AACA,eAAO,YAAW;AACd,iBAAOF,QAAQ,CAAC7L,SAAT,CAAmBgM,KAAnB,CAAyBA,KAAzB,CAA+BL,MAA/B,EAAuC,CAACF,GAAD,EAAMQ,SAAN,CAAvC,CAAP;AACH,SAFD;AAGH;AACJ;AACJ,GAjCe,CAmChB;;;AACA,WAASC,UAAT,GAAsB;AAClB,QAAIhL,OAAO,CAACC,GAAZ,EAAiB;AACb,UAAID,OAAO,CAACC,GAAR,CAAY6K,KAAhB,EAAuB;AACnB9K,QAAAA,OAAO,CAACC,GAAR,CAAY6K,KAAZ,CAAkB9K,OAAlB,EAA2B+K,SAA3B;AACH,OAFD,MAEO;AACH;AACAJ,QAAAA,QAAQ,CAAC7L,SAAT,CAAmBgM,KAAnB,CAAyBA,KAAzB,CAA+B9K,OAAO,CAACC,GAAvC,EAA4C,CAACD,OAAD,EAAU+K,SAAV,CAA5C;AACH;AACJ;;AACD,QAAI/K,OAAO,CAACiL,KAAZ,EAAmBjL,OAAO,CAACiL,KAAR;AACtB,GA9Ce,CAgDhB;AACA;;;AACA,WAASC,UAAT,CAAoBV,UAApB,EAAgC;AAC5B,QAAIA,UAAU,KAAK,OAAnB,EAA4B;AACxBA,MAAAA,UAAU,GAAG,KAAb;AACH;;AAED,QAAI,OAAOxK,OAAP,KAAmB+J,aAAvB,EAAsC;AAClC,aAAO,KAAP,CADkC,CACpB;AACjB,KAFD,MAEO,IAAIS,UAAU,KAAK,OAAf,IAA0BR,IAA9B,EAAoC;AACvC,aAAOgB,UAAP;AACH,KAFM,MAEA,IAAIhL,OAAO,CAACwK,UAAD,CAAP,KAAwBW,SAA5B,EAAuC;AAC1C,aAAOb,UAAU,CAACtK,OAAD,EAAUwK,UAAV,CAAjB;AACH,KAFM,MAEA,IAAIxK,OAAO,CAACC,GAAR,KAAgBkL,SAApB,EAA+B;AAClC,aAAOb,UAAU,CAACtK,OAAD,EAAU,KAAV,CAAjB;AACH,KAFM,MAEA;AACH,aAAO8J,IAAP;AACH;AACJ,GAlEe,CAoEhB;;;AAEA,WAASsB,qBAAT,CAA+BC,KAA/B,EAAsCC,UAAtC,EAAkD;AAC9C;AACA,SAAK,IAAI5I,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG2H,UAAU,CAACzK,MAA/B,EAAuC8C,CAAC,EAAxC,EAA4C;AACxC,UAAI8H,UAAU,GAAGH,UAAU,CAAC3H,CAAD,CAA3B;AACA,WAAK8H,UAAL,IAAoB9H,CAAC,GAAG2I,KAAL,GACfvB,IADe,GAEf,KAAKyB,aAAL,CAAmBf,UAAnB,EAA+Ba,KAA/B,EAAsCC,UAAtC,CAFJ;AAGH,KAP6C,CAS9C;;;AACA,SAAKrL,GAAL,GAAW,KAAKuL,KAAhB;AACH,GAjFe,CAmFhB;AACA;;;AACA,WAASC,+BAAT,CAAyCjB,UAAzC,EAAqDa,KAArD,EAA4DC,UAA5D,EAAwE;AACpE,WAAO,YAAY;AACf,UAAI,OAAOtL,OAAP,KAAmB+J,aAAvB,EAAsC;AAClCqB,QAAAA,qBAAqB,CAACR,IAAtB,CAA2B,IAA3B,EAAiCS,KAAjC,EAAwCC,UAAxC;AACA,aAAKd,UAAL,EAAiBM,KAAjB,CAAuB,IAAvB,EAA6BC,SAA7B;AACH;AACJ,KALD;AAMH,GA5Fe,CA8FhB;AACA;;;AACA,WAASW,oBAAT,CAA8BlB,UAA9B,EAA0Ca,KAA1C,EAAiDC,UAAjD,EAA6D;AACzD;AACA,WAAOJ,UAAU,CAACV,UAAD,CAAV,IACAiB,+BAA+B,CAACX,KAAhC,CAAsC,IAAtC,EAA4CC,SAA5C,CADP;AAEH;;AAED,WAASY,MAAT,CAAgBjG,IAAhB,EAAsBkG,YAAtB,EAAoCC,OAApC,EAA6C;AAC3C,QAAIC,IAAI,GAAG,IAAX;AACA,QAAIC,YAAJ;AAEA,QAAIC,UAAU,GAAG,UAAjB;;AACA,QAAI,OAAOtG,IAAP,KAAgB,QAApB,EAA8B;AAC5BsG,MAAAA,UAAU,IAAI,MAAMtG,IAApB;AACD,KAFD,MAEO,IAAI,OAAOA,IAAP,KAAgB,QAApB,EAA8B;AACnCsG,MAAAA,UAAU,GAAGb,SAAb;AACD;;AAED,aAASc,sBAAT,CAAgCC,QAAhC,EAA0C;AACtC,UAAIC,SAAS,GAAG,CAAC9B,UAAU,CAAC6B,QAAD,CAAV,IAAwB,QAAzB,EAAmCE,WAAnC,EAAhB;AAEA,UAAI,OAAOnC,MAAP,KAAkBF,aAAlB,IAAmC,CAACiC,UAAxC,EAAoD,OAHd,CAKtC;;AACA,UAAI;AACA/B,QAAAA,MAAM,CAACoC,YAAP,CAAoBL,UAApB,IAAkCG,SAAlC;AACA;AACH,OAHD,CAGE,OAAOG,MAAP,EAAe,CAAE,CATmB,CAWtC;;;AACA,UAAI;AACArC,QAAAA,MAAM,CAACsC,QAAP,CAAgBC,MAAhB,GACEC,kBAAkB,CAACT,UAAD,CAAlB,GAAiC,GAAjC,GAAuCG,SAAvC,GAAmD,GADrD;AAEH,OAHD,CAGE,OAAOG,MAAP,EAAe,CAAE;AACtB;;AAED,aAASI,iBAAT,GAA6B;AACzB,UAAIC,WAAJ;AAEA,UAAI,OAAO1C,MAAP,KAAkBF,aAAlB,IAAmC,CAACiC,UAAxC,EAAoD;;AAEpD,UAAI;AACAW,QAAAA,WAAW,GAAG1C,MAAM,CAACoC,YAAP,CAAoBL,UAApB,CAAd;AACH,OAFD,CAEE,OAAOM,MAAP,EAAe,CAAE,CAPM,CASzB;;;AACA,UAAI,OAAOK,WAAP,KAAuB5C,aAA3B,EAA0C;AACtC,YAAI;AACA,cAAIyC,MAAM,GAAGvC,MAAM,CAACsC,QAAP,CAAgBC,MAA7B;AACA,cAAII,QAAQ,GAAGJ,MAAM,CAACK,OAAP,CACXJ,kBAAkB,CAACT,UAAD,CAAlB,GAAiC,GADtB,CAAf;;AAEA,cAAIY,QAAQ,KAAK,CAAC,CAAlB,EAAqB;AACjBD,YAAAA,WAAW,GAAG,WAAWG,IAAX,CAAgBN,MAAM,CAACO,KAAP,CAAaH,QAAb,CAAhB,EAAwC,CAAxC,CAAd;AACH;AACJ,SAPD,CAOE,OAAON,MAAP,EAAe,CAAE;AACtB,OAnBwB,CAqBzB;;;AACA,UAAIR,IAAI,CAACkB,MAAL,CAAYL,WAAZ,MAA6BxB,SAAjC,EAA4C;AACxCwB,QAAAA,WAAW,GAAGxB,SAAd;AACH;;AAED,aAAOwB,WAAP;AACH;AAED;AACN;AACA;AACA;AACA;;;AAEMb,IAAAA,IAAI,CAACpG,IAAL,GAAYA,IAAZ;AAEAoG,IAAAA,IAAI,CAACkB,MAAL,GAAc;AAAE,eAAS,CAAX;AAAc,eAAS,CAAvB;AAA0B,cAAQ,CAAlC;AAAqC,cAAQ,CAA7C;AACV,eAAS,CADC;AACE,gBAAU;AADZ,KAAd;AAGAlB,IAAAA,IAAI,CAACP,aAAL,GAAqBM,OAAO,IAAIH,oBAAhC;;AAEAI,IAAAA,IAAI,CAACmB,QAAL,GAAgB,YAAY;AACxB,aAAOlB,YAAP;AACH,KAFD;;AAIAD,IAAAA,IAAI,CAACoB,QAAL,GAAgB,UAAU7B,KAAV,EAAiB8B,OAAjB,EAA0B;AACtC,UAAI,OAAO9B,KAAP,KAAiB,QAAjB,IAA6BS,IAAI,CAACkB,MAAL,CAAY3B,KAAK,CAACe,WAAN,EAAZ,MAAqCjB,SAAtE,EAAiF;AAC7EE,QAAAA,KAAK,GAAGS,IAAI,CAACkB,MAAL,CAAY3B,KAAK,CAACe,WAAN,EAAZ,CAAR;AACH;;AACD,UAAI,OAAOf,KAAP,KAAiB,QAAjB,IAA6BA,KAAK,IAAI,CAAtC,IAA2CA,KAAK,IAAIS,IAAI,CAACkB,MAAL,CAAYI,MAApE,EAA4E;AACxErB,QAAAA,YAAY,GAAGV,KAAf;;AACA,YAAI8B,OAAO,KAAK,KAAhB,EAAuB;AAAG;AACtBlB,UAAAA,sBAAsB,CAACZ,KAAD,CAAtB;AACH;;AACDD,QAAAA,qBAAqB,CAACR,IAAtB,CAA2BkB,IAA3B,EAAiCT,KAAjC,EAAwC3F,IAAxC;;AACA,YAAI,OAAO1F,OAAP,KAAmB+J,aAAnB,IAAoCsB,KAAK,GAAGS,IAAI,CAACkB,MAAL,CAAYI,MAA5D,EAAoE;AAChE,iBAAO,kCAAP;AACH;AACJ,OATD,MASO;AACH,cAAM,+CAA+C/B,KAArD;AACH;AACJ,KAhBD;;AAkBAS,IAAAA,IAAI,CAACuB,eAAL,GAAuB,UAAUhC,KAAV,EAAiB;AACpC,UAAI,CAACqB,iBAAiB,EAAtB,EAA0B;AACtBZ,QAAAA,IAAI,CAACoB,QAAL,CAAc7B,KAAd,EAAqB,KAArB;AACH;AACJ,KAJD;;AAMAS,IAAAA,IAAI,CAACwB,SAAL,GAAiB,UAASH,OAAT,EAAkB;AAC/BrB,MAAAA,IAAI,CAACoB,QAAL,CAAcpB,IAAI,CAACkB,MAAL,CAAYO,KAA1B,EAAiCJ,OAAjC;AACH,KAFD;;AAIArB,IAAAA,IAAI,CAAC0B,UAAL,GAAkB,UAASL,OAAT,EAAkB;AAChCrB,MAAAA,IAAI,CAACoB,QAAL,CAAcpB,IAAI,CAACkB,MAAL,CAAYI,MAA1B,EAAkCD,OAAlC;AACH,KAFD,CAvG2C,CA2G3C;;;AACA,QAAIM,YAAY,GAAGf,iBAAiB,EAApC;;AACA,QAAIe,YAAY,IAAI,IAApB,EAA0B;AACtBA,MAAAA,YAAY,GAAG7B,YAAY,IAAI,IAAhB,GAAuB,MAAvB,GAAgCA,YAA/C;AACH;;AACDE,IAAAA,IAAI,CAACoB,QAAL,CAAcO,YAAd,EAA4B,KAA5B;AACD;AAED;AACJ;AACA;AACA;AACA;;;AAEI,MAAIC,aAAa,GAAG,IAAI/B,MAAJ,EAApB;AAEA,MAAIgC,cAAc,GAAG,EAArB;;AACAD,EAAAA,aAAa,CAACE,SAAd,GAA0B,SAASA,SAAT,CAAmBlI,IAAnB,EAAyB;AAC/C,QAAK,OAAOA,IAAP,KAAgB,QAAhB,IAA4B,OAAOA,IAAP,KAAgB,QAA7C,IAA0DA,IAAI,KAAK,EAAvE,EAA2E;AACzE,YAAM,IAAIvF,SAAJ,CAAc,gDAAd,CAAN;AACD;;AAED,QAAI0N,MAAM,GAAGF,cAAc,CAACjI,IAAD,CAA3B;;AACA,QAAI,CAACmI,MAAL,EAAa;AACXA,MAAAA,MAAM,GAAGF,cAAc,CAACjI,IAAD,CAAd,GAAuB,IAAIiG,MAAJ,CAC9BjG,IAD8B,EACxBgI,aAAa,CAACT,QAAd,EADwB,EACES,aAAa,CAACnC,aADhB,CAAhC;AAED;;AACD,WAAOsC,MAAP;AACH,GAXD,CAlOgB,CA+OhB;;;AACA,MAAIC,IAAI,GAAI,OAAO7D,MAAP,KAAkBF,aAAnB,GAAoCE,MAAM,CAAChK,GAA3C,GAAiDkL,SAA5D;;AACAuC,EAAAA,aAAa,CAACK,UAAd,GAA2B,YAAW;AAClC,QAAI,OAAO9D,MAAP,KAAkBF,aAAlB,IACGE,MAAM,CAAChK,GAAP,KAAeyN,aADtB,EACqC;AACjCzD,MAAAA,MAAM,CAAChK,GAAP,GAAa6N,IAAb;AACH;;AAED,WAAOJ,aAAP;AACH,GAPD;;AASAA,EAAAA,aAAa,CAACM,UAAd,GAA2B,SAASA,UAAT,GAAsB;AAC7C,WAAOL,cAAP;AACH,GAFD,CA1PgB,CA8PhB;;;AACAD,EAAAA,aAAa,CAAC,SAAD,CAAb,GAA2BA,aAA3B;AAEA,SAAOA,aAAP;AACH,CA3QA,CAAD;;;;;;;;;ACNA;;AACA;;AAEA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AAGA;;;;AAFA;AAIA;AACA;AACA;AACA;AACAzN,kBAAIiN,QAAJ,CAAa,OAAb,GACA;;;AAEA,SAASe,6BAAT,CAAuCC,SAAvC,EAAkD;AACjD;AACAA,EAAAA,SAAS,CAACC,qBAAV,CAAgCC,cAAhC;AACAF,EAAAA,SAAS,CAACC,qBAAV,CAAgCE,YAAhC;AACAH,EAAAA,SAAS,CAACC,qBAAV,CAAgCG,eAAhC;AACAJ,EAAAA,SAAS,CAACC,qBAAV,CAAgCI,eAAhC;AACAL,EAAAA,SAAS,CAACC,qBAAV,CAAgCK,kBAAhC;AACAN,EAAAA,SAAS,CAACC,qBAAV,CAAgCM,gBAAhC;AACAP,EAAAA,SAAS,CAACC,qBAAV,CAAgCO,eAAhC;AACAR,EAAAA,SAAS,CAACC,qBAAV,CAAgCQ,aAAhC;AACAT,EAAAA,SAAS,CAACC,qBAAV,CAAgCS,mBAAhC;AACAV,EAAAA,SAAS,CAACC,qBAAV,CAAgCU,cAAhC;AACAX,EAAAA,SAAS,CAACC,qBAAV,CAAgCW,cAAhC;AACAZ,EAAAA,SAAS,CAACC,qBAAV,CAAgCY,iBAAhC;AACAb,EAAAA,SAAS,CAACC,qBAAV,CAAgCa,cAAhC;AACAd,EAAAA,SAAS,CAACC,qBAAV,CAAgCc,eAAhC;AACAf,EAAAA,SAAS,CAACC,qBAAV,CAAgCe,aAAhC,EAhBiD,CAiBjD;AACA;;AAEc,SAASC,SAAT,GAAqB;AACnC,OAAKC,eAAL,GAAuB,EAAvB;AAEAnB,EAAAA,6BAA6B,CAAC,IAAD,CAA7B;AACA;;AAEDkB,SAAS,CAACrQ,SAAV,CAAoBuQ,KAApB,GAA4B,UAASC,MAAT,EAAiBC,IAAjB,EAAuB;AAClD,QAAM,IAAIrQ,KAAJ,CAAU,wCAAV,CAAN;AACA,CAFD;;AAIAiQ,SAAS,CAACrQ,SAAV,CAAoBqP,qBAApB,GAA4C,UAASqB,WAAT,EAAsB;AACjE,MAAIC,QAAQ,GAAG,IAAID,WAAJ,EAAf;AACA,OAAKJ,eAAL,CAAqBI,WAAW,CAACrN,aAAjC,IAAkDsN,QAAlD;AACA,CAHD;;AAKAN,SAAS,CAACrQ,SAAV,CAAoB4Q,SAApB,GAAgC,UAASJ,MAAT,EAAiB;AAChD,MAAG,OAAOA,MAAP,KAAmB,QAAtB,EAAgC;AAC/B,WAAO,KAAKK,MAAL,CAAYL,MAAZ,CAAP;AACA,GAFD,MAEM;AACLtP,IAAAA,OAAO,CAAC4P,KAAR,CAAc,qCAAqC,OAAON,MAA1D;AACA,WAAO,IAAP;AACA;AACD,CAPD;;AASAH,SAAS,CAACrQ,SAAV,CAAoB+Q,WAApB,GAAkC,UAASC,MAAT,EAAiBP,IAAjB,EAAuB;AAExD,MAAIQ,SAAS,GAAG,EAAhB;AACA,MAAIjE,IAAI,GAAG,IAAX;AAEAgE,EAAAA,MAAM,CAACE,EAAP,CAAU,MAAV,EAAkBC,MAAlB;AACAH,EAAAA,MAAM,CAACE,EAAP,CAAU,KAAV,EAAiBE,KAAjB;AACAJ,EAAAA,MAAM,CAACE,EAAP,CAAU,OAAV,EAAmBG,OAAnB;;AAEA,WAASF,MAAT,CAAgBG,KAAhB,EAAuB;AACtBL,IAAAA,SAAS,IAAIK,KAAb;AACA;;AAED,WAASF,KAAT,GAAiB;AAChB,QAAI;AACH,UAAIG,GAAG,GAAGvE,IAAI,CAAC6D,MAAL,CAAYI,SAAZ,CAAV;AACA,KAFD,CAEC,OAAMO,GAAN,EAAW;AACX,aAAOf,IAAI,CAACe,GAAD,CAAX;AACA;;AACDf,IAAAA,IAAI,CAAC,IAAD,EAAOc,GAAP,CAAJ;AACA;;AAED,WAASF,OAAT,CAAiBG,GAAjB,EAAsB;AACrBf,IAAAA,IAAI,CAACe,GAAD,CAAJ;AACA;AACD,CAzBD;;AA2BAnB,SAAS,CAACrQ,SAAV,CAAoB6Q,MAApB,GAA6B,UAASI,SAAT,EAAoB;AAChD,MAAIvP,OAAJ;AAAA,MAAaE,IAAb;AAAA,MAAmB2P,GAAG,GAAG,EAAzB;AAAA,MAA6BE,UAAU,GAAG,CAA1C;AACA,MAAIC,aAAa,GAAGT,SAAS,CAACU,KAAV,CAAgB,aAAhB,CAApB;AAEAjQ,EAAAA,OAAO,GAAG,IAAI/B,wBAAJ,CAAoB+R,aAApB,CAAV;AACA,MAAG,CAAChQ,OAAO,CAACvB,OAAR,EAAJ,EAAuB,MAAMC,KAAK,CAAC,YAAD,CAAX;AAEvB,MAAI4M,IAAI,GAAG,IAAX;;AAEA,MAAI4E,QAAQ,GAAG,YAAW;AACzBhQ,IAAAA,IAAI,GAAGF,OAAO,CAACzB,IAAR,EAAP;;AACA,WAAM,CAACyB,OAAO,CAACX,KAAR,EAAP,EAAwB;AACvB,UAAGa,IAAI,CAACvB,IAAL,KAAc,CAAd,IAAmBuB,IAAI,CAACrB,KAAL,KAAe,SAArC,EAAgD;AAC/CqB,QAAAA,IAAI,GAAGF,OAAO,CAACzB,IAAR,EAAP,CAD+C,CAG/C;;AACA,YAAI2B,IAAI,CAACvB,IAAL,KAAc,CAAlB,EAAqB;AACpBa,UAAAA,OAAO,CAAC4P,KAAR,CAAc,oCAAd,EAAoDe,SAAS,CAACjQ,IAAD,CAA7D;AACAA,UAAAA,IAAI,GAAGF,OAAO,CAACzB,IAAR,EAAP;AACA;AACA;;AAED,YAAI2B,IAAI,CAACrB,KAAL,KAAe,QAAnB,EAA6B;AAC5BY,4BAAIuL,KAAJ,CAAU,UAAV;;AACA6E,UAAAA,GAAG,CAACO,MAAJ,GAAaC,WAAW,EAAxB;;AACA5Q,4BAAIuL,KAAJ,CAAU,GAAV;AACA,SAJD,MAIO,IAAI9K,IAAI,CAACrB,KAAL,KAAe,QAAnB,EAA6B;AACnCY,4BAAIuL,KAAJ,CAAU,UAAV;;AACA6E,UAAAA,GAAG,CAACS,MAAJ,GAAaC,WAAW,EAAxB;;AACA9Q,4BAAIuL,KAAJ,CAAU,GAAV;AACA,SAJM,MAIA,IAAG9K,IAAI,CAACrB,KAAL,KAAe,UAAlB,EAA8B;AACpCY,4BAAIuL,KAAJ,CAAU,YAAV;;AACA6E,UAAAA,GAAG,CAACW,QAAJ,GAAeC,aAAa,CAAC,KAAD,CAA5B;;AACAhR,4BAAIuL,KAAJ,CAAU,GAAV;AACA,SAJM,MAIA,IAAG9K,IAAI,CAACrB,KAAL,KAAe,QAAlB,EAA4B;AAClCY,4BAAIuL,KAAJ,CAAU,UAAV;;AACA6E,UAAAA,GAAG,CAACa,MAAJ,GAAaC,WAAW,EAAxB;;AACAlR,4BAAIuL,KAAJ,CAAU,GAAV;AACA,SAJM,MAIA,IAAG9K,IAAI,CAACrB,KAAL,KAAe,KAAlB,EAAyB;AAC/BY,4BAAIuL,KAAJ,CAAU,KAAV;AACA,SAFM,MAEA;AACNvL,4BAAImR,IAAJ,CAAS,yBAAT,EAAoC1Q,IAAI,CAACrB,KAAzC;AACA;AACD,OA/BD,MA+BO;AACNqB,QAAAA,IAAI,GAAGF,OAAO,CAACzB,IAAR,EAAP;AACA,OAlCsB,CAmCvB;;AACA;AACD,GAvCD;;AAyCA,MAAIsS,OAAO,GAAG,UAASlS,IAAT,EAAeE,KAAf,EAAsB;AACnC,WAAOqB,IAAI,CAACvB,IAAL,KAAcA,IAAd,IAAsBuB,IAAI,CAACrB,KAAL,KAAeA,KAA5C;AACA,GAFD;AAIA;AACD;AACA;AACA;;;AACC,MAAIwR,WAAW,GAAG,YAAW;AAC5B;AACA;AACA;AACA;AACA,QAAIS,WAAW,GAAG,IAAlB;AAAA,QAAwBC,YAAY,GAAG,IAAvC;AACA,QAAIX,MAAM,GAAG,EAAb,CAN4B,CAO5B;;AACAlQ,IAAAA,IAAI,GAAGF,OAAO,CAACzB,IAAR,EAAP;;AAEA,WAAM,IAAN,EAAY;AACX,UAAGsS,OAAO,CAAC,CAAD,EAAI,QAAJ,CAAV,EAAyB;AACxB,YAAGC,WAAH,EAAgBV,MAAM,CAACU,WAAD,CAAN,GAAsBC,YAAtB;AAChB;AACA,OAHD,MAGO,IAAG7Q,IAAI,CAACvB,IAAL,KAAc,CAAjB,EAAoB;AAC1B,YAAGmS,WAAH,EAAgBV,MAAM,CAACU,WAAD,CAAN,GAAsBC,YAAtB;AAChBD,QAAAA,WAAW,GAAG5Q,IAAI,CAACrB,KAAnB,CAF0B,CAG1B;AACA,OAJM,MAIA;AACN,YAAGqB,IAAI,CAACvB,IAAL,KAAc,EAAjB,EAAqB;AACpBoS,UAAAA,YAAY,GAAG;AAAE5Q,YAAAA,CAAC,EAAED,IAAI,CAACrB;AAAV,WAAf;AACA,SAFD,MAEO,IAAGqB,IAAI,CAACvB,IAAL,KAAc,EAAjB,EAAqB;AAC3BoS,UAAAA,YAAY,CAAC3Q,CAAb,GAAiBF,IAAI,CAACrB,KAAtB;AACA,SAFM,MAEA,IAAGqB,IAAI,CAACvB,IAAL,KAAc,EAAjB,EAAqB;AAC3BoS,UAAAA,YAAY,CAAC1Q,CAAb,GAAiBH,IAAI,CAACrB,KAAtB;AACA,SAFM,MAEA;AACNkS,UAAAA,YAAY,GAAG7Q,IAAI,CAACrB,KAApB;AACA;AACD;;AACDqB,MAAAA,IAAI,GAAGF,OAAO,CAACzB,IAAR,EAAP;AACA,KA9B2B,CA+B5B;;;AACA2B,IAAAA,IAAI,GAAGF,OAAO,CAACzB,IAAR,EAAP,CAhC4B,CAgCL;;AACvB,WAAO6R,MAAP;AACA,GAlCD;AAqCA;AACD;AACA;;;AACC,MAAIG,WAAW,GAAG,YAAW;AAC5B,QAAID,MAAM,GAAG,EAAb;AAAA,QAAiBlM,KAAjB;AAEMlE,IAAAA,IAAI,GAAGF,OAAO,CAACzB,IAAR,EAAP;;AAEN,WAAM2B,IAAI,CAACrB,KAAL,KAAe,KAArB,EAA4B;AAC3B,UAAGgS,OAAO,CAAC,CAAD,EAAI,QAAJ,CAAV,EAAyB;AACxB;AACA;;AAED,UAAGA,OAAO,CAAC,CAAD,EAAI,OAAJ,CAAV,EAAwB;AACvBpR,0BAAIuL,KAAJ,CAAU,SAAV;;AACA5G,QAAAA,KAAK,GAAG4M,UAAU,EAAlB;;AACAvR,0BAAIuL,KAAJ,CAAU,GAAV;;AACAiG,QAAAA,YAAY,CAAC7M,KAAD,CAAZ;AACY,YAAG,CAACA,KAAK,CAACc,IAAV,EACIzF,kBAAI2P,KAAJ,CAAU,wBAAwBhL,KAAK,CAAC3D,MAA9B,GAAuC,sBAAjD,EADJ,KAGI6P,MAAM,CAAClM,KAAK,CAACc,IAAP,CAAN,GAAqBd,KAArB;AAChB,OATD,MASO;AACN8M,QAAAA,iBAAiB,CAAChR,IAAD,CAAjB;AACAA,QAAAA,IAAI,GAAGF,OAAO,CAACzB,IAAR,EAAP;AACA;AACD;;AACD,WAAO+R,MAAP;AACA,GAzBD;;AA2BA,MAAIU,UAAU,GAAG,YAAW;AAC3B,QAAI5M,KAAK,GAAG,EAAZ;AACAlE,IAAAA,IAAI,GAAGF,OAAO,CAACzB,IAAR,EAAP;;AAEA,WAAM2B,IAAI,CAACrB,KAAL,KAAe,KAArB,EAA4B;AAC3B,cAAOqB,IAAI,CAACvB,IAAZ;AACC,aAAK,CAAL;AACCyF,UAAAA,KAAK,CAAC+M,QAAN,GAAiBjR,IAAI,CAACrB,KAAtB;AACAqB,UAAAA,IAAI,GAAGF,OAAO,CAACzB,IAAR,EAAP;AACA;;AACD,aAAK,CAAL;AACC6F,UAAAA,KAAK,CAACc,IAAN,GAAahF,IAAI,CAACrB,KAAlB;AACAqB,UAAAA,IAAI,GAAGF,OAAO,CAACzB,IAAR,EAAP;AACA;;AACD,aAAK,CAAL;AACC6F,UAAAA,KAAK,CAACgN,KAAN,GAAclR,IAAI,CAACrB,KAAnB;AACAqB,UAAAA,IAAI,GAAGF,OAAO,CAACzB,IAAR,EAAP;AACA;;AACD,aAAK,CAAL;AACC6F,UAAAA,KAAK,CAAC3D,MAAN,GAAeP,IAAI,CAACrB,KAApB;AACAqB,UAAAA,IAAI,GAAGF,OAAO,CAACzB,IAAR,EAAP;AACA;;AACD,aAAK,CAAL;AACC6F,UAAAA,KAAK,CAACzD,KAAN,GAAcT,IAAI,CAACrB,KAAnB;AACAqB,UAAAA,IAAI,GAAGF,OAAO,CAACzB,IAAR,EAAP;AACA;;AACD,aAAK,EAAL;AACC6F,UAAAA,KAAK,CAACkB,QAAN,GAAiBvF,UAAU,EAA3B;AACAG,UAAAA,IAAI,GAAGF,OAAO,CAACzB,IAAR,EAAP;AACA;;AACD,aAAK,EAAL;AACC6F,UAAAA,KAAK,CAACiN,UAAN,GAAoBnR,IAAI,CAACrB,KAAL,IAAcqB,IAAI,CAACrB,KAAL,IAAc,CAA7B,GAAkC,IAAlC,GAAyC,KAA5D;AACAqB,UAAAA,IAAI,GAAGF,OAAO,CAACzB,IAAR,EAAP;AACA;;AACD,aAAK,EAAL;AACC,cAAI2B,IAAI,CAACrB,KAAL,IAAc,CAAlB,EAAqB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACAuF,YAAAA,KAAK,CAAC5D,IAAN,GAAaN,IAAI,CAACrB,KAAlB;AACA;;AACDqB,UAAAA,IAAI,GAAGF,OAAO,CAACzB,IAAR,EAAP;AACA;;AACD,aAAK,GAAL;AACC;AACA2B,UAAAA,IAAI,GAAGF,OAAO,CAACzB,IAAR,EAAP;AACA;;AACD,aAAK,GAAL;AACC6F,UAAAA,KAAK,CAACjD,WAAN,GAAoBjB,IAAI,CAACrB,KAAzB;AACAqB,UAAAA,IAAI,GAAGF,OAAO,CAACzB,IAAR,EAAP;AACA;;AACD,aAAK,CAAL;AACC,cAAG2B,IAAI,CAACrB,KAAL,IAAc,QAAjB,EACC;AACDuF,UAAAA,KAAK,CAACoM,QAAN,GAAiBC,aAAa,CAAC,IAAD,CAA9B;AACA;;AACD;AACCS,UAAAA,iBAAiB,CAAChR,IAAD,CAAjB;AACAA,UAAAA,IAAI,GAAGF,OAAO,CAACzB,IAAR,EAAP;AAzDF;;AA4DA,UAAGsS,OAAO,CAAC,CAAD,EAAI,QAAJ,CAAV,EAAyB;AACxB3Q,QAAAA,IAAI,GAAGF,OAAO,CAACzB,IAAR,EAAP;AACA;AACA;AACD;;AACD,WAAO6F,KAAP;AACA,GAvED;AAyEA;AACD;AACA;AACA;;;AACC,MAAIuM,WAAW,GAAG,YAAW;AAC5B,QAAID,MAAM,GAAG,EAAb;AACAxQ,IAAAA,IAAI,GAAGF,OAAO,CAACzB,IAAR,EAAP;;AACA,WAAM2B,IAAI,CAACrB,KAAL,KAAe,KAArB,EAA4B;AAC3B,UAAGgS,OAAO,CAAC,CAAD,EAAI,QAAJ,CAAV,EACC;;AAED,UAAGA,OAAO,CAAC,CAAD,EAAI,OAAJ,CAAV,EAAwB;AACvB3Q,QAAAA,IAAI,GAAGF,OAAO,CAACzB,IAAR,EAAP;AAEA,YAAI+S,eAAe,GAAGC,gBAAgB,CAACrR,IAAI,CAACrB,KAAN,CAAtC;;AACA,YAAGyS,eAAH,EAAoB;AACnB7R,4BAAIuL,KAAJ,CAAU9K,IAAI,CAACrB,KAAL,GAAa,UAAvB;;AACA6R,UAAAA,MAAM,CAACa,gBAAgB,CAACrR,IAAI,CAACrB,KAAN,CAAhB,CAA6B2S,SAA9B,CAAN,GAAiDC,UAAU,EAA3D;;AACAhS,4BAAIuL,KAAJ,CAAU,GAAV;AACA,SAJD,MAIO;AACNvL,4BAAIuL,KAAJ,CAAU,qBAAqB9K,IAAI,CAACrB,KAApC;AACA;AACD,OAXD,MAWO;AACN;AACAqB,QAAAA,IAAI,GAAGF,OAAO,CAACzB,IAAR,EAAP;AACA;AACD;;AAED2B,IAAAA,IAAI,GAAGF,OAAO,CAACzB,IAAR,EAAP;AACA,WAAOmS,MAAP;AACA,GA1BD;;AA4BA,QAAMgB,kBAAkB,GAAG,QAA3B;;AAEA,MAAID,UAAU,GAAG,YAAW;AAC3B,QAAIH,eAAe,GAAGC,gBAAgB,CAACrR,IAAI,CAACrB,KAAN,CAAtC;AAAA,QACC8S,KAAK,GAAG,EADT;AAAA,QAECC,aAAa,GAAG,CAFjB;AAAA,QAGCC,WAHD;AAKA3R,IAAAA,IAAI,GAAGF,OAAO,CAACzB,IAAR,EAAP;;AACA,WAAM,CAACsS,OAAO,CAAC,CAAD,EAAIa,kBAAJ,CAAd,EAAuC;AAEtC,cAAOxR,IAAI,CAACvB,IAAZ;AACC,aAAK,CAAL;AACCgT,UAAAA,KAAK,CAAClR,MAAN,GAAeP,IAAI,CAACrB,KAApB;AACAqB,UAAAA,IAAI,GAAGF,OAAO,CAACzB,IAAR,EAAP;AACA;;AACD,aAAK,GAAL;AACCoT,UAAAA,KAAK,CAACxQ,WAAN,GAAoBjB,IAAI,CAACrB,KAAzB;AACAqB,UAAAA,IAAI,GAAGF,OAAO,CAACzB,IAAR,EAAP;AACA;;AACD,aAAK,GAAL;AACC,cAAG2B,IAAI,CAACrB,KAAL,KAAe,iBAAlB,EAAqC;AACpC;AACAqB,YAAAA,IAAI,GAAGF,OAAO,CAACzB,IAAR,EAAP;AACA,WAHD,MAGK;AACJ2S,YAAAA,iBAAiB,CAAChR,IAAD,CAAjB;AACAA,YAAAA,IAAI,GAAGF,OAAO,CAACzB,IAAR,EAAP;AACA;;AACD;;AACD,aAAK,EAAL;AACCqT,UAAAA,aAAa,GAAG1R,IAAI,CAACrB,KAArB;AACAqB,UAAAA,IAAI,GAAGF,OAAO,CAACzB,IAAR,EAAP;AACA;;AACD,aAAK,CAAL;AACC,cAAG2B,IAAI,CAACrB,KAAL,KAAeyS,eAAe,CAACQ,aAAlC,EAAiD;AAChDH,YAAAA,KAAK,CAACL,eAAe,CAACS,oBAAjB,CAAL,GAA8CT,eAAe,CAACU,iBAAhB,EAA9C;AACA,WAFD,MAEO;AACNd,YAAAA,iBAAiB,CAAChR,IAAD,CAAjB;AACAA,YAAAA,IAAI,GAAGF,OAAO,CAACzB,IAAR,EAAP;AACA;;AACD;;AACD;AACC2S,UAAAA,iBAAiB,CAAChR,IAAD,CAAjB;AACAA,UAAAA,IAAI,GAAGF,OAAO,CAACzB,IAAR,EAAP;AAhCF;AAkCA;;AACD,QAAI0T,YAAY,GAAGN,KAAK,CAACL,eAAe,CAACS,oBAAjB,CAAxB;;AACA,QAAGE,YAAH,EAAiB;AAChB,UAAGA,YAAY,CAACC,WAAb,KAA6BC,KAAhC,EAAsC;AACrCN,QAAAA,WAAW,GAAGI,YAAY,CAAC7S,MAA3B;AACA,OAFD,MAEO,IAAG,OAAO6S,YAAP,KAAyB,QAA5B,EAAsC;AAC5CJ,QAAAA,WAAW,GAAGO,MAAM,CAACC,IAAP,CAAYJ,YAAZ,EAA0B7S,MAAxC;AACA;;AACD,UAAGwS,aAAa,KAAKC,WAArB,EAAkCpS,kBAAImR,IAAJ,CAAS,YAAYiB,WAAZ,GAA0B,GAA1B,GAAgCP,eAAe,CAACQ,aAAhD,GAAgE,mBAAhE,GAAsFF,aAA/F;AAClC;;AACD1R,IAAAA,IAAI,GAAGF,OAAO,CAACzB,IAAR,EAAP;AACA,WAAOoT,KAAP;AACA,GAvDD;;AAyDA,MAAIW,oBAAoB,GAAG,YAAW;AACrC,QAAIC,SAAS,GAAG,EAAhB;AAAA,QAAoB;AACnBC,IAAAA,QAAQ,GAAG,EADZ;;AAGA/S,sBAAIuL,KAAJ,CAAU,YAAV;;AACA9K,IAAAA,IAAI,GAAGF,OAAO,CAACzB,IAAR,EAAP;;AACA,WAAM,CAACsS,OAAO,CAAC,CAAD,EAAIa,kBAAJ,CAAd,EAAuC;AAEtC,cAAOxR,IAAI,CAACvB,IAAZ;AACC,aAAK,CAAL;AAAQ;AACP6T,UAAAA,QAAQ,CAACtN,IAAT,GAAgBhF,IAAI,CAACrB,KAArB;AACAqB,UAAAA,IAAI,GAAGF,OAAO,CAACzB,IAAR,EAAP;AACA;;AACD,aAAK,EAAL;AACCiU,UAAAA,QAAQ,CAACC,eAAT,GAA2B1S,UAAU,EAArC;AACAG,UAAAA,IAAI,GAAGF,OAAO,CAACzB,IAAR,EAAP;AACA;;AACD,aAAK,EAAL;AACCiU,UAAAA,QAAQ,CAACE,gBAAT,GAA4B3S,UAAU,EAAtC;AACAG,UAAAA,IAAI,GAAGF,OAAO,CAACzB,IAAR,EAAP;AACA;;AACD,aAAK,EAAL;AACCiU,UAAAA,QAAQ,CAAChQ,MAAT,GAAkBzC,UAAU,EAA5B;AACAG,UAAAA,IAAI,GAAGF,OAAO,CAACzB,IAAR,EAAP;AACA;;AACD,aAAK,EAAL;AACCiU,UAAAA,QAAQ,CAACG,aAAT,GAAyB5S,UAAU,EAAnC;AACAG,UAAAA,IAAI,GAAGF,OAAO,CAACzB,IAAR,EAAP;AACA;;AACD,aAAK,EAAL;AACCiU,UAAAA,QAAQ,CAACI,WAAT,GAAuB7S,UAAU,EAAjC;AACAG,UAAAA,IAAI,GAAGF,OAAO,CAACzB,IAAR,EAAP;AACA;;AACD,aAAK,EAAL;AACCiU,UAAAA,QAAQ,CAACK,WAAT,GAAuB9S,UAAU,EAAjC;AACAG,UAAAA,IAAI,GAAGF,OAAO,CAACzB,IAAR,EAAP;AACA;;AACD,aAAK,EAAL;AACCiU,UAAAA,QAAQ,CAACM,uBAAT,GAAmC/S,UAAU,EAA7C;AACAG,UAAAA,IAAI,GAAGF,OAAO,CAACzB,IAAR,EAAP;AACA;;AACD,aAAK,EAAL;AACCiU,UAAAA,QAAQ,CAACO,UAAT,GAAsBhT,UAAU,EAAhC;AACAG,UAAAA,IAAI,GAAGF,OAAO,CAACzB,IAAR,EAAP;AACA;;AACD,aAAK,EAAL;AACCiU,UAAAA,QAAQ,CAACQ,UAAT,GAAsB9S,IAAI,CAACrB,KAA3B;AACAqB,UAAAA,IAAI,GAAGF,OAAO,CAACzB,IAAR,EAAP;AACA;;AACD,aAAK,EAAL;AACCiU,UAAAA,QAAQ,CAACS,kBAAT,GAA8B/S,IAAI,CAACrB,KAAnC;AACAqB,UAAAA,IAAI,GAAGF,OAAO,CAACzB,IAAR,EAAP;AACA;;AACD,aAAK,EAAL;AACCiU,UAAAA,QAAQ,CAACU,iBAAT,GAA6BhT,IAAI,CAACrB,KAAlC;AACAqB,UAAAA,IAAI,GAAGF,OAAO,CAACzB,IAAR,EAAP;AACA;;AACD,aAAK,EAAL;AACCiU,UAAAA,QAAQ,CAACW,UAAT,GAAsBjT,IAAI,CAACrB,KAA3B;AACAqB,UAAAA,IAAI,GAAGF,OAAO,CAACzB,IAAR,EAAP;AACA;;AACD,aAAK,EAAL;AACCiU,UAAAA,QAAQ,CAACY,iBAAT,GAA6BlT,IAAI,CAACrB,KAAlC;AACAqB,UAAAA,IAAI,GAAGF,OAAO,CAACzB,IAAR,EAAP;AACA;;AACD,aAAK,EAAL;AACCiU,UAAAA,QAAQ,CAACa,cAAT,GAA0BnT,IAAI,CAACrB,KAA/B;AACAqB,UAAAA,IAAI,GAAGF,OAAO,CAACzB,IAAR,EAAP;AACA;;AACW,aAAK,EAAL;AACIiU,UAAAA,QAAQ,CAACc,gBAAT,GAA4BpT,IAAI,CAACrB,KAAjC;AACAqB,UAAAA,IAAI,GAAGF,OAAO,CAACzB,IAAR,EAAP;AACA;;AAChB,aAAK,GAAL;AACCiU,UAAAA,QAAQ,CAACe,SAAT,GAAqBxT,UAAU,EAA/B;AACAG,UAAAA,IAAI,GAAGF,OAAO,CAACzB,IAAR,EAAP;AACA;;AACD,aAAK,GAAL;AACCiU,UAAAA,QAAQ,CAACgB,QAAT,GAAoBzT,UAAU,EAA9B;AACAG,UAAAA,IAAI,GAAGF,OAAO,CAACzB,IAAR,EAAP;AACA;;AACD,aAAK,GAAL;AACCiU,UAAAA,QAAQ,CAACiB,QAAT,GAAoB1T,UAAU,EAA9B;AACAG,UAAAA,IAAI,GAAGF,OAAO,CAACzB,IAAR,EAAP;AACA;;AACD,aAAK,GAAL;AACCiU,UAAAA,QAAQ,CAACe,SAAT,GAAqBxT,UAAU,EAA/B;AACAG,UAAAA,IAAI,GAAGF,OAAO,CAACzB,IAAR,EAAP;AACA;;AACD,aAAK,GAAL;AACCiU,UAAAA,QAAQ,CAACkB,UAAT,GAAsBxT,IAAI,CAACrB,KAA3B;AACAqB,UAAAA,IAAI,GAAGF,OAAO,CAACzB,IAAR,EAAP;AACA;;AACD,aAAK,GAAL;AACC;AACAiU,UAAAA,QAAQ,CAACmB,mBAAT,GAA+BzT,IAAI,CAACrB,KAApC;AACAqB,UAAAA,IAAI,GAAGF,OAAO,CAACzB,IAAR,EAAP;AACA;;AACD,aAAK,GAAL;AACCiU,UAAAA,QAAQ,CAACoB,iBAAT,GAA6B1T,IAAI,CAACrB,KAAlC;AACAqB,UAAAA,IAAI,GAAGF,OAAO,CAACzB,IAAR,EAAP;AACA;;AACD,aAAK,GAAL;AACCiU,UAAAA,QAAQ,CAACrR,WAAT,GAAuBjB,IAAI,CAACrB,KAA5B;AACAqB,UAAAA,IAAI,GAAGF,OAAO,CAACzB,IAAR,EAAP;AACA;;AACD,aAAK,EAAL,CAlGD,CAkGU;;AACT,aAAK,GAAL;AACA,aAAK,GAAL;AACCiU,UAAAA,QAAQ,CAACqB,YAAT,GAAwB3T,IAAI,CAACrB,KAA7B;AACAqB,UAAAA,IAAI,GAAGF,OAAO,CAACzB,IAAR,EAAP;AACA;;AACD,aAAK,CAAL;AACC;AACA,cAAG2B,IAAI,CAACrB,KAAL,KAAe,OAAlB,EAA2B;AAC1BY,8BAAIuL,KAAJ,CAAU,GAAV;;AACAuH,YAAAA,SAAS,CAAC/Q,IAAV,CAAegR,QAAf;;AACA/S,8BAAIuL,KAAJ,CAAU,YAAV;;AACAwH,YAAAA,QAAQ,GAAG,EAAX;AACAtS,YAAAA,IAAI,GAAGF,OAAO,CAACzB,IAAR,EAAP;AACA;;AACD;;AACD;AACC2S,UAAAA,iBAAiB,CAAChR,IAAD,CAAjB;AACAA,UAAAA,IAAI,GAAGF,OAAO,CAACzB,IAAR,EAAP;AACA;AArHF;AAuHA,KA/HoC,CAgIrC;AACA;;;AACAkB,sBAAIuL,KAAJ,CAAU,GAAV;;AACAuH,IAAAA,SAAS,CAAC/Q,IAAV,CAAegR,QAAf;AAEA,WAAOD,SAAP;AACA,GAtID;;AAwIA,MAAIuB,cAAc,GAAG,YAAW;AAC/B,QAAIC,MAAM,GAAG,EAAb;AAAA,QACCC,SADD;AAAA,QAECC,KAAK,GAAG,EAFT;AAAA,QAGC7U,MAHD;;AAKAK,sBAAIuL,KAAJ,CAAU,SAAV;;AACA9K,IAAAA,IAAI,GAAGF,OAAO,CAACzB,IAAR,EAAP;;AACA,WAAM,CAACsS,OAAO,CAAC,CAAD,EAAI,QAAJ,CAAd,EAA6B;AAE5B,cAAO3Q,IAAI,CAACvB,IAAZ;AACC,aAAK,CAAL;AACCsV,UAAAA,KAAK,CAAC/O,IAAN,GAAahF,IAAI,CAACrB,KAAlB;AACAmV,UAAAA,SAAS,GAAG9T,IAAI,CAACrB,KAAjB;AACAqB,UAAAA,IAAI,GAAGF,OAAO,CAACzB,IAAR,EAAP;AACA;;AACD,aAAK,CAAL;AACC0V,UAAAA,KAAK,CAACC,WAAN,GAAoBhU,IAAI,CAACrB,KAAzB;AACAqB,UAAAA,IAAI,GAAGF,OAAO,CAACzB,IAAR,EAAP;AACA;;AACD,aAAK,EAAL;AAAS;AACRa,UAAAA,MAAM,GAAGc,IAAI,CAACrB,KAAd;AACA,cAAGO,MAAM,GAAG,CAAZ,EAAe6U,KAAK,CAACE,OAAN,GAAgB,EAAhB;AACfjU,UAAAA,IAAI,GAAGF,OAAO,CAACzB,IAAR,EAAP;AACA;;AACD,aAAK,EAAL;AAAS;AACR0V,UAAAA,KAAK,CAACG,aAAN,GAAsBlU,IAAI,CAACrB,KAA3B;AACAqB,UAAAA,IAAI,GAAGF,OAAO,CAACzB,IAAR,EAAP;AACA;;AACD,aAAK,EAAL;AACC0V,UAAAA,KAAK,CAACE,OAAN,CAAc3S,IAAd,CAAmBtB,IAAI,CAACrB,KAAxB;AACAqB,UAAAA,IAAI,GAAGF,OAAO,CAACzB,IAAR,EAAP;AACA;;AACD,aAAK,CAAL;AACCkB,4BAAIuL,KAAJ,CAAU,GAAV;;AACA,cAAG5L,MAAM,GAAG,CAAT,IAAcA,MAAM,KAAK6U,KAAK,CAACE,OAAN,CAAc/U,MAA1C,EAAkDK,kBAAImR,IAAJ,CAAS,uCAAT;AAClDmD,UAAAA,MAAM,CAACC,SAAD,CAAN,GAAoBC,KAApB;AACAA,UAAAA,KAAK,GAAG,EAAR;;AACAxU,4BAAIuL,KAAJ,CAAU,SAAV;;AACA9K,UAAAA,IAAI,GAAGF,OAAO,CAACzB,IAAR,EAAP;AACA;;AACD;AACC2B,UAAAA,IAAI,GAAGF,OAAO,CAACzB,IAAR,EAAP;AAhCF;AAkCA;;AAEDkB,sBAAIuL,KAAJ,CAAU,GAAV;;AACA+I,IAAAA,MAAM,CAACC,SAAD,CAAN,GAAoBC,KAApB;AACA,WAAOF,MAAP;AACA,GAjDD;;AAmDA,MAAIM,WAAW,GAAG,YAAW;AAC5B,QAAIC,MAAM,GAAG,EAAb;AAAA,QACCC,SADD;AAAA,QAEC5T,KAAK,GAAG,EAFT;;AAIAlB,sBAAIuL,KAAJ,CAAU,SAAV;;AACA9K,IAAAA,IAAI,GAAGF,OAAO,CAACzB,IAAR,EAAP;;AACA,WAAM,CAACsS,OAAO,CAAC,CAAD,EAAI,QAAJ,CAAd,EAA6B;AAE5B,cAAO3Q,IAAI,CAACvB,IAAZ;AACC,aAAK,CAAL;AAAQ;AACPgC,UAAAA,KAAK,CAACuE,IAAN,GAAahF,IAAI,CAACrB,KAAlB;AACA0V,UAAAA,SAAS,GAAGrU,IAAI,CAACrB,KAAjB;AACAqB,UAAAA,IAAI,GAAGF,OAAO,CAACzB,IAAR,EAAP;AACA;;AACD,aAAK,EAAL;AAAS;AACRoC,UAAAA,KAAK,CAACE,OAAN,GAAgBX,IAAI,CAACrB,KAAL,IAAc,CAA9B,CADD,CAEC;;AACA8B,UAAAA,KAAK,CAACG,UAAN,GAAmBE,IAAI,CAACC,GAAL,CAASf,IAAI,CAACrB,KAAd,CAAnB;AACA8B,UAAAA,KAAK,CAACI,KAAN,GAAcnB,YAAY,CAACe,KAAK,CAACG,UAAP,CAA1B;AACAZ,UAAAA,IAAI,GAAGF,OAAO,CAACzB,IAAR,EAAP;AACA;;AACD,aAAK,EAAL;AAAS;AACRoC,UAAAA,KAAK,CAAC6T,MAAN,GAAgB,CAACtU,IAAI,CAACrB,KAAL,GAAa,CAAd,KAAoB,CAApB,IAAyB,CAACqB,IAAI,CAACrB,KAAL,GAAa,CAAd,KAAoB,CAA7D;AACAqB,UAAAA,IAAI,GAAGF,OAAO,CAACzB,IAAR,EAAP;AACA;;AACD,aAAK,CAAL;AACC;AACA,cAAG2B,IAAI,CAACrB,KAAL,KAAe,OAAlB,EAA2B;AAC1BY,8BAAIuL,KAAJ,CAAU,GAAV;;AACAsJ,YAAAA,MAAM,CAACC,SAAD,CAAN,GAAoB5T,KAApB;;AACAlB,8BAAIuL,KAAJ,CAAU,SAAV;;AACArK,YAAAA,KAAK,GAAG,EAAR;AACA4T,YAAAA,SAAS,GAAG5J,SAAZ;AACAzK,YAAAA,IAAI,GAAGF,OAAO,CAACzB,IAAR,EAAP;AACA;;AACD;;AACD;AACC2S,UAAAA,iBAAiB,CAAChR,IAAD,CAAjB;AACAA,UAAAA,IAAI,GAAGF,OAAO,CAACzB,IAAR,EAAP;AACA;AA/BF;AAiCA,KA1C2B,CA2C5B;AACA;;;AACAkB,sBAAIuL,KAAJ,CAAU,GAAV;;AACAsJ,IAAAA,MAAM,CAACC,SAAD,CAAN,GAAoB5T,KAApB;AAEA,WAAO2T,MAAP;AACA,GAjDD;;AAmDA,MAAI/C,gBAAgB,GAAG;AACtBkD,IAAAA,KAAK,EAAE;AACN1C,MAAAA,oBAAoB,EAAE,WADhB;AAENP,MAAAA,SAAS,EAAE,UAFL;AAGNM,MAAAA,aAAa,EAAE,OAHT;AAINE,MAAAA,iBAAiB,EAAEM;AAJb,KADe;AAOtBoC,IAAAA,KAAK,EAAE;AACN3C,MAAAA,oBAAoB,EAAE,WADhB;AAENP,MAAAA,SAAS,EAAE,UAFL;AAGNM,MAAAA,aAAa,EAAE,OAHT;AAINE,MAAAA,iBAAiB,EAAE8B;AAJb,KAPe;AAatBa,IAAAA,KAAK,EAAE;AACN5C,MAAAA,oBAAoB,EAAE,QADhB;AAENP,MAAAA,SAAS,EAAE,OAFL;AAGNM,MAAAA,aAAa,EAAE,OAHT;AAINE,MAAAA,iBAAiB,EAAEqC;AAJb;AAbe,GAAvB;AAqBA;AACD;AACA;AACA;AACA;;AACC,MAAI5D,aAAa,GAAG,UAASmE,QAAT,EAAmB;AACtC,QAAIpE,QAAQ,GAAG,EAAf;AAEA,QAAIqE,aAAa,GAAGD,QAAQ,GAAG,QAAH,GAAc,QAA1C;;AAEA,QAAI,CAACA,QAAL,EAAe;AACd1U,MAAAA,IAAI,GAAGF,OAAO,CAACzB,IAAR,EAAP;AACA;;AACD,WAAM,IAAN,EAAY;AAEX,UAAG2B,IAAI,CAACvB,IAAL,KAAc,CAAjB,EAAoB;AACnB,YAAGuB,IAAI,CAACrB,KAAL,KAAegW,aAAlB,EAAiC;AAChC;AACA;;AAED,YAAItU,MAAJ;AACA,YAAIuU,OAAO,GAAGxJ,IAAI,CAACsD,eAAL,CAAqB1O,IAAI,CAACrB,KAA1B,CAAd;;AACA,YAAGiW,OAAO,IAAI,IAAd,EAAoB;AACnBrV,4BAAIuL,KAAJ,CAAU9K,IAAI,CAACrB,KAAL,GAAa,IAAvB;;AACA0B,UAAAA,MAAM,GAAGuU,OAAO,CAAClT,WAAR,CAAoB5B,OAApB,EAA6BE,IAA7B,CAAT;AACAA,UAAAA,IAAI,GAAGF,OAAO,CAAChB,aAAf;;AACAS,4BAAIuL,KAAJ,CAAU,GAAV;AACA,SALD,MAKO;AACNvL,4BAAImR,IAAJ,CAAS,sBAAsB1Q,IAAI,CAACrB,KAApC;;AACAqB,UAAAA,IAAI,GAAGF,OAAO,CAACzB,IAAR,EAAP;AACA;AACA;;AACD0S,QAAAA,YAAY,CAAC1Q,MAAD,CAAZ;AACAiQ,QAAAA,QAAQ,CAAChP,IAAT,CAAcjB,MAAd;AACA,OAnBD,MAmBO;AACN;AACAL,QAAAA,IAAI,GAAGF,OAAO,CAACzB,IAAR,EAAP;AACA;AACD;;AACD,QAAGsW,aAAa,IAAI,QAApB,EAA8B3U,IAAI,GAAGF,OAAO,CAACzB,IAAR,EAAP,CAlCQ,CAkCe;;AACrD,WAAOiS,QAAP;AACA,GApCD;AAsCA;AACD;AACA;AACA;AACA;AACA;AACA;;;AACC,MAAIzQ,UAAU,GAAG,YAAW;AAC3B,QAAIE,KAAK,GAAG,EAAZ;AAAA,QACCtB,IAAI,GAAGuB,IAAI,CAACvB,IADb;AAGAsB,IAAAA,KAAK,CAACE,CAAN,GAAUD,IAAI,CAACrB,KAAf;AAEAF,IAAAA,IAAI,IAAI,EAAR;AACAuB,IAAAA,IAAI,GAAGF,OAAO,CAACzB,IAAR,EAAP;AACA,QAAG2B,IAAI,CAACvB,IAAL,IAAaA,IAAhB,EACC,MAAM,IAAID,KAAJ,CAAU,yCAAyCC,IAAzC,GAChB,WADgB,GACFuB,IAAI,CAACvB,IADH,GACU,GADpB,CAAN;AAEDsB,IAAAA,KAAK,CAACG,CAAN,GAAUF,IAAI,CAACrB,KAAf;AAEAF,IAAAA,IAAI,IAAI,EAAR;AACAuB,IAAAA,IAAI,GAAGF,OAAO,CAACzB,IAAR,EAAP;;AACA,QAAG2B,IAAI,CAACvB,IAAL,IAAaA,IAAhB,EACA;AACCqB,MAAAA,OAAO,CAACd,MAAR;AACA,aAAOe,KAAP;AACA;;AACDA,IAAAA,KAAK,CAACI,CAAN,GAAUH,IAAI,CAACrB,KAAf;AAEA,WAAOoB,KAAP;AACA,GAvBD;;AAyBA,MAAIgR,YAAY,GAAG,UAAS1Q,MAAT,EAAiB;AACnC,QAAG,CAACA,MAAJ,EAAY,MAAM,IAAIZ,SAAJ,CAAc,oCAAd,CAAN;AAEZ,QAAG,CAACY,MAAM,CAACE,MAAX,EAAmBF,MAAM,CAACE,MAAP,GAAgBsP,UAAU,EAA1B;AACnB,GAJD;;AAMAG,EAAAA,QAAQ;AACR,SAAOL,GAAP;AACA,CAvnBD;;AAynBA,SAASqB,iBAAT,CAA2BhR,IAA3B,EAAiC;AAChCT,oBAAIuL,KAAJ,CAAU,qBAAqBmF,SAAS,CAACjQ,IAAD,CAAxC;AACA;;AAGD,SAASiQ,SAAT,CAAmBjQ,IAAnB,EAAyB;AACxB,SAAOA,IAAI,CAACvB,IAAL,GAAY,GAAZ,GAAkBuB,IAAI,CAACrB,KAA9B;AACA;AAED;AACA;AACA;AACA;;;AACA,SAASe,YAAT,CAAsBC,KAAtB,EAA6B;AAC5B,SAAOC,2BAAqBD,KAArB,CAAP;AACA;;AAED,MAAMkV,oBAAoB,GAAG,CAA7B;AACA,MAAMC,uBAAuB,GAAG,CAAhC;AACA,MAAMC,eAAe,GAAG,CAAxB;AACA,MAAMC,uBAAuB,GAAG,CAAhC;AACA,MAAMC,+BAA+B,GAAG,EAAxC;AACA,MAAMC,gCAAgC,GAAG,EAAzC;AACA,MAAMC,qBAAqB,GAAG,EAA9B;AAGA;AACA;AACA;AACA;;;;;;;;;AC1vBA;;;;eAEe1G;;;;ACFf;AACA,IAAI2G,OAAO,GAAGlM,MAAM,CAACC,OAAP,GAAiB,EAA/B,EAEA;AACA;AACA;AACA;;AAEA,IAAIkM,gBAAJ;AACA,IAAIC,kBAAJ;;AAEA,SAASC,gBAAT,GAA4B;AACxB,QAAM,IAAI/W,KAAJ,CAAU,iCAAV,CAAN;AACH;;AACD,SAASgX,mBAAT,GAAgC;AAC5B,QAAM,IAAIhX,KAAJ,CAAU,mCAAV,CAAN;AACH;;AACA,aAAY;AACT,MAAI;AACA,QAAI,OAAOiX,UAAP,KAAsB,UAA1B,EAAsC;AAClCJ,MAAAA,gBAAgB,GAAGI,UAAnB;AACH,KAFD,MAEO;AACHJ,MAAAA,gBAAgB,GAAGE,gBAAnB;AACH;AACJ,GAND,CAME,OAAOpL,CAAP,EAAU;AACRkL,IAAAA,gBAAgB,GAAGE,gBAAnB;AACH;;AACD,MAAI;AACA,QAAI,OAAOG,YAAP,KAAwB,UAA5B,EAAwC;AACpCJ,MAAAA,kBAAkB,GAAGI,YAArB;AACH,KAFD,MAEO;AACHJ,MAAAA,kBAAkB,GAAGE,mBAArB;AACH;AACJ,GAND,CAME,OAAOrL,CAAP,EAAU;AACRmL,IAAAA,kBAAkB,GAAGE,mBAArB;AACH;AACJ,CAnBA,GAAD;;AAoBA,SAASG,UAAT,CAAoBC,GAApB,EAAyB;AACrB,MAAIP,gBAAgB,KAAKI,UAAzB,EAAqC;AACjC;AACA,WAAOA,UAAU,CAACG,GAAD,EAAM,CAAN,CAAjB;AACH,GAJoB,CAKrB;;;AACA,MAAI,CAACP,gBAAgB,KAAKE,gBAArB,IAAyC,CAACF,gBAA3C,KAAgEI,UAApE,EAAgF;AAC5EJ,IAAAA,gBAAgB,GAAGI,UAAnB;AACA,WAAOA,UAAU,CAACG,GAAD,EAAM,CAAN,CAAjB;AACH;;AACD,MAAI;AACA;AACA,WAAOP,gBAAgB,CAACO,GAAD,EAAM,CAAN,CAAvB;AACH,GAHD,CAGE,OAAMzL,CAAN,EAAQ;AACN,QAAI;AACA;AACA,aAAOkL,gBAAgB,CAACnL,IAAjB,CAAsB,IAAtB,EAA4B0L,GAA5B,EAAiC,CAAjC,CAAP;AACH,KAHD,CAGE,OAAMzL,CAAN,EAAQ;AACN;AACA,aAAOkL,gBAAgB,CAACnL,IAAjB,CAAsB,IAAtB,EAA4B0L,GAA5B,EAAiC,CAAjC,CAAP;AACH;AACJ;AAGJ;;AACD,SAASC,eAAT,CAAyBC,MAAzB,EAAiC;AAC7B,MAAIR,kBAAkB,KAAKI,YAA3B,EAAyC;AACrC;AACA,WAAOA,YAAY,CAACI,MAAD,CAAnB;AACH,GAJ4B,CAK7B;;;AACA,MAAI,CAACR,kBAAkB,KAAKE,mBAAvB,IAA8C,CAACF,kBAAhD,KAAuEI,YAA3E,EAAyF;AACrFJ,IAAAA,kBAAkB,GAAGI,YAArB;AACA,WAAOA,YAAY,CAACI,MAAD,CAAnB;AACH;;AACD,MAAI;AACA;AACA,WAAOR,kBAAkB,CAACQ,MAAD,CAAzB;AACH,GAHD,CAGE,OAAO3L,CAAP,EAAS;AACP,QAAI;AACA;AACA,aAAOmL,kBAAkB,CAACpL,IAAnB,CAAwB,IAAxB,EAA8B4L,MAA9B,CAAP;AACH,KAHD,CAGE,OAAO3L,CAAP,EAAS;AACP;AACA;AACA,aAAOmL,kBAAkB,CAACpL,IAAnB,CAAwB,IAAxB,EAA8B4L,MAA9B,CAAP;AACH;AACJ;AAIJ;;AACD,IAAIC,KAAK,GAAG,EAAZ;AACA,IAAIC,QAAQ,GAAG,KAAf;AACA,IAAIC,YAAJ;AACA,IAAIC,UAAU,GAAG,CAAC,CAAlB;;AAEA,SAASC,eAAT,GAA2B;AACvB,MAAI,CAACH,QAAD,IAAa,CAACC,YAAlB,EAAgC;AAC5B;AACH;;AACDD,EAAAA,QAAQ,GAAG,KAAX;;AACA,MAAIC,YAAY,CAAC/W,MAAjB,EAAyB;AACrB6W,IAAAA,KAAK,GAAGE,YAAY,CAACG,MAAb,CAAoBL,KAApB,CAAR;AACH,GAFD,MAEO;AACHG,IAAAA,UAAU,GAAG,CAAC,CAAd;AACH;;AACD,MAAIH,KAAK,CAAC7W,MAAV,EAAkB;AACdmX,IAAAA,UAAU;AACb;AACJ;;AAED,SAASA,UAAT,GAAsB;AAClB,MAAIL,QAAJ,EAAc;AACV;AACH;;AACD,MAAIM,OAAO,GAAGX,UAAU,CAACQ,eAAD,CAAxB;AACAH,EAAAA,QAAQ,GAAG,IAAX;AAEA,MAAIO,GAAG,GAAGR,KAAK,CAAC7W,MAAhB;;AACA,SAAMqX,GAAN,EAAW;AACPN,IAAAA,YAAY,GAAGF,KAAf;AACAA,IAAAA,KAAK,GAAG,EAAR;;AACA,WAAO,EAAEG,UAAF,GAAeK,GAAtB,EAA2B;AACvB,UAAIN,YAAJ,EAAkB;AACdA,QAAAA,YAAY,CAACC,UAAD,CAAZ,CAAyBM,GAAzB;AACH;AACJ;;AACDN,IAAAA,UAAU,GAAG,CAAC,CAAd;AACAK,IAAAA,GAAG,GAAGR,KAAK,CAAC7W,MAAZ;AACH;;AACD+W,EAAAA,YAAY,GAAG,IAAf;AACAD,EAAAA,QAAQ,GAAG,KAAX;AACAH,EAAAA,eAAe,CAACS,OAAD,CAAf;AACH;;AAEDlB,OAAO,CAACqB,QAAR,GAAmB,UAAUb,GAAV,EAAe;AAC9B,MAAIc,IAAI,GAAG,IAAIzE,KAAJ,CAAU5H,SAAS,CAACnL,MAAV,GAAmB,CAA7B,CAAX;;AACA,MAAImL,SAAS,CAACnL,MAAV,GAAmB,CAAvB,EAA0B;AACtB,SAAK,IAAI8C,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGqI,SAAS,CAACnL,MAA9B,EAAsC8C,CAAC,EAAvC,EAA2C;AACvC0U,MAAAA,IAAI,CAAC1U,CAAC,GAAG,CAAL,CAAJ,GAAcqI,SAAS,CAACrI,CAAD,CAAvB;AACH;AACJ;;AACD+T,EAAAA,KAAK,CAACzU,IAAN,CAAW,IAAIqV,IAAJ,CAASf,GAAT,EAAcc,IAAd,CAAX;;AACA,MAAIX,KAAK,CAAC7W,MAAN,KAAiB,CAAjB,IAAsB,CAAC8W,QAA3B,EAAqC;AACjCL,IAAAA,UAAU,CAACU,UAAD,CAAV;AACH;AACJ,CAXD,EAaA;;;AACA,SAASM,IAAT,CAAcf,GAAd,EAAmBgB,KAAnB,EAA0B;AACtB,OAAKhB,GAAL,GAAWA,GAAX;AACA,OAAKgB,KAAL,GAAaA,KAAb;AACH;;AACDD,IAAI,CAACvY,SAAL,CAAeoY,GAAf,GAAqB,YAAY;AAC7B,OAAKZ,GAAL,CAASxL,KAAT,CAAe,IAAf,EAAqB,KAAKwM,KAA1B;AACH,CAFD;;AAGAxB,OAAO,CAACyB,KAAR,GAAgB,SAAhB;AAEAzB,OAAO,CAAC0B,GAAR,GAAc,EAAd;AACA1B,OAAO,CAAC2B,IAAR,GAAe,EAAf;AACA3B,OAAO,CAAC4B,OAAR,GAAkB,EAAlB,EAAsB;;AACtB5B,OAAO,CAAC6B,QAAR,GAAmB,EAAnB;;AAEA,SAAS7N,IAAT,GAAgB,CAAE;;AAElBgM,OAAO,CAAC9F,EAAR,GAAalG,IAAb;AACAgM,OAAO,CAAC8B,WAAR,GAAsB9N,IAAtB;AACAgM,OAAO,CAAC+B,IAAR,GAAe/N,IAAf;AACAgM,OAAO,CAACgC,GAAR,GAAchO,IAAd;AACAgM,OAAO,CAACiC,cAAR,GAAyBjO,IAAzB;AACAgM,OAAO,CAACkC,kBAAR,GAA6BlO,IAA7B;AACAgM,OAAO,CAACmC,IAAR,GAAenO,IAAf;AACAgM,OAAO,CAACoC,eAAR,GAA0BpO,IAA1B;AACAgM,OAAO,CAACqC,mBAAR,GAA8BrO,IAA9B;;AAEAgM,OAAO,CAACsC,SAAR,GAAoB,UAAU1S,IAAV,EAAgB;AAAE,SAAO,EAAP;AAAW,CAAjD;;AAEAoQ,OAAO,CAACuC,OAAR,GAAkB,UAAU3S,IAAV,EAAgB;AAC9B,QAAM,IAAIxG,KAAJ,CAAU,kCAAV,CAAN;AACH,CAFD;;AAIA4W,OAAO,CAACwC,GAAR,GAAc,YAAY;AAAE,SAAO,GAAP;AAAY,CAAxC;;AACAxC,OAAO,CAACyC,KAAR,GAAgB,UAAUC,GAAV,EAAe;AAC3B,QAAM,IAAItZ,KAAJ,CAAU,gCAAV,CAAN;AACH,CAFD;;AAGA4W,OAAO,CAAC2C,KAAR,GAAgB,YAAW;AAAE,SAAO,CAAP;AAAW,CAAxC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACvLA,IAAA,QAAA,GAAA,YAAA,CAAA,OAAA,CAAA,UAAA,CAAA,CAAA;;AACA,IAAA,EAAA,GAAA,YAAA,CAAA,OAAA,CAAA,IAAA,CAAA,CAAA;;AACA,IAAA,YAAA,GAAA,eAAA,CAAA,OAAA,CAAA,YAAA,CAAA,CAAA;;AAOA,IAAA,KAAA;AAAA;AAAA,YAAA;AAII,WAAA,KAAA,CAAY,IAAZ,EAAkB,MAAlB,EAAwB;AACpB,SAAK,MAAL,GAAc,MAAd;AACA,SAAK,IAAL,GAAY,IAAZ;AACH;;AACL,SAAA,KAAA;AARA,CAAA,EAAA;;AAWA,IAAA,SAAA;AAAA;AAAA,YAAA;AAQI,WAAA,SAAA,GAAA;AAPA,SAAA,UAAA,GAAyB,EAAzB;AAQI,SAAK,SAAL,GAAoC,QAAQ,CAAC,cAAT,CAAwB,UAAxB,CAApC;AACA,SAAK,SAAL,CAAe,gBAAf,CAAgC,OAAhC,EAAyC,KAAK,eAAL,CAAqB,IAArB,CAA0B,IAA1B,CAAzC;AACA,SAAK,OAAL,GAAiC,QAAQ,CAAC,cAAT,CAAwB,WAAxB,CAAjC;AACA,SAAK,SAAL,GAAmC,QAAQ,CAAC,cAAT,CAAwB,aAAxB,CAAnC;AACA,SAAK,gBAAL,GAAqC,QAAQ,CAAC,cAAT,CAAwB,WAAxB,CAArC;AACH;;AAED,EAAA,SAAA,CAAA,SAAA,CAAA,UAAA,GAAA,UAAW,IAAX,EAAuB;AACnB,SAAK,WAAL;AACA,QAAO,MAAM,GAAc,IAAI,YAAA,CAAA,OAAJ,EAA3B;AACA,SAAK,GAAL,GAAW,MAAM,CAAC,SAAP,CAAiB,IAAjB,CAAX;AACA,QAAM,MAAM,GAAG,KAAK,GAAL,CAAS,MAAT,CAAgB,KAAhB,CAAsB,MAArC;;AACA,SAAK,IAAM,SAAX,IAAwB,MAAxB,EAAgC;AAC5B,WAAK,QAAL,CAAc,SAAd,EAAyB,EAAzB;AACH;AACJ,GARD;;AAUA,EAAA,SAAA,CAAA,SAAA,CAAA,eAAA,GAAA,YAAA;AACI,QAAI,IAAI,GAAW,KAAK,OAAL,CAAa,KAAhC;AACA,QAAI,MAAM,GAAW,MAAM,CAAC,KAAK,SAAL,CAAe,KAAhB,CAA3B;AACA,SAAK,QAAL,CAAc,IAAd,EAAoB,MAApB;AACH,GAJD;;AAOA,EAAA,SAAA,CAAA,SAAA,CAAA,IAAA,GAAA,UAAK,QAAL,EAAqB;AACjB,QAAI,EAAE,GAAG,QAAQ,CAAC,eAAT,CAAyB,EAAE,CAAC,gBAAH,CAAoB,QAApB,CAAzB,EAAwD,OAAO,CAAC,MAAhE,CAAT;AACA,IAAA,EAAE,CAAC,EAAH,CAAM,MAAN,EAAc,UAAU,IAAV,EAAc;AACxB,MAAA,OAAO,CAAC,GAAR,CAAY,IAAZ;AACH,KAFD;AAGH,GALD;;AAOA,EAAA,SAAA,CAAA,SAAA,CAAA,WAAA,GAAA,YAAA;AACI,SAAK,gBAAL,CAAsB,SAAtB,GAAkC,EAAlC;AACH,GAFD;;AAIA,EAAA,SAAA,CAAA,SAAA,CAAA,OAAA,GAAA,YAAA;AACI,QAAI,IAAI,GAAqB,EAA7B;;AACA,SAAqB,IAAA,EAAA,GAAA,CAAA,EAAA,EAAA,GAAA,KAAK,GAAL,CAAS,QAA9B,EAAqB,EAAA,GAAA,EAAA,CAAA,MAArB,EAAqB,EAAA,EAArB,EAAwC;AAAnC,UAAM,MAAM,GAAA,EAAA,CAAA,EAAA,CAAZ;;AACD,UAAK,MAAM,CAAC,OAAD,CAAN,IAAmB,KAAK,UAAzB,IAAyC,MAAM,CAAC,MAAD,CAAN,KAAmB,QAAhE,EAA2E;AACvE,YAAI,EAAE,GAAmB;AACrB,UAAA,CAAC,EAAE,CADkB;AAErB,UAAA,CAAC,EAAE,CAFkB;AAGrB,UAAA,CAAC,EAAE;AAHkB,SAAzB;AAKA,QAAA,EAAE,CAAC,CAAH,GAAO,UAAU,CAAC,MAAM,CAAC,QAAD,CAAN,CAAiB,CAAlB,CAAjB;AACA,QAAA,EAAE,CAAC,CAAH,GAAO,UAAU,CAAC,MAAM,CAAC,QAAD,CAAN,CAAiB,CAAlB,CAAjB;AACA,QAAA,EAAE,CAAC,CAAH,GAAO,KAAK,UAAL,CAAgB,MAAM,CAAC,OAAD,CAAtB,EAAiC,MAAxC;AACA,QAAA,IAAI,CAAC,IAAL,CACI,EADJ;AAGH;AACJ;;AACD,WAAO,IAAP;AACH,GAlBD;;AAoBA,EAAA,SAAA,CAAA,SAAA,CAAA,QAAA,GAAA,YAAA;AAEI,QAAI,YAAY,GAAiB,EAAjC;;AACA,SAAqB,IAAA,EAAA,GAAA,CAAA,EAAA,EAAA,GAAA,KAAK,GAAL,CAAS,QAA9B,EAAqB,EAAA,GAAA,EAAA,CAAA,MAArB,EAAqB,EAAA,EAArB,EAAwC;AAAnC,UAAM,MAAM,GAAA,EAAA,CAAA,EAAA,CAAZ;;AACD,UAAK,MAAM,CAAC,MAAD,CAAN,KAAmB,MAAxB,EAAiC;AAC7B,YAAI,EAAE,GAAS;AACX,UAAA,MAAM,EAAE;AACJ,YAAA,CAAC,EAAE,CADC;AAEJ,YAAA,CAAC,EAAE;AAFC,WADG;AAKX,UAAA,MAAM,EAAE;AACJ,YAAA,CAAC,EAAE,CADC;AAEJ,YAAA,CAAC,EAAE;AAFC;AALG,SAAf;AAUA,QAAA,EAAE,CAAC,MAAH,CAAU,CAAV,GAAc,UAAU,CAAC,MAAM,CAAC,UAAD,CAAN,CAAmB,CAAnB,EAAsB,CAAvB,CAAxB;AACA,QAAA,EAAE,CAAC,MAAH,CAAU,CAAV,GAAc,UAAU,CAAC,MAAM,CAAC,UAAD,CAAN,CAAmB,CAAnB,EAAsB,CAAvB,CAAxB;AACA,QAAA,EAAE,CAAC,MAAH,CAAU,CAAV,GAAc,UAAU,CAAC,MAAM,CAAC,UAAD,CAAN,CAAmB,CAAnB,EAAsB,CAAvB,CAAxB;AACA,QAAA,EAAE,CAAC,MAAH,CAAU,CAAV,GAAc,UAAU,CAAC,MAAM,CAAC,UAAD,CAAN,CAAmB,CAAnB,EAAsB,CAAvB,CAAxB;;AACA,YAAI,YAAY,CAAC,MAAM,CAAC,OAAD,CAAP,CAAZ,KAAkC,SAAtC,EAAiD;AAC7C,UAAA,YAAY,CAAC,MAAM,CAAC,OAAD,CAAP,CAAZ,GAAgC,EAAhC;AACH;;AACD,QAAA,YAAY,CAAC,MAAM,CAAC,OAAD,CAAP,CAAZ,CAA8B,IAA9B,CAAmC,EAAnC;AACH;AACJ;;AACD,WAAO,YAAP;AACH,GA1BD;;AA4BA,EAAA,SAAA,CAAA,SAAA,CAAA,QAAA,GAAA,UAAS,IAAT,EAAuB,MAAvB,EAAqC;AAArC,QAAA,KAAA,GAAA,IAAA;;AACI,QAAI,KAAK,GAAG,IAAI,KAAJ,CAAU,IAAV,EAAgB,MAAhB,CAAZ;AACA,QAAI,OAAO,GAAgB,QAAQ,CAAC,aAAT,CAAuB,IAAvB,CAA3B;AACA,IAAA,OAAO,CAAC,EAAR,GAAa,KAAG,KAAK,CAAC,IAAtB;AAEA,QAAI,SAAS,GAAqB,QAAQ,CAAC,aAAT,CAAuB,OAAvB,CAAlC;AACA,IAAA,SAAS,CAAC,IAAV,GAAiB,MAAjB;AACA,IAAA,SAAS,CAAC,KAAV,GAAkB,IAAlB;AAEA,QAAI,WAAW,GAAqB,QAAQ,CAAC,aAAT,CAAuB,OAAvB,CAApC;AACA,IAAA,WAAW,CAAC,IAAZ,GAAmB,QAAnB;AACA,IAAA,WAAW,CAAC,KAAZ,GAAoB,MAAM,CAAC,QAAP,EAApB;AAGA,QAAI,YAAY,GAAsB,QAAQ,CAAC,aAAT,CAAuB,QAAvB,CAAtC;AACA,IAAA,YAAY,CAAC,SAAb,GAAyB,gBAAzB;AACA,IAAA,YAAY,CAAC,SAAb,GAAyB,QAAzB;AAEA,IAAA,OAAO,CAAC,WAAR,CAAoB,SAApB;AACA,IAAA,OAAO,CAAC,WAAR,CAAoB,WAApB;AACA,IAAA,OAAO,CAAC,WAAR,CAAoB,YAApB;AAEA,SAAK,gBAAL,CAAsB,WAAtB,CAAkC,OAAlC;AAEA,SAAK,UAAL,CAAgB,KAAK,CAAC,IAAtB,IAA8B,KAA9B;AAGA,IAAA,SAAS,CAAC,gBAAV,CAA2B,QAA3B,EAAqC,YAAA;AACjC,MAAA,KAAI,CAAC,UAAL,CAAgB,KAAK,CAAC,IAAtB,EAA4B,IAA5B,GAAmC,SAAS,CAAC,KAA7C;AACH,KAFD;AAIA,IAAA,WAAW,CAAC,gBAAZ,CAA6B,QAA7B,EAAuC,YAAA;AACnC,MAAA,KAAI,CAAC,UAAL,CAAgB,KAAK,CAAC,IAAtB,EAA4B,MAA5B,GAAqC,WAAW,CAAC,KAAjD;AAEH,KAHD;AAKA,IAAA,YAAY,CAAC,gBAAb,CAA8B,OAA9B,EAAuC,YAAA;AACnC,MAAA,OAAO,CAAC,MAAR;AACA,aAAO,KAAI,CAAC,UAAL,CAAgB,KAAK,CAAC,IAAtB,CAAP;AACH,KAHD;AAIH,GAxCD;;AA0CJ,SAAA,SAAA;AAtIA,CAAA,EAAA;;AAwIA,OAAA,CAAA,OAAA,GAAe,SAAf;;;;;;;;AC1JA,SAAS,iBAAT,CAA2B,GAA3B,EAAgC,GAAhC,EAAqC,GAArC,EAA0C,GAA1C,EAA+C,GAA/C,EAAoD,GAApD,EAAuD;AACnD,MAAK,CAAC,GAAG,GAAG,GAAP,KAAe,GAAG,GAAG,GAArB,CAAD,GAA+B,CAAC,GAAG,GAAG,GAAP,KAAe,GAAG,GAAG,GAArB,CAAnC,EACI,OAAO,CAAP,CADJ,KAEK,IAAK,CAAC,GAAG,GAAG,GAAP,KAAe,GAAG,GAAG,GAArB,CAAD,IAAgC,CAAC,GAAG,GAAG,GAAP,KAAe,GAAG,GAAG,GAArB,CAApC,EACD,OAAO,CAAP;AAEJ,SAAO,CAAC,CAAR;AACH;;AAED,SAAS,eAAT,CAAyB,EAAzB,EAA6B,EAA7B,EAAiC,EAAjC,EAAqC,EAArC,EAAyC,EAAzC,EAA6C,EAA7C,EAA+C;AAC3C,MAAI,EAAE,GAAG,EAAL,IAAW,EAAE,GAAG,EAAhB,IAAsB,EAAE,GAAG,EAA/B,EAAmC,OAAO,IAAP,CAAnC,KACK,IAAI,EAAE,GAAG,EAAL,IAAW,EAAE,GAAG,EAAhB,IAAsB,EAAE,GAAG,EAA/B,EAAmC,OAAO,IAAP,CAAnC,KACA,IAAI,EAAE,GAAG,EAAL,IAAW,EAAE,GAAG,EAAhB,IAAsB,EAAE,GAAG,EAA/B,EAAmC,OAAO,IAAP,CAAnC,KACA,IAAI,EAAE,GAAG,EAAL,IAAW,EAAE,GAAG,EAAhB,IAAsB,EAAE,GAAG,EAA/B,EAAmC,OAAO,IAAP,CAAnC,KACA,IAAI,EAAE,IAAI,EAAN,IAAY,EAAE,IAAI,EAAlB,IAAwB,EAAE,IAAI,EAAN,IAAY,EAAE,IAAI,EAA9C,EAAkD,OAAO,IAAP;AACvD,SAAO,KAAP;AACH;;AAGD,IAAM,KAAK,GAAG;AACV,EAAA,wBAAwB,EAAE,kCAAC,MAAD,EAAgB,MAAhB,EAA6B;AACnD,WAAO,IAAI,CAAC,IAAL,CAAU,IAAA,CAAA,GAAA,CAAC,MAAM,CAAC,CAAP,GAAW,MAAM,CAAC,CAAnB,EAAyB,CAAzB,IAA6B,IAAA,CAAA,GAAA,CAAC,MAAM,CAAC,CAAP,GAAW,MAAM,CAAC,CAAnB,EAAyB,CAAzB,CAAvC,CAAP;AACH,GAHS;AAKV,EAAA,sBAAsB,EAAE,gCACpB,MADoB,EAEpB,MAFoB,EAEP;AAEb,QAAM,MAAM,GAAG,MAAM,CAAC,CAAP,GAAW,MAAM,CAAC,CAAjC;AACA,QAAM,MAAM,GAAG,MAAM,CAAC,CAAP,GAAW,MAAM,CAAC,CAAjC;AACA,QAAM,KAAK,GAAG,IAAI,CAAC,IAAL,CAAU,MAAM,GAAG,MAAnB,CAAd;AACA,QAAI,MAAM,GAAG,CAAb,EAAgB,OAAO,KAAK,GAAG,IAAI,CAAC,EAApB;AAEhB,WAAO,KAAP;AACH,GAfS;AAiBV,EAAA,2BAA2B,EAAE,qCAAC,MAAD,EAAgB,MAAhB,EAA+B,CAA/B,EAAwC;AAOjE,QAAM,CAAC,GAAW,KAAK,CAAC,wBAAN,CAA+B,MAA/B,EAAuC,MAAvC,CAAlB,CAPiE,CAOA;;AACjE,QAAM,KAAK,GAAW,KAAK,CAAC,sBAAN,CAA6B,MAA7B,EAAqC,MAArC,CAAtB;AACA,QAAM,MAAM,GAAW,IAAI,CAAC,IAAL,CAAU,IAAA,CAAA,GAAA,CAAA,CAAA,EAAK,CAAL,IAAS,IAAA,CAAA,GAAA,CAAA,CAAA,EAAK,CAAL,CAAnB,CAAvB;AACA,QAAM,EAAE,GAAW,IAAI,CAAC,IAAL,CAAU,CAAC,GAAG,MAAd,CAAnB;AAGA,QAAM,MAAM,GAAG,KAAK,CAAC,kBAAN,CAAyB,MAAzB,EAAiC,MAAjC,EAAyC,CAAC,KAAD,GAAS,EAAT,GAAc,IAAI,CAAC,EAA5D,CAAf;AACA,QAAM,MAAM,GAAG,KAAK,CAAC,kBAAN,CAAyB,MAAzB,EAAiC,MAAjC,EAAyC,CAAC,KAAD,GAAS,EAAlD,CAAf,CAdiE,CAgBjE;AACA;;AACA,QAAM,KAAK,GAAW,KAAK,CAAC,wBAAN,CAA+B,MAA/B,EAAuC,MAAvC,CAAtB;AACA,QAAM,GAAG,GAAW,IAAI,CAAC,IAAL,CAAW,KAAK,GAAG,CAAT,GAAc,CAAxB,CAApB;AAEA,WAAO;AACH,MAAA,EAAE,EAAE,MAAM,CAAC,CADR;AAEH,MAAA,EAAE,EAAE,MAAM,CAAC,CAFR;AAGH,MAAA,EAAE,EAAE,MAAM,CAAC,CAHR;AAIH,MAAA,EAAE,EAAE,MAAM,CAAC,CAJR;AAKH,MAAA,EAAE,EAAE;AALD,KAAP;AAOH,GA7CS;AA+CV,EAAA,wBAAwB,EACpB,kCACI,MADJ,EAEI,MAFJ,EAGI,MAHJ,EAGiB;AAOb,QAAM,EAAE,GAAG,MAAM,CAAC,CAAP,GAAW,MAAM,CAAC,CAA7B;AACA,QAAM,EAAE,GAAG,MAAM,CAAC,CAAP,GAAW,MAAM,CAAC,CAA7B;AACA,QAAM,EAAE,GAAG,IAAI,CAAC,IAAL,CAAU,EAAE,GAAG,EAAL,GAAU,EAAE,GAAG,EAAzB,CAAX;AACA,QAAM,CAAC,GAAG,IAAI,CAAC,IAAL,CAAU,MAAM,GAAG,EAAnB,CAAV;AACA,QAAM,CAAC,GAAG,IAAI,CAAC,KAAL,CAAW,EAAX,EAAe,EAAf,CAAV;AAEA,QAAI,CAAC,GAAG,CAAC,GAAG,CAAZ;AACA,QAAM,MAAM,GAAG;AAAC,MAAA,CAAC,EAAE,MAAM,GAAG,IAAI,CAAC,GAAL,CAAS,CAAT,CAAT,GAAuB,MAAM,CAAC,CAAlC;AAAqC,MAAA,CAAC,EAAE,MAAM,GAAG,CAAC,IAAI,CAAC,GAAL,CAAS,CAAT,CAAV,GAAwB,MAAM,CAAC;AAAvE,KAAf;AAEA,IAAA,CAAC,GAAG,CAAC,GAAG,CAAR;AACA,QAAM,MAAM,GAAG;AAAC,MAAA,CAAC,EAAE,MAAM,GAAG,CAAC,IAAI,CAAC,GAAL,CAAS,CAAT,CAAV,GAAwB,MAAM,CAAC,CAAnC;AAAsC,MAAA,CAAC,EAAE,MAAM,GAAG,IAAI,CAAC,GAAL,CAAS,CAAT,CAAT,GAAuB,MAAM,CAAC;AAAvE,KAAf;AAEA,QAAM,KAAK,GAAW,KAAK,CAAC,wBAAN,CAA+B,MAA/B,EAAuC,MAAvC,CAAtB;AACA,QAAM,GAAG,GAAW,IAAI,CAAC,IAAL,CAAW,KAAK,GAAG,CAAT,GAAc,MAAxB,CAApB;AAEA,WAAO;AACH,MAAA,MAAM,EAAA,MADH;AAEH,MAAA,MAAM,EAAA,MAFH;AAGH,MAAA,EAAE,EAAE;AAHD,KAAP;AAKH,GA9EK;AA+EV,EAAA,kBAAkB,EAAE,4BAAC,KAAD,EAAe,CAAf,EAA0B,EAA1B,EAAoC;AACpD,QAAM,EAAE,GAAW,CAAC,GAAG,IAAI,CAAC,GAAL,CAAS,EAAT,CAAvB;AACA,QAAM,EAAE,GAAW,CAAC,GAAG,IAAI,CAAC,GAAL,CAAS,EAAT,CAAvB;AACA,WAAO;AACH,MAAA,CAAC,EAAE,KAAK,CAAC,CAAN,GAAU,EADV;AAEH,MAAA,CAAC,EAAE,KAAK,CAAC,CAAN,GAAU;AAFV,KAAP;AAIH,GAtFS;AAwFV,EAAA,oBAAoB,EAAE,8BAAC,KAAD,EAAc,KAAd,EAAyB;AAC3C;AACA,QAAI,WAAJ;AAAA,QAAiB,CAAjB;AAAA,QAAoB,CAApB;AAAA,QAAuB,UAAvB;AAAA,QAAmC,UAAnC;AAAA,QAA+C,MAAM,GAAG;AACpD,MAAA,CAAC,EAAE,IADiD;AAEpD,MAAA,CAAC,EAAE,IAFiD;AAGpD,MAAA,OAAO,EAAE,KAH2C;AAIpD,MAAA,OAAO,EAAE;AAJ2C,KAAxD;AAMA,IAAA,WAAW,GAAI,CAAC,KAAK,CAAC,MAAN,CAAa,CAAb,GAAiB,KAAK,CAAC,MAAN,CAAa,CAA/B,KAAqC,KAAK,CAAC,MAAN,CAAa,CAAb,GAAiB,KAAK,CAAC,MAAN,CAAa,CAAnE,CAAD,GAA2E,CAAC,KAAK,CAAC,MAAN,CAAa,CAAb,GAAiB,KAAK,CAAC,MAAN,CAAa,CAA/B,KAAqC,KAAK,CAAC,MAAN,CAAa,CAAb,GAAiB,KAAK,CAAC,MAAN,CAAa,CAAnE,CAAzF;;AACA,QAAI,WAAW,IAAI,CAAnB,EAAsB;AAClB,aAAO,MAAP;AACH;;AACD,IAAA,CAAC,GAAG,KAAK,CAAC,MAAN,CAAa,CAAb,GAAiB,KAAK,CAAC,MAAN,CAAa,CAAlC;AACA,IAAA,CAAC,GAAG,KAAK,CAAC,MAAN,CAAa,CAAb,GAAiB,KAAK,CAAC,MAAN,CAAa,CAAlC;AACA,IAAA,UAAU,GAAI,CAAC,KAAK,CAAC,MAAN,CAAa,CAAb,GAAiB,KAAK,CAAC,MAAN,CAAa,CAA/B,IAAoC,CAArC,GAA2C,CAAC,KAAK,CAAC,MAAN,CAAa,CAAb,GAAiB,KAAK,CAAC,MAAN,CAAa,CAA/B,IAAoC,CAA5F;AACA,IAAA,UAAU,GAAI,CAAC,KAAK,CAAC,MAAN,CAAa,CAAb,GAAiB,KAAK,CAAC,MAAN,CAAa,CAA/B,IAAoC,CAArC,GAA2C,CAAC,KAAK,CAAC,MAAN,CAAa,CAAb,GAAiB,KAAK,CAAC,MAAN,CAAa,CAA/B,IAAoC,CAA5F;AACA,IAAA,CAAC,GAAG,UAAU,GAAG,WAAjB;AACA,IAAA,CAAC,GAAG,UAAU,GAAG,WAAjB,CAjB2C,CAkB3C;;AACA,IAAA,MAAM,CAAC,CAAP,GAAW,KAAK,CAAC,MAAN,CAAa,CAAb,GAAkB,CAAC,IAAI,KAAK,CAAC,MAAN,CAAa,CAAb,GAAiB,KAAK,CAAC,MAAN,CAAa,CAAlC,CAA9B;AACA,IAAA,MAAM,CAAC,CAAP,GAAW,KAAK,CAAC,MAAN,CAAa,CAAb,GAAkB,CAAC,IAAI,KAAK,CAAC,MAAN,CAAa,CAAb,GAAiB,KAAK,CAAC,MAAN,CAAa,CAAlC,CAA9B;AACA;;;;;AAKA;;AACA,QAAI,CAAC,GAAG,CAAJ,IAAS,CAAC,GAAG,CAAjB,EAAoB;AAChB,MAAA,MAAM,CAAC,OAAP,GAAiB,IAAjB;AACH,KA7B0C,CA8B3C;;;AACA,QAAI,CAAC,GAAG,CAAJ,IAAS,CAAC,GAAG,CAAjB,EAAoB;AAChB,MAAA,MAAM,CAAC,OAAP,GAAiB,IAAjB;AACH,KAjC0C,CAkC3C;;;AACA,WAAO,MAAM,CAAC,OAAP,IAAkB,MAAM,CAAC,OAAhC;AACH,GA5HS;AA6HV,EAAA,EAAE,EAAE,YAAC,EAAD,EAAa,EAAb,EAAyB,MAAzB,EAAuC;AACvC,WAAQ,EAAE,IAAI,EAAE,GAAG,MAAT,CAAH,GAAuB,EAA9B;AACH,GA/HS;AAgIV,EAAA,GAAG,EAAE,aAAC,EAAD,EAAa,EAAb,EAAyB,EAAzB,EAAqC,MAArC,EAAmD;AACpD,WAAQ,EAAE,IAAI,EAAE,GAAG,MAAT,CAAH,GAAuB,EAA9B;AACH;AAlIS,CAAd;AAqIA,OAAA,CAAA,OAAA,GAAe,KAAf;;;;;;;;;;;;;;AC1JA,IAAA,YAAA,GAAA,eAAA,CAAA,OAAA,CAAA,yBAAA,CAAA,CAAA;;AACA,IAAA,OAAA,GAAA,eAAA,CAAA,OAAA,CAAA,eAAA,CAAA,CAAA;;AAEA,IAAM,IAAI,GAAqB,QAAQ,CAAC,cAAT,CAAwB,MAAxB,CAA/B;AACA,IAAM,UAAU,GAAsB,QAAQ,CAAC,cAAT,CAAwB,YAAxB,CAAtC;AACA,IAAM,oBAAoB,GAAqB,QAAQ,CAAC,cAAT,CAAwB,iBAAxB,CAA/C;AACA,IAAI,MAAM,GAAG,IAAI,YAAA,CAAA,OAAJ,EAAb;;AAGA,IAAM,iBAAiB,GAAG,SAApB,iBAAoB,GAAA;AACtB,MAAI,UAAU,GAAG,IAAI,CAAC,KAAL,CAAW,CAAX,CAAjB;AACA,MAAI,UAAU,GAAG,IAAI,UAAJ,EAAjB;;AACA,EAAA,UAAU,CAAC,MAAX,GAAoB,UAAU,eAAV,EAAyB;AACzC;AACA,IAAA,MAAM,CAAC,UAAP,CAAkB,eAAe,CAAC,MAAhB,CAAuB,MAAvB,CAA8B,QAA9B,EAAlB;AACA,QAAM,YAAY,GAAG,MAAM,CAAC,QAAP,EAArB,CAHyC,CAIzC;;AACA,IAAA,OAAO,CAAC,GAAR,CAAY,YAAZ;;AAEA,SAAK,IAAM,KAAX,IAAoB,YAApB,EAAkC;AAC9B,UAAI,QAAQ,GAAG,CAAf;;AACA,WAA4B,IAAA,EAAA,GAAA,CAAA,EAAA,EAAA,GAAA,YAAY,CAAC,KAAD,CAAxC,EAA4B,EAAA,GAAA,EAAA,CAAA,MAA5B,EAA4B,EAAA,EAA5B,EAAiD;AAA5C,YAAM,aAAa,GAAA,EAAA,CAAA,EAAA,CAAnB;AACD,QAAA,QAAQ,IAAI,OAAA,CAAA,OAAA,CAAM,wBAAN,CACR,aAAa,CAAC,MADN,EAER,aAAa,CAAC,MAFN,CAAZ;AAIH,OAP6B,CAQ9B;;;AACA,MAAA,OAAO,CAAC,GAAR,CAAY,KAAZ;AACA,UAAI,OAAO,GAAgB,QAAQ,CAAC,aAAT,CAAuB,IAAvB,CAA3B;AACA,MAAA,OAAO,CAAC,EAAR,GAAa,KAAG,KAAhB;AAEA,UAAM,QAAQ,GAAoB,QAAQ,CAAC,aAAT,CAAuB,MAAvB,CAAlC;AACA,MAAA,QAAQ,CAAC,SAAT,GAAwB,KAAK,GAAA,KAA7B;AAEA,UAAM,SAAS,GAAoB,QAAQ,CAAC,aAAT,CAAuB,MAAvB,CAAnC;AACA,MAAA,SAAS,CAAC,SAAV,GAAsB,KAAG,QAAzB;AAEA,MAAA,OAAO,CAAC,WAAR,CAAoB,QAApB;AACA,MAAA,OAAO,CAAC,WAAR,CAAoB,SAApB;AAEA,MAAA,oBAAoB,CAAC,WAArB,CAAiC,OAAjC;AACH;AAGJ,GAjCD;;AAkCA,EAAA,UAAU,CAAC,UAAX,CAAsB,UAAtB,EAAkC,OAAlC;AACH,CAtCD;;AAwCA,UAAU,CAAC,gBAAX,CAA4B,OAA5B,EAAqC,iBAArC;;;ACjDA,IAAIC,UAAU,GAAG,4BAAjB;AAEA,IAAIC,SAAS,GAAG/O,MAAM,CAACgP,MAAP,CAAcC,MAA9B;;AAEA,SAASA,MAAT,CAAgBC,UAAhB,EAA4B;AAC1BH,EAAAA,SAAS,CAAC/N,IAAV,CAAe,IAAf,EAAqBkO,UAArB;AACA,OAAKC,GAAL,GAAW;AACTra,IAAAA,IAAI,EAAEkL,MAAM,CAACgP,MAAP,CAAcI,OADX;AAETC,IAAAA,gBAAgB,EAAE,EAFT;AAGTC,IAAAA,iBAAiB,EAAE,EAHV;AAITC,IAAAA,MAAM,EAAE,UAAUC,EAAV,EAAc;AACpB,WAAKH,gBAAL,CAAsBjX,IAAtB,CAA2BoX,EAAE,IAAI,YAAY,CAAE,CAA/C;AACD,KANQ;AAOTC,IAAAA,OAAO,EAAE,UAAUD,EAAV,EAAc;AACrB,WAAKF,iBAAL,CAAuBlX,IAAvB,CAA4BoX,EAA5B;AACD;AATQ,GAAX;AAYAxP,EAAAA,MAAM,CAACgP,MAAP,CAAcI,OAAd,GAAwB,IAAxB;AACD;;AAEDpP,MAAM,CAACgP,MAAP,CAAcC,MAAd,GAAuBA,MAAvB;AACA,IAAIS,aAAJ,EAAmBC,cAAnB;AAEA,IAAIC,MAAM,GAAG5P,MAAM,CAACgP,MAAP,CAAcY,MAA3B;;AACA,IAAI,CAAC,CAACA,MAAD,IAAW,CAACA,MAAM,CAACC,eAApB,KAAwC,OAAOC,SAAP,KAAqB,WAAjE,EAA8E;AAC5E,MAAIC,QAAQ,GAAG,MAA4B/M,QAAQ,CAAC+M,QAApD;AACA,MAAIC,QAAQ,GAAGhN,QAAQ,CAACgN,QAAT,KAAsB,QAAtB,GAAiC,KAAjC,GAAyC,IAAxD;AACA,MAAIC,EAAE,GAAG,IAAIH,SAAJ,CAAcE,QAAQ,GAAG,KAAX,GAAmBD,QAAnB,GAA8B,GAA9B,aAA2D,GAAzE,CAAT;;AACAE,EAAAA,EAAE,CAACC,SAAH,GAAe,UAASC,KAAT,EAAgB;AAC7BT,IAAAA,aAAa,GAAG,EAAhB;AACAC,IAAAA,cAAc,GAAG,EAAjB;AAEA,QAAI7a,IAAI,GAAGsb,IAAI,CAAC3K,KAAL,CAAW0K,KAAK,CAACrb,IAAjB,CAAX;;AAEA,QAAIA,IAAI,CAACsC,IAAL,KAAc,QAAlB,EAA4B;AAC1B,UAAIiZ,OAAO,GAAG,KAAd;AACAvb,MAAAA,IAAI,CAACwb,MAAL,CAAYC,OAAZ,CAAoB,UAASC,KAAT,EAAgB;AAClC,YAAI,CAACA,KAAK,CAACC,KAAX,EAAkB;AAChB,cAAIC,SAAS,GAAGC,cAAc,CAACC,MAAM,CAACC,aAAR,EAAuBL,KAAK,CAACM,EAA7B,CAA9B;;AACA,cAAIJ,SAAJ,EAAe;AACbL,YAAAA,OAAO,GAAG,IAAV;AACD;AACF;AACF,OAPD,EAF0B,CAW1B;;AACAA,MAAAA,OAAO,GAAGA,OAAO,IAAIvb,IAAI,CAACwb,MAAL,CAAYS,KAAZ,CAAkB,UAASP,KAAT,EAAgB;AACrD,eAAOA,KAAK,CAACpZ,IAAN,KAAe,KAAf,IAAwBoZ,KAAK,CAACQ,SAAN,CAAgBC,EAA/C;AACD,OAFoB,CAArB;;AAIA,UAAIZ,OAAJ,EAAa;AACXja,QAAAA,OAAO,CAAC8a,KAAR;AAEApc,QAAAA,IAAI,CAACwb,MAAL,CAAYC,OAAZ,CAAoB,UAAUC,KAAV,EAAiB;AACnCW,UAAAA,QAAQ,CAACP,MAAM,CAACC,aAAR,EAAuBL,KAAvB,CAAR;AACD,SAFD;AAIAb,QAAAA,cAAc,CAACY,OAAf,CAAuB,UAAUa,CAAV,EAAa;AAClCC,UAAAA,YAAY,CAACD,CAAC,CAAC,CAAD,CAAF,EAAOA,CAAC,CAAC,CAAD,CAAR,CAAZ;AACD,SAFD;AAGD,OAVD,MAUO,IAAIpO,QAAQ,CAACsO,MAAb,EAAqB;AAAE;AAC5BtO,QAAAA,QAAQ,CAACsO,MAAT;AACD;AACF;;AAED,QAAIxc,IAAI,CAACsC,IAAL,KAAc,QAAlB,EAA4B;AAC1B6Y,MAAAA,EAAE,CAACsB,KAAH;;AACAtB,MAAAA,EAAE,CAACuB,OAAH,GAAa,YAAY;AACvBxO,QAAAA,QAAQ,CAACsO,MAAT;AACD,OAFD;AAGD;;AAED,QAAIxc,IAAI,CAACsC,IAAL,KAAc,gBAAlB,EAAoC;AAClChB,MAAAA,OAAO,CAACC,GAAR,CAAY,2BAAZ;AAEAob,MAAAA,kBAAkB;AACnB;;AAED,QAAI3c,IAAI,CAACsC,IAAL,KAAc,OAAlB,EAA2B;AACzBhB,MAAAA,OAAO,CAAC4P,KAAR,CAAc,kBAAkBlR,IAAI,CAACkR,KAAL,CAAW0L,OAA7B,GAAuC,IAAvC,GAA8C5c,IAAI,CAACkR,KAAL,CAAW2L,KAAvE;AAEAF,MAAAA,kBAAkB;AAElB,UAAIG,OAAO,GAAGC,kBAAkB,CAAC/c,IAAD,CAAhC;AACA6N,MAAAA,QAAQ,CAACmP,IAAT,CAAcC,WAAd,CAA0BH,OAA1B;AACD;AACF,GA1DD;AA2DD;;AAED,SAASH,kBAAT,GAA8B;AAC5B,MAAIG,OAAO,GAAGjP,QAAQ,CAACqP,cAAT,CAAwBlD,UAAxB,CAAd;;AACA,MAAI8C,OAAJ,EAAa;AACXA,IAAAA,OAAO,CAACK,MAAR;AACD;AACF;;AAED,SAASJ,kBAAT,CAA4B/c,IAA5B,EAAkC;AAChC,MAAI8c,OAAO,GAAGjP,QAAQ,CAACuP,aAAT,CAAuB,KAAvB,CAAd;AACAN,EAAAA,OAAO,CAACd,EAAR,GAAahC,UAAb,CAFgC,CAIhC;;AACA,MAAI4C,OAAO,GAAG/O,QAAQ,CAACuP,aAAT,CAAuB,KAAvB,CAAd;AACA,MAAIC,UAAU,GAAGxP,QAAQ,CAACuP,aAAT,CAAuB,KAAvB,CAAjB;AACAR,EAAAA,OAAO,CAACU,SAAR,GAAoBtd,IAAI,CAACkR,KAAL,CAAW0L,OAA/B;AACAS,EAAAA,UAAU,CAACC,SAAX,GAAuBtd,IAAI,CAACkR,KAAL,CAAW2L,KAAlC;AAEAC,EAAAA,OAAO,CAACS,SAAR,GACE,2NACE,mFADF,GAEE,yEAFF,GAGE,qEAHF,GAG0EX,OAAO,CAACW,SAHlF,GAG8F,QAH9F,GAIE,OAJF,GAIYF,UAAU,CAACE,SAJvB,GAImC,QAJnC,GAKA,QANF;AASA,SAAOT,OAAP;AAED;;AAED,SAASU,UAAT,CAAoBtD,MAApB,EAA4B8B,EAA5B,EAAgC;AAC9B,MAAIyB,OAAO,GAAGvD,MAAM,CAACuD,OAArB;;AACA,MAAI,CAACA,OAAL,EAAc;AACZ,WAAO,EAAP;AACD;;AAED,MAAIC,OAAO,GAAG,EAAd;AACA,MAAIC,CAAJ,EAAOC,CAAP,EAAUC,GAAV;;AAEA,OAAKF,CAAL,IAAUF,OAAV,EAAmB;AACjB,SAAKG,CAAL,IAAUH,OAAO,CAACE,CAAD,CAAP,CAAW,CAAX,CAAV,EAAyB;AACvBE,MAAAA,GAAG,GAAGJ,OAAO,CAACE,CAAD,CAAP,CAAW,CAAX,EAAcC,CAAd,CAAN;;AACA,UAAIC,GAAG,KAAK7B,EAAR,IAAe/H,KAAK,CAAC6J,OAAN,CAAcD,GAAd,KAAsBA,GAAG,CAACA,GAAG,CAAC3c,MAAJ,GAAa,CAAd,CAAH,KAAwB8a,EAAjE,EAAsE;AACpE0B,QAAAA,OAAO,CAACpa,IAAR,CAAaqa,CAAb;AACD;AACF;AACF;;AAED,MAAIzD,MAAM,CAACY,MAAX,EAAmB;AACjB4C,IAAAA,OAAO,GAAGA,OAAO,CAACtF,MAAR,CAAeoF,UAAU,CAACtD,MAAM,CAACY,MAAR,EAAgBkB,EAAhB,CAAzB,CAAV;AACD;;AAED,SAAO0B,OAAP;AACD;;AAED,SAASrB,QAAT,CAAkBnC,MAAlB,EAA0BwB,KAA1B,EAAiC;AAC/B,MAAI+B,OAAO,GAAGvD,MAAM,CAACuD,OAArB;;AACA,MAAI,CAACA,OAAL,EAAc;AACZ;AACD;;AAED,MAAIA,OAAO,CAAC/B,KAAK,CAACM,EAAP,CAAP,IAAqB,CAAC9B,MAAM,CAACY,MAAjC,EAAyC;AACvC,QAAIJ,EAAE,GAAG,IAAIzO,QAAJ,CAAa,SAAb,EAAwB,QAAxB,EAAkC,SAAlC,EAA6CyP,KAAK,CAACQ,SAAN,CAAgBC,EAA7D,CAAT;AACAT,IAAAA,KAAK,CAACC,KAAN,GAAc,CAAC8B,OAAO,CAAC/B,KAAK,CAACM,EAAP,CAAtB;AACAyB,IAAAA,OAAO,CAAC/B,KAAK,CAACM,EAAP,CAAP,GAAoB,CAACtB,EAAD,EAAKgB,KAAK,CAACqC,IAAX,CAApB;AACD,GAJD,MAIO,IAAI7D,MAAM,CAACY,MAAX,EAAmB;AACxBuB,IAAAA,QAAQ,CAACnC,MAAM,CAACY,MAAR,EAAgBY,KAAhB,CAAR;AACD;AACF;;AAED,SAASG,cAAT,CAAwB3B,MAAxB,EAAgC8B,EAAhC,EAAoC;AAClC,MAAIyB,OAAO,GAAGvD,MAAM,CAACuD,OAArB;;AACA,MAAI,CAACA,OAAL,EAAc;AACZ;AACD;;AAED,MAAI,CAACA,OAAO,CAACzB,EAAD,CAAR,IAAgB9B,MAAM,CAACY,MAA3B,EAAmC;AACjC,WAAOe,cAAc,CAAC3B,MAAM,CAACY,MAAR,EAAgBkB,EAAhB,CAArB;AACD;;AAED,MAAIpB,aAAa,CAACoB,EAAD,CAAjB,EAAuB;AACrB;AACD;;AACDpB,EAAAA,aAAa,CAACoB,EAAD,CAAb,GAAoB,IAApB;AAEA,MAAIgC,MAAM,GAAG9D,MAAM,CAAC+D,KAAP,CAAajC,EAAb,CAAb;AAEAnB,EAAAA,cAAc,CAACvX,IAAf,CAAoB,CAAC4W,MAAD,EAAS8B,EAAT,CAApB;;AAEA,MAAIgC,MAAM,IAAIA,MAAM,CAAC3D,GAAjB,IAAwB2D,MAAM,CAAC3D,GAAP,CAAWE,gBAAX,CAA4BrZ,MAAxD,EAAgE;AAC9D,WAAO,IAAP;AACD;;AAED,SAAOsc,UAAU,CAAC1B,MAAM,CAACC,aAAR,EAAuBC,EAAvB,CAAV,CAAqCkC,IAArC,CAA0C,UAAUlC,EAAV,EAAc;AAC7D,WAAOH,cAAc,CAACC,MAAM,CAACC,aAAR,EAAuBC,EAAvB,CAArB;AACD,GAFM,CAAP;AAGD;;AAED,SAASO,YAAT,CAAsBrC,MAAtB,EAA8B8B,EAA9B,EAAkC;AAChC,MAAIgC,MAAM,GAAG9D,MAAM,CAAC+D,KAAP,CAAajC,EAAb,CAAb;AACA9B,EAAAA,MAAM,CAACI,OAAP,GAAiB,EAAjB;;AACA,MAAI0D,MAAJ,EAAY;AACVA,IAAAA,MAAM,CAAC3D,GAAP,CAAWra,IAAX,GAAkBka,MAAM,CAACI,OAAzB;AACD;;AAED,MAAI0D,MAAM,IAAIA,MAAM,CAAC3D,GAAjB,IAAwB2D,MAAM,CAAC3D,GAAP,CAAWG,iBAAX,CAA6BtZ,MAAzD,EAAiE;AAC/D8c,IAAAA,MAAM,CAAC3D,GAAP,CAAWG,iBAAX,CAA6BiB,OAA7B,CAAqC,UAAU0C,EAAV,EAAc;AACjDA,MAAAA,EAAE,CAACjE,MAAM,CAACI,OAAR,CAAF;AACD,KAFD;AAGD;;AAED,SAAOJ,MAAM,CAAC+D,KAAP,CAAajC,EAAb,CAAP;AACA9B,EAAAA,MAAM,CAAC8B,EAAD,CAAN;AAEAgC,EAAAA,MAAM,GAAG9D,MAAM,CAAC+D,KAAP,CAAajC,EAAb,CAAT;;AACA,MAAIgC,MAAM,IAAIA,MAAM,CAAC3D,GAAjB,IAAwB2D,MAAM,CAAC3D,GAAP,CAAWE,gBAAX,CAA4BrZ,MAAxD,EAAgE;AAC9D8c,IAAAA,MAAM,CAAC3D,GAAP,CAAWE,gBAAX,CAA4BkB,OAA5B,CAAoC,UAAU0C,EAAV,EAAc;AAChDA,MAAAA,EAAE;AACH,KAFD;;AAGA,WAAO,IAAP;AACD;AACF","file":"lines.app.275c3b5c.js","sourceRoot":"..","sourcesContent":["/**\r\n * DxfArrayScanner\r\n *\r\n * Based off the AutoCad 2012 DXF Reference\r\n * http://images.autodesk.com/adsk/files/autocad_2012_pdf_dxf-reference_enu.pdf\r\n *\r\n * Reads through an array representing lines of a dxf file. Takes an array and\r\n * provides an easy interface to extract group code and value pairs.\r\n * @param data - an array where each element represents a line in the dxf file\r\n * @constructor\r\n */\r\nexport default function DxfArrayScanner(data) {\r\n\tthis._pointer = 0;\r\n\tthis._data = data;\r\n\tthis._eof = false;\r\n}\r\n\r\n/**\r\n * Gets the next group (code, value) from the array. A group is two consecutive elements\r\n * in the array. The first is the code, the second is the value.\r\n * @returns {{code: Number}|*}\r\n */\r\nDxfArrayScanner.prototype.next = function() {\r\n\tvar group;\r\n\tif(!this.hasNext()) {\r\n\t\tif(!this._eof)\r\n\t\t\tthrow new Error('Unexpected end of input: EOF group not read before end of file. Ended on code ' + this._data[this._pointer]);\r\n\t\telse\r\n\t\t\tthrow new Error('Cannot call \\'next\\' after EOF group has been read');\r\n\t}\r\n\r\n\tgroup = {\r\n\t\tcode: parseInt(this._data[this._pointer])\r\n\t};\r\n\r\n\tthis._pointer++;\r\n\r\n\tgroup.value = parseGroupValue(group.code, this._data[this._pointer].trim());\r\n\t\r\n\tthis._pointer++;\r\n\r\n\tif(group.code === 0 && group.value === 'EOF') this._eof = true;\r\n\r\n\tthis.lastReadGroup = group;\r\n\r\n\treturn group;\r\n};\r\n\r\nDxfArrayScanner.prototype.peek = function() {\r\n\tif(!this.hasNext()) {\r\n\t\tif(!this._eof)\r\n\t\t\tthrow new Error('Unexpected end of input: EOF group not read before end of file. Ended on code ' + this._data[this._pointer]);\r\n\t\telse\r\n\t\t\tthrow new Error('Cannot call \\'next\\' after EOF group has been read');\r\n\t}\r\n\t\r\n\tvar group = {\r\n\t\tcode: parseInt(this._data[this._pointer])\r\n\t};\r\n\r\n\tgroup.value = parseGroupValue(group.code, this._data[this._pointer + 1].trim());\r\n\r\n\treturn group;\r\n};\r\n\r\n\r\nDxfArrayScanner.prototype.rewind = function(numberOfGroups) {\r\n\tnumberOfGroups = numberOfGroups || 1;\r\n\tthis._pointer = this._pointer - numberOfGroups * 2;\r\n};\r\n\r\n/**\r\n * Returns true if there is another code/value pair (2 elements in the array).\r\n * @returns {boolean}\r\n */\r\nDxfArrayScanner.prototype.hasNext = function() {\r\n\t// Check if we have read EOF group code\r\n\tif(this._eof) {\r\n\t\treturn false;\r\n\t}\r\n\t\r\n\t// We need to be sure there are two lines available\r\n\tif(this._pointer > this._data.length - 2) {\r\n\t\treturn false;\r\n\t}\r\n\treturn true;\r\n};\r\n\r\n/**\r\n * Returns true if the scanner is at the end of the array\r\n * @returns {boolean}\r\n */\r\nDxfArrayScanner.prototype.isEOF = function() {\r\n\treturn this._eof;\r\n};\r\n\r\n/**\r\n * Parse a value to its proper type.\r\n * See pages 3 - 10 of the AutoCad DXF 2012 reference given at the top of this file\r\n *\r\n * @param code\r\n * @param value\r\n * @returns {*}\r\n */\r\nfunction parseGroupValue(code, value) {\r\n\tif(code <= 9) return value;\r\n\tif(code >= 10 && code <= 59) return parseFloat(value);\r\n\tif(code >= 60 && code <= 99) return parseInt(value);\r\n\tif(code >= 100 && code <= 109) return value;\r\n\tif(code >= 110 && code <= 149) return parseFloat(value);\r\n\tif(code >= 160 && code <= 179) return parseInt(value);\r\n\tif(code >= 210 && code <= 239) return parseFloat(value);\r\n\tif(code >= 270 && code <= 289) return parseInt(value);\r\n\tif(code >= 290 && code <= 299) return parseBoolean(value);\r\n\tif(code >= 300 && code <= 369) return value;\r\n\tif(code >= 370 && code <= 389) return parseInt(value);\r\n\tif(code >= 390 && code <= 399) return value;\r\n\tif(code >= 400 && code <= 409) return parseInt(value);\r\n\tif(code >= 410 && code <= 419) return value;\r\n\tif(code >= 420 && code <= 429) return parseInt(value);\r\n\tif(code >= 430 && code <= 439) return value;\r\n\tif(code >= 440 && code <= 459) return parseInt(value);\r\n\tif(code >= 460 && code <= 469) return parseFloat(value);\r\n\tif(code >= 470 && code <= 481) return value;\r\n\tif(code === 999) return value;\r\n\tif(code >= 1000 && code <= 1009) return value;\r\n\tif(code >= 1010 && code <= 1059) return parseFloat(value);\r\n\tif(code >= 1060 && code <= 1071) return parseInt(value);\r\n\r\n\tconsole.log('WARNING: Group code does not have a defined type: %j', { code: code, value: value });\r\n\treturn value;\r\n}\r\n\r\n/**\r\n * Parse a boolean according to a 1 or 0 value\r\n * @param str\r\n * @returns {boolean}\r\n */\r\nfunction parseBoolean(str) {\r\n\tif(str === '0') return false;\r\n\tif(str === '1') return true;\r\n\tthrow TypeError('String \\'' + str + '\\' cannot be cast to Boolean type');\r\n}","/**\r\n * AutoCad files sometimes use an indexed color value between 1 and 255 inclusive.\r\n * Each value corresponds to a color. index 1 is red, that is 16711680 or 0xFF0000.\r\n * index 0 and 256, while included in this array, are actually reserved for inheritance\r\n * values in AutoCad so they should not be used for index color lookups.\r\n */\r\n\r\nexport default [\r\n 0,\r\n 16711680,\r\n 16776960,\r\n 65280,\r\n 65535,\r\n 255,\r\n 16711935,\r\n 16777215,\r\n 8421504,\r\n 12632256,\r\n 16711680,\r\n 16744319,\r\n 13369344,\r\n 13395558,\r\n 10027008,\r\n 10046540,\r\n 8323072,\r\n 8339263,\r\n 4980736,\r\n 4990502,\r\n 16727808,\r\n 16752511,\r\n 13382400,\r\n 13401958,\r\n 10036736,\r\n 10051404,\r\n 8331008,\r\n 8343359,\r\n 4985600,\r\n 4992806,\r\n 16744192,\r\n 16760703,\r\n 13395456,\r\n 13408614,\r\n 10046464,\r\n 10056268,\r\n 8339200,\r\n 8347455,\r\n 4990464,\r\n 4995366,\r\n 16760576,\r\n 16768895,\r\n 13408512,\r\n 13415014,\r\n 10056192,\r\n 10061132,\r\n 8347392,\r\n 8351551,\r\n 4995328,\r\n 4997670,\r\n 16776960,\r\n 16777087,\r\n 13421568,\r\n 13421670,\r\n 10000384,\r\n 10000460,\r\n 8355584,\r\n 8355647,\r\n 5000192,\r\n 5000230,\r\n 12582656,\r\n 14679935,\r\n 10079232,\r\n 11717734,\r\n 7510016,\r\n 8755276,\r\n 6258432,\r\n 7307071,\r\n 3755008,\r\n 4344870,\r\n 8388352,\r\n 12582783,\r\n 6736896,\r\n 10079334,\r\n 5019648,\r\n 7510092,\r\n 4161280,\r\n 6258495,\r\n 2509824,\r\n 3755046,\r\n 4194048,\r\n 10485631,\r\n 3394560,\r\n 8375398,\r\n 2529280,\r\n 6264908,\r\n 2064128,\r\n 5209919,\r\n 1264640,\r\n 3099686,\r\n 65280,\r\n 8388479,\r\n 52224,\r\n 6736998,\r\n 38912,\r\n 5019724,\r\n 32512,\r\n 4161343,\r\n 19456,\r\n 2509862,\r\n 65343,\r\n 8388511,\r\n 52275,\r\n 6737023,\r\n 38950,\r\n 5019743,\r\n 32543,\r\n 4161359,\r\n 19475,\r\n 2509871,\r\n 65407,\r\n 8388543,\r\n 52326,\r\n 6737049,\r\n 38988,\r\n 5019762,\r\n 32575,\r\n 4161375,\r\n 19494,\r\n 2509881,\r\n 65471,\r\n 8388575,\r\n 52377,\r\n 6737074,\r\n 39026,\r\n 5019781,\r\n 32607,\r\n 4161391,\r\n 19513,\r\n 2509890,\r\n 65535,\r\n 8388607,\r\n 52428,\r\n 6737100,\r\n 39064,\r\n 5019800,\r\n 32639,\r\n 4161407,\r\n 19532,\r\n 2509900,\r\n 49151,\r\n 8380415,\r\n 39372,\r\n 6730444,\r\n 29336,\r\n 5014936,\r\n 24447,\r\n 4157311,\r\n 14668,\r\n 2507340,\r\n 32767,\r\n 8372223,\r\n 26316,\r\n 6724044,\r\n 19608,\r\n 5010072,\r\n 16255,\r\n 4153215,\r\n 9804,\r\n 2505036,\r\n 16383,\r\n 8364031,\r\n 13260,\r\n 6717388,\r\n 9880,\r\n 5005208,\r\n 8063,\r\n 4149119,\r\n 4940,\r\n 2502476,\r\n 255,\r\n 8355839,\r\n 204,\r\n 6710988,\r\n 152,\r\n 5000344,\r\n 127,\r\n 4145023,\r\n 76,\r\n 2500172,\r\n 4129023,\r\n 10452991,\r\n 3342540,\r\n 8349388,\r\n 2490520,\r\n 6245528,\r\n 2031743,\r\n 5193599,\r\n 1245260,\r\n 3089996,\r\n 8323327,\r\n 12550143,\r\n 6684876,\r\n 10053324,\r\n 4980888,\r\n 7490712,\r\n 4128895,\r\n 6242175,\r\n 2490444,\r\n 3745356,\r\n 12517631,\r\n 14647295,\r\n 10027212,\r\n 11691724,\r\n 7471256,\r\n 8735896,\r\n 6226047,\r\n 7290751,\r\n 3735628,\r\n 4335180,\r\n 16711935,\r\n 16744447,\r\n 13369548,\r\n 13395660,\r\n 9961624,\r\n 9981080,\r\n 8323199,\r\n 8339327,\r\n 4980812,\r\n 4990540,\r\n 16711871,\r\n 16744415,\r\n 13369497,\r\n 13395634,\r\n 9961586,\r\n 9981061,\r\n 8323167,\r\n 8339311,\r\n 4980793,\r\n 4990530,\r\n 16711807,\r\n 16744383,\r\n 13369446,\r\n 13395609,\r\n 9961548,\r\n 9981042,\r\n 8323135,\r\n 8339295,\r\n 4980774,\r\n 4990521,\r\n 16711743,\r\n 16744351,\r\n 13369395,\r\n 13395583,\r\n 9961510,\r\n 9981023,\r\n 8323103,\r\n 8339279,\r\n 4980755,\r\n 4990511,\r\n 3355443,\r\n 5987163,\r\n 8684676,\r\n 11382189,\r\n 14079702,\r\n 16777215\r\n];","import AUTO_CAD_COLOR_INDEX from './AutoCadColorIndex';\r\n\r\n/**\r\n * Returns the truecolor value of the given AutoCad color index value\r\n * @return {Number} truecolor value as a number\r\n */\r\nexport function getAcadColor(index) {\r\n\treturn AUTO_CAD_COLOR_INDEX[index];\r\n}\r\n\r\n/**\r\n * Parses the 2D or 3D coordinate, vector, or point. When complete,\r\n * the scanner remains on the last group of the coordinate.\r\n * @param {*} scanner \r\n */\r\nexport function parsePoint(scanner) {\r\n    var point = {};\r\n\r\n    // Reread group for the first coordinate\r\n    scanner.rewind();\r\n    var curr = scanner.next();\r\n\r\n    var code = curr.code;\r\n    point.x = curr.value;\r\n\r\n    code += 10;\r\n    curr = scanner.next();\r\n    if(curr.code != code)\r\n        throw new Error('Expected code for point value to be ' + code +\r\n        ' but got ' + curr.code + '.');\r\n    point.y = curr.value;\r\n\r\n    code += 10;\r\n    curr = scanner.next();\r\n    if(curr.code != code)\r\n    {\r\n        // Only the x and y are specified. Don't read z.\r\n        scanner.rewind(); // Let the calling code advance off the point\r\n        return point;\r\n    }\r\n    point.z = curr.value;\r\n    \r\n    return point;\r\n};\r\n\r\n/**\r\n * Attempts to parse codes common to all entities. Returns true if the group\r\n * was handled by this function.\r\n * @param {*} entity - the entity currently being parsed \r\n * @param {*} curr - the current group being parsed\r\n */\r\nexport function checkCommonEntityProperties(entity, curr) {\r\n    switch(curr.code) {\r\n        case 0:\r\n            entity.type = curr.value;\r\n            break;\r\n        case 5:\r\n            entity.handle = curr.value;\r\n            break;\r\n        case 6:\r\n            entity.lineType = curr.value;\r\n            break;\r\n        case 8: // Layer name\r\n            entity.layer = curr.value;\r\n            break;\r\n        case 48:\r\n            entity.lineTypeScale = curr.value;\r\n            break;\r\n        case 60:\r\n            entity.visible = curr.value === 0;\r\n            break;\r\n        case 62: // Acad Index Color. 0 inherits ByBlock. 256 inherits ByLayer. Default is bylayer\r\n            entity.colorIndex = curr.value;\r\n            entity.color = getAcadColor(Math.abs(curr.value));\r\n            break;\r\n        case 67:\r\n            entity.inPaperSpace = curr.value !== 0;\r\n            break;\r\n        case 100:\r\n            //ignore\r\n            break;\r\n        case 330:\r\n            entity.ownerHandle = curr.value;\r\n            break;\r\n        case 347:\r\n            entity.materialObjectHandle = curr.value;\r\n            break;\r\n        case 370:\r\n            //From https://www.woutware.com/Forum/Topic/955/lineweight?returnUrl=%2FForum%2FUserPosts%3FuserId%3D478262319\r\n            // An integer representing 100th of mm, must be one of the following values:\r\n            // 0, 5, 9, 13, 15, 18, 20, 25, 30, 35, 40, 50, 53, 60, 70, 80, 90, 100, 106, 120, 140, 158, 200, 211.\r\n            // -3 = STANDARD, -2 = BYLAYER, -1 = BYBLOCK\r\n            entity.lineweight = curr.value;\r\n            break;\r\n        case 420: // TrueColor Color\r\n            entity.color = curr.value;\r\n            break;\r\n        case 1000: \r\n            entity.extendedData = entity.extendedData || {};\r\n            entity.extendedData.customStrings = entity.extendedData.customStrings || []; \r\n            entity.extendedData.customStrings.push(curr.value);\r\n            break;\r\n        case 1001: \r\n            entity.extendedData = entity.extendedData || {};\r\n            entity.extendedData.applicationName = curr.value;\r\n            break;\r\n        default:\r\n            return false;\r\n    }\r\n    return true;\r\n};\r\n","\r\nimport * as helpers from '../ParseHelpers'\r\n\r\nexport default function EntityParser() {}\r\n\r\nEntityParser.ForEntityName = '3DFACE';\r\n\r\nEntityParser.prototype.parseEntity = function(scanner, curr) {\r\n\r\n    var entity = { type: curr.value, vertices: [] };\r\n    curr = scanner.next();\r\n    while (curr !== 'EOF') {\r\n        if (curr.code === 0) break;\r\n        switch (curr.code) {\r\n            case 70: // 1 = Closed shape, 128 = plinegen?, 0 = default\r\n                entity.shape = ((curr.value & 1) === 1);\r\n                entity.hasContinuousLinetypePattern = ((curr.value & 128) === 128);\r\n                break;\r\n            case 10: // X coordinate of point\r\n                entity.vertices = parse3dFaceVertices(scanner, curr);\r\n                curr = scanner.lastReadGroup;\r\n                break;\r\n            default:\r\n                helpers.checkCommonEntityProperties(entity, curr);\r\n                break;\r\n        }\r\n        curr = scanner.next();\r\n    }\r\n    return entity;\r\n};\r\n\r\nfunction parse3dFaceVertices(scanner, curr) {\r\n    var vertices = [],\r\n        i;\r\n    var vertexIsStarted = false;\r\n    var vertexIsFinished = false;\r\n    var verticesPer3dFace = 4; // there can be up to four vertices per face, although 3 is most used for TIN\r\n    \r\n    for (i = 0; i <= verticesPer3dFace; i++) {\r\n        var vertex = {};\r\n        while (curr !== 'EOF') {\r\n            if (curr.code === 0 || vertexIsFinished) break;\r\n\r\n            switch (curr.code) {\r\n                case 10: // X0\r\n                case 11: // X1\r\n                case 12: // X2\r\n                case 13: // X3\r\n                    if (vertexIsStarted) {\r\n                        vertexIsFinished = true;\r\n                        continue;\r\n                    }\r\n                    vertex.x = curr.value;\r\n                    vertexIsStarted = true;\r\n                    break;\r\n                case 20: // Y\r\n                case 21:\r\n                case 22:\r\n                case 23:\r\n                    vertex.y = curr.value;\r\n                    break;\r\n                case 30: // Z\r\n                case 31:\r\n                case 32:\r\n                case 33:\r\n                    vertex.z = curr.value;\r\n                    break;\r\n                default:\r\n                    // it is possible to have entity codes after the vertices.  \r\n                    // So if code is not accounted for return to entity parser where it might be accounted for\r\n                    return vertices;\r\n                    continue;\r\n            }\r\n            curr = scanner.next();\r\n        }\r\n        // See https://groups.google.com/forum/#!topic/comp.cad.autocad/9gn8s5O_w6E\r\n        vertices.push(vertex);\r\n        vertexIsStarted = false;\r\n        vertexIsFinished = false;\r\n    }\r\n    scanner.rewind();\r\n    return vertices;\r\n};\r\n","\r\nimport * as helpers from '../ParseHelpers'\r\n\r\nexport default function EntityParser() {}\r\n\r\nEntityParser.ForEntityName = 'ARC';\r\n\r\nEntityParser.prototype.parseEntity = function(scanner, curr) {\r\n    var entity, endAngle;\r\n    entity = { type: curr.value };\r\n    curr = scanner.next();\r\n    while(curr !== 'EOF') {\r\n        if(curr.code === 0) break;\r\n\r\n        switch(curr.code) {\r\n            case 10: // X coordinate of point\r\n                entity.center = helpers.parsePoint(scanner);\r\n                break;\r\n            case 40: // radius\r\n                entity.radius = curr.value;\r\n                break;\r\n            case 50: // start angle\r\n                entity.startAngle = Math.PI / 180 * curr.value;\r\n                break;\r\n            case 51: // end angle\r\n                entity.endAngle = Math.PI / 180 * curr.value;\r\n                entity.angleLength = entity.endAngle - entity.startAngle; // angleLength is deprecated\r\n                break;\r\n            default: // ignored attribute\r\n                helpers.checkCommonEntityProperties(entity, curr);\r\n                break;\r\n        }\r\n        curr = scanner.next();\r\n    }\r\n    return entity;\r\n};","\r\nimport * as helpers from '../ParseHelpers'\r\n\r\nexport default function EntityParser() {}\r\n\r\nEntityParser.ForEntityName = 'ATTDEF';\r\n\r\nEntityParser.prototype.parseEntity = function(scanner, curr) {\r\n    var entity = {\r\n        type: curr.value,\r\n        scale: 1,\r\n        textStyle: 'STANDARD'\r\n     };\r\n    curr = scanner.next();\r\n    while (curr !== 'EOF') {\r\n        if (curr.code === 0) {\r\n            break;\r\n        }\r\n        switch(curr.code) {\r\n            case 1:\r\n                entity.text = curr.value;\r\n                break;\r\n            case 2:\r\n                entity.tag = curr.value;\r\n                break;\r\n            case 3:\r\n                entity.prompt = curr.value;\r\n                break;\r\n            case 7:\r\n                entity.textStyle = curr.value;\r\n                break;\r\n            case 10: // X coordinate of 'first alignment point'\r\n                entity.startPoint = helpers.parsePoint(scanner);\r\n                break;\r\n            case 11: // X coordinate of 'second alignment point'\r\n                entity.endPoint = helpers.parsePoint(scanner);\r\n                break;\r\n            case 39:\r\n                entity.thickness = curr.value;\r\n                break;\r\n            case 40:\r\n                entity.textHeight = curr.value;\r\n                break;\r\n            case 41:\r\n                entity.scale = curr.value;\r\n                break;\r\n            case 50:\r\n                entity.rotation = curr.value;\r\n                break;\r\n            case 51:\r\n                entity.obliqueAngle = curr.value;\r\n                break;\r\n            case 70:\r\n                entity.invisible = !!(curr.value & 0x01);\r\n                entity.constant = !!(curr.value & 0x02);\r\n                entity.verificationRequired = !!(curr.value & 0x04);\r\n                entity.preset = !!(curr.value & 0x08);\r\n                break;\r\n            case 71:\r\n                entity.backwards = !!(curr.value & 0x02);\r\n                entity.mirrored = !!(curr.value & 0x04);\r\n                break;\r\n            case 72:\r\n                // TODO: enum values?\r\n                entity.horizontalJustification = curr.value;\r\n                break;\r\n            case 73:\r\n                entity.fieldLength = curr.value;\r\n                break;\r\n            case 74:\r\n                // TODO: enum values?\r\n                entity.verticalJustification = curr.value;\r\n                break;\r\n            case 100:\r\n                break;\r\n            case 210:\r\n                entity.extrusionDirectionX = curr.value;\r\n                break;\r\n            case 220:\r\n                entity.extrusionDirectionY = curr.value;\r\n                break;\r\n            case 230:\r\n                entity.extrusionDirectionZ = curr.value;\r\n                break;\r\n            default:\r\n                helpers.checkCommonEntityProperties(entity, curr);\r\n                break;\r\n        }\r\n        curr = scanner.next();\r\n    }\r\n\r\n    return entity;\r\n};","\r\nimport * as helpers from '../ParseHelpers'\r\n\r\nexport default function EntityParser() {}\r\n\r\nEntityParser.ForEntityName = 'CIRCLE';\r\n\r\nEntityParser.prototype.parseEntity = function(scanner, curr) {\r\n    var entity, endAngle;\r\n    entity = { type: curr.value };\r\n    curr = scanner.next();\r\n    while(curr !== 'EOF') {\r\n        if(curr.code === 0) break;\r\n\r\n        switch(curr.code) {\r\n            case 10: // X coordinate of point\r\n                entity.center = helpers.parsePoint(scanner);\r\n                break;\r\n            case 40: // radius\r\n                entity.radius = curr.value;\r\n                break;\r\n            case 50: // start angle\r\n                entity.startAngle = Math.PI / 180 * curr.value;\r\n                break;\r\n            case 51: // end angle\r\n                endAngle = Math.PI / 180 * curr.value;\r\n                if(endAngle < entity.startAngle)\r\n                    entity.angleLength = endAngle + 2 * Math.PI - entity.startAngle;\r\n                else\r\n                    entity.angleLength = endAngle - entity.startAngle;\r\n                entity.endAngle = endAngle;\r\n                break;\r\n            default: // ignored attribute\r\n                helpers.checkCommonEntityProperties(entity, curr);\r\n                break;\r\n        }\r\n        curr = scanner.next();\r\n    }\r\n    return entity;\r\n};","\r\nimport * as helpers from '../ParseHelpers'\r\n\r\nexport default function EntityParser() {}\r\n\r\nEntityParser.ForEntityName = 'DIMENSION';\r\n\r\nEntityParser.prototype.parseEntity = function(scanner, curr) {\r\n    var entity;\r\n\t\tentity = { type: curr.value };\r\n\t\tcurr = scanner.next();\r\n\t\twhile(curr !== 'EOF') {\r\n\t\t\tif(curr.code === 0) break;\r\n\r\n\t\t\tswitch(curr.code) {\r\n\t\t\t\tcase 2: // Referenced block name\r\n\t\t\t\t\tentity.block = curr.value;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 10: // X coordinate of 'first alignment point'\r\n\t\t\t\t\tentity.anchorPoint = helpers.parsePoint(scanner);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 11:\r\n\t\t\t\t\tentity.middleOfText = helpers.parsePoint(scanner);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 12: // Insertion point for clones of a dimension\r\n\t\t\t\t\tentity.insertionPoint = helpers.parsePoint(scanner);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 13: // Definition point for linear and angular dimensions \r\n\t\t\t\t\tentity.linearOrAngularPoint1 = helpers.parsePoint(scanner);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 14: // Definition point for linear and angular dimensions \r\n\t\t\t\t\tentity.linearOrAngularPoint2 = helpers.parsePoint(scanner);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 15: // Definition point for diameter, radius, and angular dimensions\r\n\t\t\t\t\tentity.diameterOrRadiusPoint = helpers.parsePoint(scanner);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 16: // Point defining dimension arc for angular dimensions\r\n\t\t\t\t\tentity.arcPoint = helpers.parsePoint(scanner);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 70: // Dimension type\r\n\t\t\t\t\tentity.dimensionType = curr.value;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 71: // 5 = Middle center\r\n\t\t\t\t\tentity.attachmentPoint = curr.value;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 42: // Actual measurement\r\n\t\t\t\t\tentity.actualMeasurement = curr.value;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 1: // Text entered by user explicitly\r\n\t\t\t\t\tentity.text = curr.value;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 50: // Angle of rotated, horizontal, or vertical dimensions\r\n\t\t\t\t\tentity.angle = curr.value;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tdefault: // check common entity attributes\r\n\t\t\t\t\thelpers.checkCommonEntityProperties(entity, curr);\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\tcurr = scanner.next();\r\n\t\t}\r\n\r\n\t\treturn entity;\r\n};\r\n\r\n\r\n","\r\nimport * as helpers from '../ParseHelpers'\r\n\r\nexport default function EntityParser() {}\r\n\r\nEntityParser.ForEntityName = 'ELLIPSE';\r\n\r\nEntityParser.prototype.parseEntity = function(scanner, curr) {\r\n    var entity;\r\n    entity = { type: curr.value };\r\n    curr = scanner.next();\r\n    while(curr !== 'EOF') {\r\n        if(curr.code === 0) break;\r\n\r\n        switch(curr.code) {\r\n            case 10:\r\n                entity.center = helpers.parsePoint(scanner);\r\n                break;\r\n            case 11:\r\n                entity.majorAxisEndPoint = helpers.parsePoint(scanner);\r\n                break;\r\n            case 40:\r\n                entity.axisRatio = curr.value;\r\n                break;\r\n            case 41:\r\n                entity.startAngle = curr.value;\r\n                break;\r\n            case 42:\r\n                entity.endAngle = curr.value;\r\n                break;\r\n            case 2:\r\n                entity.name = curr.value;\r\n                break;\r\n            default: // check common entity attributes\r\n                helpers.checkCommonEntityProperties(entity, curr);\r\n                break;\r\n        }\r\n        \r\n        curr = scanner.next();\r\n    }\r\n\r\n    return entity;\r\n};","\r\nimport * as helpers from '../ParseHelpers'\r\n\r\nexport default function EntityParser() {}\r\n\r\nEntityParser.ForEntityName = 'INSERT';\r\n\r\nEntityParser.prototype.parseEntity = function(scanner, curr) {\r\n    var entity;\r\n    entity = { type: curr.value };\r\n    curr = scanner.next();\r\n    while(curr !== 'EOF') {\r\n        if(curr.code === 0) break;\r\n\r\n        switch(curr.code) {\r\n            case 2:\r\n                entity.name = curr.value;\r\n                break;\r\n            case 41:\r\n                entity.xScale = curr.value;\r\n                break;\r\n            case 42:\r\n                entity.yScale = curr.value;\r\n                break;\r\n            case 43:\r\n                entity.zScale = curr.value;\r\n                break;\r\n            case 10:\r\n                entity.position = helpers.parsePoint(scanner);\r\n                break;\r\n            case 50:\r\n                entity.rotation = curr.value;\r\n                break;\r\n            case 70:\r\n                entity.columnCount = curr.value;\r\n                break;\r\n            case 71:\r\n                entity.rowCount = curr.value;\r\n                break;\r\n            case 44:\r\n                entity.columnSpacing = curr.value;\r\n                break;\r\n            case 45:\r\n                entity.rowSpacing = curr.value;\r\n                break;\r\n            case 210:\r\n                entity.extrusionDirection = helpers.parsePoint(scanner);\r\n                break;\r\n            default: // check common entity attributes\r\n                helpers.checkCommonEntityProperties(entity, curr);\r\n                break;\r\n        }\r\n        curr = scanner.next();\r\n    }\r\n\r\n    return entity;\r\n};\r\n\r\n\r\n","\r\nimport * as helpers from '../ParseHelpers'\r\n\r\nexport default function EntityParser() {}\r\n\r\nEntityParser.ForEntityName = 'LINE';\r\n\r\nEntityParser.prototype.parseEntity = function(scanner, curr) {\r\n    var entity = { type: curr.value, vertices: [] };\r\n    curr = scanner.next();\r\n    while(curr !== 'EOF') {\r\n        if(curr.code === 0) break;\r\n\r\n        switch(curr.code) {\r\n            case 10: // X coordinate of point\r\n                entity.vertices.unshift(helpers.parsePoint(scanner));\r\n                break;\r\n            case 11:\r\n                entity.vertices.push(helpers.parsePoint(scanner));\r\n                break;\r\n            case 210:\r\n                entity.extrusionDirection = helpers.parsePoint(scanner);\r\n                break;\r\n            case 100:\r\n                break;\r\n            default:\r\n                helpers.checkCommonEntityProperties(entity, curr);\r\n                break;\r\n        }\r\n        \r\n        curr = scanner.next();\r\n    }\r\n    return entity;\r\n};","\r\nimport * as helpers from '../ParseHelpers'\r\n\r\nexport default function EntityParser() {}\r\n\r\nEntityParser.ForEntityName = 'LWPOLYLINE';\r\n\r\nEntityParser.prototype.parseEntity = function(scanner, curr) {\r\n    var entity = { type: curr.value, vertices: [] },\r\n        numberOfVertices = 0;\r\n    curr = scanner.next();\r\n    while(curr !== 'EOF') {\r\n        if(curr.code === 0) break;\r\n\r\n        switch(curr.code) {\r\n            case 38:\r\n                entity.elevation = curr.value;\r\n                break;\r\n            case 39:\r\n                entity.depth = curr.value;\r\n                break;\r\n            case 70: // 1 = Closed shape, 128 = plinegen?, 0 = default\r\n                entity.shape = ((curr.value & 1) === 1);\r\n                entity.hasContinuousLinetypePattern = ((curr.value & 128) === 128);\r\n                break;\r\n            case 90:\r\n                numberOfVertices = curr.value;\r\n                break;\r\n            case 10: // X coordinate of point\r\n                entity.vertices = parseLWPolylineVertices(numberOfVertices, scanner);\r\n                break;\r\n            case 43:\r\n                if(curr.value !== 0) entity.width = curr.value;\r\n                break;\r\n            case 210:\r\n                entity.extrusionDirectionX = curr.value;\r\n                break;\r\n            case 220:\r\n                entity.extrusionDirectionY = curr.value;\r\n                break;\r\n            case 230:\r\n                entity.extrusionDirectionZ = curr.value;\r\n                break;\r\n            default:\r\n                helpers.checkCommonEntityProperties(entity, curr);\r\n                break;\r\n        }\r\n        curr = scanner.next();\r\n    }\r\n    return entity;\r\n};\r\n\r\nfunction parseLWPolylineVertices(n, scanner) {\r\n    if(!n || n <= 0) throw Error('n must be greater than 0 verticies');\r\n    var vertices = [], i;\r\n    var vertexIsStarted = false;\r\n    var vertexIsFinished = false;\r\n    var curr = scanner.lastReadGroup;\r\n\r\n    for(i = 0; i < n; i++) {\r\n        var vertex = {};\r\n        while(curr !== 'EOF') {\r\n            if(curr.code === 0 || vertexIsFinished) break;\r\n\r\n            switch(curr.code) {\r\n                case 10: // X\r\n                    if(vertexIsStarted) {\r\n                        vertexIsFinished = true;\r\n                        continue;\r\n                    }\r\n                    vertex.x = curr.value;\r\n                    vertexIsStarted = true;\r\n                    break;\r\n                case 20: // Y\r\n                    vertex.y = curr.value;\r\n                    break;\r\n                case 30: // Z\r\n                    vertex.z = curr.value;\r\n                    break;\r\n                case 40: // start width\r\n                    vertex.startWidth = curr.value;\r\n                    break;\r\n                case 41: // end width\r\n                    vertex.endWidth = curr.value;\r\n                    break;\r\n                case 42: // bulge\r\n                    if(curr.value != 0) vertex.bulge = curr.value;\r\n                    break;\r\n                default:\r\n                    // if we do not hit known code return vertices.  Code might belong to entity\r\n                    if (vertexIsStarted) {\r\n                        vertices.push(vertex);\r\n                    }\r\n                    scanner.rewind();\r\n                    return vertices;\r\n            }\r\n            curr = scanner.next();\r\n        }\r\n        // See https://groups.google.com/forum/#!topic/comp.cad.autocad/9gn8s5O_w6E\r\n        vertices.push(vertex);\r\n        vertexIsStarted = false;\r\n        vertexIsFinished = false;\r\n    }\r\n    scanner.rewind();\r\n    return vertices;\r\n};","\r\nimport * as helpers from '../ParseHelpers'\r\n\r\nexport default function EntityParser() {}\r\n\r\nEntityParser.ForEntityName = 'MTEXT';\r\n\r\nEntityParser.prototype.parseEntity = function(scanner, curr) {\r\n    var entity = { type: curr.value };\r\n\t\tcurr = scanner.next();\r\n    while(curr !== 'EOF') {\r\n        if(curr.code === 0) break;\r\n\r\n        switch(curr.code) {\r\n            case 3:\r\n                entity.text ? entity.text += curr.value : entity.text = curr.value;\r\n                break;\r\n            case 1:\r\n                entity.text ? entity.text += curr.value : entity.text = curr.value;\r\n                break;\r\n            case 10:\r\n                entity.position = helpers.parsePoint(scanner);\r\n                break;\r\n            case 40:\r\n                //Note: this is the text height\r\n                entity.height = curr.value;\r\n                break;\r\n            case 41:\r\n                entity.width = curr.value;\r\n                break;\r\n            case 50:\r\n                entity.rotation = curr.value;\r\n                break;\r\n            case 71:\r\n                entity.attachmentPoint = curr.value;\r\n                break;\r\n            case 72:\r\n                entity.drawingDirection = curr.value;\r\n                break;\r\n            default:\r\n                helpers.checkCommonEntityProperties(entity, curr);\r\n                break;\r\n        }\r\n        curr = scanner.next();\r\n    }\r\n    return entity;\r\n};","\r\nimport * as helpers from '../ParseHelpers'\r\n\r\nexport default function EntityParser() {}\r\n\r\nEntityParser.ForEntityName = 'POINT';\r\n\r\nEntityParser.prototype.parseEntity = function(scanner, curr) {\r\n    var entity;\r\n    entity = { type: curr.value };\r\n    curr = scanner.next();\r\n    while(curr !== 'EOF') {\r\n        if(curr.code === 0) break;\r\n\r\n        switch(curr.code) {\r\n            case 10:\r\n                entity.position = helpers.parsePoint(scanner);\r\n                break;\r\n            case 39:\r\n                entity.thickness = curr.value;\r\n                break;\r\n            case 210:\r\n                entity.extrusionDirection = helpers.parsePoint(scanner);\r\n                break;\r\n            case 100:\r\n                break;\r\n            default: // check common entity attributes\r\n                helpers.checkCommonEntityProperties(entity, curr);\r\n                break;\r\n        }\r\n        curr = scanner.next();\r\n    }\r\n\r\n    return entity;\r\n};","\r\nimport * as helpers from '../ParseHelpers'\r\n\r\nexport default function EntityParser() {}\r\n\r\nEntityParser.ForEntityName = 'VERTEX';\r\n\r\nEntityParser.prototype.parseEntity = function(scanner, curr) {\r\n    var entity = { type: curr.value };\r\n    curr = scanner.next();\r\n    while(curr !== 'EOF') {\r\n        if(curr.code === 0) break;\r\n\r\n        switch(curr.code) {\r\n            case 10:\t// X\r\n                entity.x = curr.value;\r\n                break;\r\n            case 20: // Y\r\n                entity.y = curr.value;\r\n                break;\r\n            case 30: // Z\r\n                entity.z = curr.value;\r\n                break;\r\n            case 40: // start width\r\n                break;\r\n            case 41: // end width\r\n                break;\r\n            case 42: // bulge\r\n                if(curr.value != 0) entity.bulge = curr.value;\r\n                break;\r\n            case 70: // flags\r\n                entity.curveFittingVertex = (curr.value & 1) !== 0;\r\n                entity.curveFitTangent = (curr.value & 2) !== 0;\r\n                entity.splineVertex = (curr.value & 8) !== 0;\r\n                entity.splineControlPoint = (curr.value & 16) !== 0;\r\n                entity.threeDPolylineVertex = (curr.value & 32) !== 0;\r\n                entity.threeDPolylineMesh = (curr.value & 64) !== 0;\r\n                entity.polyfaceMeshVertex = (curr.value & 128) !== 0;\r\n                break;\r\n            case 50: // curve fit tangent direction\r\n                break;\r\n            case 71: // polyface mesh vertex index\r\n                entity.faceA = curr.value;\r\n                break;\r\n            case 72: // polyface mesh vertex index\r\n                entity.faceB = curr.value;\r\n                break;\r\n            case 73: // polyface mesh vertex index\r\n                entity.faceC = curr.value;\r\n                break;\r\n            case 74: // polyface mesh vertex index\r\n                entity.faceD = curr.value;\r\n                break;\r\n            default:\r\n                helpers.checkCommonEntityProperties(entity, curr);\r\n                break;\r\n        }\r\n        \r\n        curr = scanner.next();\r\n    }\r\n    return entity;\r\n};","\r\nimport * as helpers from '../ParseHelpers'\r\nimport VertexParser from './vertex';\r\n\r\nexport default function EntityParser() {}\r\n\r\nEntityParser.ForEntityName = 'POLYLINE';\r\n\r\nEntityParser.prototype.parseEntity = function(scanner, curr) {\r\n    var entity = { type: curr.value, vertices: [] };\r\n\t\tcurr = scanner.next();\r\n\t\twhile(curr !== 'EOF') {\r\n\t\t\tif(curr.code === 0) break;\r\n\r\n\t\t\tswitch(curr.code) {\r\n                case 10: // always 0\r\n                    break;\r\n\t\t\t\tcase 20: // always 0\r\n                    break;\r\n\t\t\t\tcase 30: // elevation\r\n                    break;\r\n\t\t\t\tcase 39: // thickness\r\n                    entity.thickness = curr.value;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 40: // start width\r\n                    break;\r\n\t\t\t\tcase 41: // end width\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 70:\r\n\t\t\t\t\tentity.shape = (curr.value & 1) !== 0;\r\n                    entity.includesCurveFitVertices = (curr.value & 2) !== 0;\r\n                    entity.includesSplineFitVertices = (curr.value & 4) !== 0;\r\n                    entity.is3dPolyline = (curr.value & 8) !== 0;\r\n                    entity.is3dPolygonMesh = (curr.value & 16) !== 0;\r\n                    entity.is3dPolygonMeshClosed = (curr.value & 32) !== 0; // 32 = The polygon mesh is closed in the N direction\r\n                    entity.isPolyfaceMesh = (curr.value & 64) !== 0;\r\n                    entity.hasContinuousLinetypePattern = (curr.value & 128) !== 0;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 71: // Polygon mesh M vertex count\r\n                    break;\r\n\t\t\t\tcase 72: // Polygon mesh N vertex count\r\n                    break;\r\n\t\t\t\tcase 73: // Smooth surface M density\r\n                    break;\r\n\t\t\t\tcase 74: // Smooth surface N density\r\n                    break;\r\n\t\t\t\tcase 75: // Curves and smooth surface type\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 210:\r\n                    entity.extrusionDirection = helpers.parsePoint(scanner);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tdefault:\r\n\t\t\t\t\thelpers.checkCommonEntityProperties(entity, curr);\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\tcurr = scanner.next();\r\n\t\t}\r\n\r\n\t\tentity.vertices = parsePolylineVertices(scanner, curr);\r\n\r\n\t\treturn entity;\r\n};\r\n\r\nfunction parsePolylineVertices(scanner, curr) {\r\n    var vertexParser = new VertexParser();\r\n\r\n    var vertices = [];\r\n    while (!scanner.isEOF()) {\r\n        if (curr.code === 0) {\r\n            if (curr.value === 'VERTEX') {\r\n                vertices.push(vertexParser.parseEntity(scanner, curr));\r\n                curr = scanner.lastReadGroup;\r\n            } else if (curr.value === 'SEQEND') {\r\n                parseSeqEnd(scanner, curr);\r\n                break;\r\n            }\r\n        }\r\n    }\r\n    return vertices;\r\n};\r\n\r\nfunction parseSeqEnd(scanner, curr) {\r\n    var entity = { type: curr.value };\r\n    curr = scanner.next();\r\n    while(curr != 'EOF') {\r\n        if (curr.code == 0) break;\r\n        helpers.checkCommonEntityProperties(entity, curr);\r\n        curr = scanner.next();\r\n    }\r\n\r\n    return entity;\r\n};\r\n","\r\nimport * as helpers from '../ParseHelpers'\r\n\r\nexport default function EntityParser() {}\r\n\r\nEntityParser.ForEntityName = 'SOLID';\r\n\r\nEntityParser.prototype.parseEntity = function(scanner, currentGroup) {\r\n    var entity;\r\n    entity = { type: currentGroup.value };\r\n    entity.points = [];\r\n    currentGroup = scanner.next();\r\n    while(currentGroup !== 'EOF') {\r\n        if(currentGroup.code === 0) break;\r\n\r\n        switch(currentGroup.code) {\r\n            case 10:\r\n                entity.points[0] = helpers.parsePoint(scanner);\r\n                break;\r\n            case 11:\r\n                entity.points[1] = helpers.parsePoint(scanner);\r\n                break;\r\n            case 12:\r\n                entity.points[2] = helpers.parsePoint(scanner);\r\n                break;\r\n            case 13:\r\n                entity.points[3] = helpers.parsePoint(scanner);\r\n                break;\r\n            case 210:\r\n                entity.extrusionDirection = helpers.parsePoint(scanner);\r\n                break;\r\n            default: // check common entity attributes\r\n                helpers.checkCommonEntityProperties(entity, currentGroup);\r\n                break;\r\n        }\r\n        currentGroup = scanner.next();\r\n    }\r\n\r\n    return entity;\r\n};","\r\nimport * as helpers from '../ParseHelpers'\r\n\r\nexport default function EntityParser() {}\r\n\r\nEntityParser.ForEntityName = 'SPLINE';\r\n\r\nEntityParser.prototype.parseEntity = function(scanner, curr) {\r\n    var entity;\r\n    entity = { type: curr.value };\r\n    curr = scanner.next();\r\n    while(curr !== 'EOF')\r\n    {\r\n        if(curr.code === 0) break;\r\n\r\n        switch(curr.code) {\r\n            case 10:\r\n                if (!entity.controlPoints) entity.controlPoints = [];\r\n                entity.controlPoints.push(helpers.parsePoint(scanner));\r\n                break;\r\n            case 11:\r\n                if (!entity.fitPoints) entity.fitPoints = [];\r\n                entity.fitPoints.push(helpers.parsePoint(scanner));\r\n                break;\r\n            case 12:\r\n                entity.startTangent = helpers.parsePoint(scanner);\r\n                break;\r\n            case 13:\r\n                entity.endTangent = helpers.parsePoint(scanner);\r\n                break;\r\n            case 40:\r\n                if (!entity.knotValues) entity.knotValues = [];\r\n                entity.knotValues.push(curr.value);\r\n                break;\r\n            case 70:\r\n                if ((curr.value & 1) != 0) entity.closed = true;\r\n                if ((curr.value & 2) != 0) entity.periodic = true;\r\n                if ((curr.value & 4) != 0) entity.rational = true;\r\n                if ((curr.value & 8) != 0) entity.planar = true;\r\n                if ((curr.value & 16) != 0) \r\n                {\r\n                    entity.planar = true;\r\n                    entity.linear = true;\r\n                }\r\n                break;\r\n                \r\n            case 71:\r\n                entity.degreeOfSplineCurve = curr.value;\r\n                break;\r\n            case 72:\r\n                entity.numberOfKnots = curr.value;\r\n                break;\r\n            case 73:\r\n                entity.numberOfControlPoints = curr.value;\r\n                break;\r\n            case 74:\r\n                entity.numberOfFitPoints = curr.value;\r\n                break;\r\n            case 210:\r\n                entity.normalVector = helpers.parsePoint(scanner);\r\n                break;\r\n            default:\r\n                helpers.checkCommonEntityProperties(entity, curr);\r\n                break;\r\n        }\r\n        curr = scanner.next();\r\n    }\r\n\r\n    return entity;\r\n};","\r\nimport * as helpers from '../ParseHelpers'\r\n\r\nexport default function EntityParser() {}\r\n\r\nEntityParser.ForEntityName = 'TEXT';\r\n\r\nEntityParser.prototype.parseEntity = function(scanner, curr) {\r\n    var entity;\r\n\t\tentity = { type: curr.value };\r\n    curr = scanner.next();\r\n    while(curr !== 'EOF') {\r\n        if(curr.code === 0) break;\r\n        switch(curr.code) {\r\n            case 10: // X coordinate of 'first alignment point'\r\n                entity.startPoint = helpers.parsePoint(scanner);\r\n                break;\r\n            case 11: // X coordinate of 'second alignment point'\r\n                entity.endPoint = helpers.parsePoint(scanner);\r\n                break;\r\n            case 40: // Text height\r\n                entity.textHeight = curr.value;\r\n                break;\r\n            case 41:\r\n                entity.xScale = curr.value;\r\n                break;\r\n            case 50: // Rotation in degrees\r\n                entity.rotation = curr.value;\r\n                break;\r\n            case 1: // Text\r\n                entity.text = curr.value;\r\n                break;\r\n            // NOTE: 72 and 73 are meaningless without 11 (second alignment point)\r\n            case 72: // Horizontal alignment\r\n                entity.halign = curr.value;\r\n                break;\r\n            case 73: // Vertical alignment\r\n                entity.valign = curr.value;\r\n                break;\r\n            default: // check common entity attributes\r\n                helpers.checkCommonEntityProperties(entity, curr);\r\n                break;\r\n        }\r\n        curr = scanner.next();\r\n    }\r\n    return entity;\r\n};","/*\n* loglevel - https://github.com/pimterry/loglevel\n*\n* Copyright (c) 2013 Tim Perry\n* Licensed under the MIT license.\n*/\n(function (root, definition) {\n    \"use strict\";\n    if (typeof define === 'function' && define.amd) {\n        define(definition);\n    } else if (typeof module === 'object' && module.exports) {\n        module.exports = definition();\n    } else {\n        root.log = definition();\n    }\n}(this, function () {\n    \"use strict\";\n\n    // Slightly dubious tricks to cut down minimized file size\n    var noop = function() {};\n    var undefinedType = \"undefined\";\n    var isIE = (typeof window !== undefinedType) && (typeof window.navigator !== undefinedType) && (\n        /Trident\\/|MSIE /.test(window.navigator.userAgent)\n    );\n\n    var logMethods = [\n        \"trace\",\n        \"debug\",\n        \"info\",\n        \"warn\",\n        \"error\"\n    ];\n\n    // Cross-browser bind equivalent that works at least back to IE6\n    function bindMethod(obj, methodName) {\n        var method = obj[methodName];\n        if (typeof method.bind === 'function') {\n            return method.bind(obj);\n        } else {\n            try {\n                return Function.prototype.bind.call(method, obj);\n            } catch (e) {\n                // Missing bind shim or IE8 + Modernizr, fallback to wrapping\n                return function() {\n                    return Function.prototype.apply.apply(method, [obj, arguments]);\n                };\n            }\n        }\n    }\n\n    // Trace() doesn't print the message in IE, so for that case we need to wrap it\n    function traceForIE() {\n        if (console.log) {\n            if (console.log.apply) {\n                console.log.apply(console, arguments);\n            } else {\n                // In old IE, native console methods themselves don't have apply().\n                Function.prototype.apply.apply(console.log, [console, arguments]);\n            }\n        }\n        if (console.trace) console.trace();\n    }\n\n    // Build the best logging method possible for this env\n    // Wherever possible we want to bind, not wrap, to preserve stack traces\n    function realMethod(methodName) {\n        if (methodName === 'debug') {\n            methodName = 'log';\n        }\n\n        if (typeof console === undefinedType) {\n            return false; // No method possible, for now - fixed later by enableLoggingWhenConsoleArrives\n        } else if (methodName === 'trace' && isIE) {\n            return traceForIE;\n        } else if (console[methodName] !== undefined) {\n            return bindMethod(console, methodName);\n        } else if (console.log !== undefined) {\n            return bindMethod(console, 'log');\n        } else {\n            return noop;\n        }\n    }\n\n    // These private functions always need `this` to be set properly\n\n    function replaceLoggingMethods(level, loggerName) {\n        /*jshint validthis:true */\n        for (var i = 0; i < logMethods.length; i++) {\n            var methodName = logMethods[i];\n            this[methodName] = (i < level) ?\n                noop :\n                this.methodFactory(methodName, level, loggerName);\n        }\n\n        // Define log.log as an alias for log.debug\n        this.log = this.debug;\n    }\n\n    // In old IE versions, the console isn't present until you first open it.\n    // We build realMethod() replacements here that regenerate logging methods\n    function enableLoggingWhenConsoleArrives(methodName, level, loggerName) {\n        return function () {\n            if (typeof console !== undefinedType) {\n                replaceLoggingMethods.call(this, level, loggerName);\n                this[methodName].apply(this, arguments);\n            }\n        };\n    }\n\n    // By default, we use closely bound real methods wherever possible, and\n    // otherwise we wait for a console to appear, and then try again.\n    function defaultMethodFactory(methodName, level, loggerName) {\n        /*jshint validthis:true */\n        return realMethod(methodName) ||\n               enableLoggingWhenConsoleArrives.apply(this, arguments);\n    }\n\n    function Logger(name, defaultLevel, factory) {\n      var self = this;\n      var currentLevel;\n\n      var storageKey = \"loglevel\";\n      if (typeof name === \"string\") {\n        storageKey += \":\" + name;\n      } else if (typeof name === \"symbol\") {\n        storageKey = undefined;\n      }\n\n      function persistLevelIfPossible(levelNum) {\n          var levelName = (logMethods[levelNum] || 'silent').toUpperCase();\n\n          if (typeof window === undefinedType || !storageKey) return;\n\n          // Use localStorage if available\n          try {\n              window.localStorage[storageKey] = levelName;\n              return;\n          } catch (ignore) {}\n\n          // Use session cookie as fallback\n          try {\n              window.document.cookie =\n                encodeURIComponent(storageKey) + \"=\" + levelName + \";\";\n          } catch (ignore) {}\n      }\n\n      function getPersistedLevel() {\n          var storedLevel;\n\n          if (typeof window === undefinedType || !storageKey) return;\n\n          try {\n              storedLevel = window.localStorage[storageKey];\n          } catch (ignore) {}\n\n          // Fallback to cookies if local storage gives us nothing\n          if (typeof storedLevel === undefinedType) {\n              try {\n                  var cookie = window.document.cookie;\n                  var location = cookie.indexOf(\n                      encodeURIComponent(storageKey) + \"=\");\n                  if (location !== -1) {\n                      storedLevel = /^([^;]+)/.exec(cookie.slice(location))[1];\n                  }\n              } catch (ignore) {}\n          }\n\n          // If the stored level is not valid, treat it as if nothing was stored.\n          if (self.levels[storedLevel] === undefined) {\n              storedLevel = undefined;\n          }\n\n          return storedLevel;\n      }\n\n      /*\n       *\n       * Public logger API - see https://github.com/pimterry/loglevel for details\n       *\n       */\n\n      self.name = name;\n\n      self.levels = { \"TRACE\": 0, \"DEBUG\": 1, \"INFO\": 2, \"WARN\": 3,\n          \"ERROR\": 4, \"SILENT\": 5};\n\n      self.methodFactory = factory || defaultMethodFactory;\n\n      self.getLevel = function () {\n          return currentLevel;\n      };\n\n      self.setLevel = function (level, persist) {\n          if (typeof level === \"string\" && self.levels[level.toUpperCase()] !== undefined) {\n              level = self.levels[level.toUpperCase()];\n          }\n          if (typeof level === \"number\" && level >= 0 && level <= self.levels.SILENT) {\n              currentLevel = level;\n              if (persist !== false) {  // defaults to true\n                  persistLevelIfPossible(level);\n              }\n              replaceLoggingMethods.call(self, level, name);\n              if (typeof console === undefinedType && level < self.levels.SILENT) {\n                  return \"No console available for logging\";\n              }\n          } else {\n              throw \"log.setLevel() called with invalid level: \" + level;\n          }\n      };\n\n      self.setDefaultLevel = function (level) {\n          if (!getPersistedLevel()) {\n              self.setLevel(level, false);\n          }\n      };\n\n      self.enableAll = function(persist) {\n          self.setLevel(self.levels.TRACE, persist);\n      };\n\n      self.disableAll = function(persist) {\n          self.setLevel(self.levels.SILENT, persist);\n      };\n\n      // Initialize with the right level\n      var initialLevel = getPersistedLevel();\n      if (initialLevel == null) {\n          initialLevel = defaultLevel == null ? \"WARN\" : defaultLevel;\n      }\n      self.setLevel(initialLevel, false);\n    }\n\n    /*\n     *\n     * Top-level API\n     *\n     */\n\n    var defaultLogger = new Logger();\n\n    var _loggersByName = {};\n    defaultLogger.getLogger = function getLogger(name) {\n        if ((typeof name !== \"symbol\" && typeof name !== \"string\") || name === \"\") {\n          throw new TypeError(\"You must supply a name when creating a logger.\");\n        }\n\n        var logger = _loggersByName[name];\n        if (!logger) {\n          logger = _loggersByName[name] = new Logger(\n            name, defaultLogger.getLevel(), defaultLogger.methodFactory);\n        }\n        return logger;\n    };\n\n    // Grab the current global log variable in case of overwrite\n    var _log = (typeof window !== undefinedType) ? window.log : undefined;\n    defaultLogger.noConflict = function() {\n        if (typeof window !== undefinedType &&\n               window.log === defaultLogger) {\n            window.log = _log;\n        }\n\n        return defaultLogger;\n    };\n\n    defaultLogger.getLoggers = function getLoggers() {\n        return _loggersByName;\n    };\n\n    // ES6 default export, for compatibility\n    defaultLogger['default'] = defaultLogger;\n\n    return defaultLogger;\n}));\n","import DxfArrayScanner from './DxfArrayScanner';\r\nimport AUTO_CAD_COLOR_INDEX from './AutoCadColorIndex';\r\n\r\nimport Face from './entities/3dface';\r\nimport Arc from './entities/arc';\r\nimport AttDef from './entities/attdef';\r\nimport Circle from './entities/circle';\r\nimport Dimension from './entities/dimension';\r\nimport Ellipse from './entities/ellipse';\r\nimport Insert from './entities/insert';\r\nimport Line from './entities/line';\r\nimport LWPolyline from './entities/lwpolyline';\r\nimport MText from './entities/mtext';\r\nimport Point from './entities/point';\r\nimport Polyline from './entities/polyline';\r\nimport Solid from './entities/solid';\r\nimport Spline from './entities/spline';\r\nimport Text from './entities/text';\r\n//import Vertex from './entities/';\r\n\r\nimport log from 'loglevel';\r\n\r\n//log.setLevel('trace');\r\n//log.setLevel('debug');\r\n//log.setLevel('info');\r\n//log.setLevel('warn');\r\nlog.setLevel('error');\r\n//log.setLevel('silent');\r\n\r\nfunction registerDefaultEntityHandlers(dxfParser) {\r\n\t// Supported entities here (some entity code is still being refactored into this flow)\r\n\tdxfParser.registerEntityHandler(Face);\r\n\tdxfParser.registerEntityHandler(Arc);\r\n\tdxfParser.registerEntityHandler(AttDef);\r\n\tdxfParser.registerEntityHandler(Circle);\r\n\tdxfParser.registerEntityHandler(Dimension);\r\n\tdxfParser.registerEntityHandler(Ellipse);\r\n\tdxfParser.registerEntityHandler(Insert);\r\n\tdxfParser.registerEntityHandler(Line);\r\n\tdxfParser.registerEntityHandler(LWPolyline);\r\n\tdxfParser.registerEntityHandler(MText);\r\n\tdxfParser.registerEntityHandler(Point);\r\n\tdxfParser.registerEntityHandler(Polyline);\r\n\tdxfParser.registerEntityHandler(Solid);\r\n\tdxfParser.registerEntityHandler(Spline);\r\n\tdxfParser.registerEntityHandler(Text);\r\n\t//dxfParser.registerEntityHandler(require('./entities/vertex'));\r\n}\r\n\r\nexport default function DxfParser() {\r\n\tthis._entityHandlers = {};\r\n\r\n\tregisterDefaultEntityHandlers(this);\r\n}\r\n\r\nDxfParser.prototype.parse = function(source, done) {\r\n\tthrow new Error(\"read() not implemented. Use readSync()\");\r\n};\r\n\r\nDxfParser.prototype.registerEntityHandler = function(handlerType) {\r\n\tvar instance = new handlerType();\r\n\tthis._entityHandlers[handlerType.ForEntityName] = instance;\r\n}\r\n\r\nDxfParser.prototype.parseSync = function(source) {\r\n\tif(typeof(source) === 'string') {\r\n\t\treturn this._parse(source);\r\n\t}else {\r\n\t\tconsole.error('Cannot read dxf source of type `' + typeof(source));\r\n\t\treturn null;\r\n\t}\r\n};\r\n\r\nDxfParser.prototype.parseStream = function(stream, done) {\r\n\r\n\tvar dxfString = \"\";\r\n\tvar self = this;\r\n\r\n\tstream.on('data', onData);\r\n\tstream.on('end', onEnd);\r\n\tstream.on('error', onError);\r\n\r\n\tfunction onData(chunk) {\r\n\t\tdxfString += chunk;\r\n\t}\r\n\r\n\tfunction onEnd() {\r\n\t\ttry {\r\n\t\t\tvar dxf = self._parse(dxfString);\r\n\t\t}catch(err) {\r\n\t\t\treturn done(err);\r\n\t\t}\r\n\t\tdone(null, dxf);\r\n\t}\r\n\r\n\tfunction onError(err) {\r\n\t\tdone(err);\r\n\t}\r\n};\r\n\r\nDxfParser.prototype._parse = function(dxfString) {\r\n\tvar scanner, curr, dxf = {}, lastHandle = 0;\r\n\tvar dxfLinesArray = dxfString.split(/\\r\\n|\\r|\\n/g);\r\n\r\n\tscanner = new DxfArrayScanner(dxfLinesArray);\r\n\tif(!scanner.hasNext()) throw Error('Empty file');\r\n\r\n\tvar self = this;\r\n\r\n\tvar parseAll = function() {\r\n\t\tcurr = scanner.next();\r\n\t\twhile(!scanner.isEOF()) {\r\n\t\t\tif(curr.code === 0 && curr.value === 'SECTION') {\r\n\t\t\t\tcurr = scanner.next();\r\n\r\n\t\t\t\t// Be sure we are reading a section code\r\n\t\t\t\tif (curr.code !== 2) {\r\n\t\t\t\t\tconsole.error('Unexpected code %s after 0:SECTION', debugCode(curr));\r\n\t\t\t\t\tcurr = scanner.next();\r\n\t\t\t\t\tcontinue;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (curr.value === 'HEADER') {\r\n\t\t\t\t\tlog.debug('> HEADER');\r\n\t\t\t\t\tdxf.header = parseHeader();\r\n\t\t\t\t\tlog.debug('<');\r\n\t\t\t\t} else if (curr.value === 'BLOCKS') {\r\n\t\t\t\t\tlog.debug('> BLOCKS');\r\n\t\t\t\t\tdxf.blocks = parseBlocks();\r\n\t\t\t\t\tlog.debug('<');\r\n\t\t\t\t} else if(curr.value === 'ENTITIES') {\r\n\t\t\t\t\tlog.debug('> ENTITIES');\r\n\t\t\t\t\tdxf.entities = parseEntities(false);\r\n\t\t\t\t\tlog.debug('<');\r\n\t\t\t\t} else if(curr.value === 'TABLES') {\r\n\t\t\t\t\tlog.debug('> TABLES');\r\n\t\t\t\t\tdxf.tables = parseTables();\r\n\t\t\t\t\tlog.debug('<');\r\n\t\t\t\t} else if(curr.value === 'EOF') {\r\n\t\t\t\t\tlog.debug('EOF');\r\n\t\t\t\t} else {\r\n\t\t\t\t\tlog.warn('Skipping section \\'%s\\'', curr.value);\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tcurr = scanner.next();\r\n\t\t\t}\r\n\t\t\t// If is a new section\r\n\t\t}\r\n\t};\r\n\r\n\tvar groupIs = function(code, value) {\r\n\t\treturn curr.code === code && curr.value === value;\r\n\t};\r\n\r\n\t/**\r\n\t *\r\n\t * @return {object} header\r\n\t */\r\n\tvar parseHeader = function() {\r\n\t\t// interesting variables:\r\n\t\t//  $ACADVER, $VIEWDIR, $VIEWSIZE, $VIEWCTR, $TDCREATE, $TDUPDATE\r\n\t\t// http://www.autodesk.com/techpubs/autocad/acadr14/dxf/header_section_al_u05_c.htm\r\n\t\t// Also see VPORT table entries\r\n\t\tvar currVarName = null, currVarValue = null;\r\n\t\tvar header = {};\r\n\t\t// loop through header variables\r\n\t\tcurr = scanner.next();\r\n\r\n\t\twhile(true) {\r\n\t\t\tif(groupIs(0, 'ENDSEC')) {\r\n\t\t\t\tif(currVarName) header[currVarName] = currVarValue;\r\n\t\t\t\tbreak;\r\n\t\t\t} else if(curr.code === 9) {\r\n\t\t\t\tif(currVarName) header[currVarName] = currVarValue;\r\n\t\t\t\tcurrVarName = curr.value;\r\n\t\t\t\t// Filter here for particular variables we are interested in\r\n\t\t\t} else {\r\n\t\t\t\tif(curr.code === 10) {\r\n\t\t\t\t\tcurrVarValue = { x: curr.value };\r\n\t\t\t\t} else if(curr.code === 20) {\r\n\t\t\t\t\tcurrVarValue.y = curr.value;\r\n\t\t\t\t} else if(curr.code === 30) {\r\n\t\t\t\t\tcurrVarValue.z = curr.value;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tcurrVarValue = curr.value;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tcurr = scanner.next();\r\n\t\t}\r\n\t\t// console.log(util.inspect(header, { colors: true, depth: null }));\r\n\t\tcurr = scanner.next(); // swallow up ENDSEC\r\n\t\treturn header;\r\n\t};\r\n\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tvar parseBlocks = function() {\r\n\t\tvar blocks = {}, block;\r\n\r\n        curr = scanner.next();\r\n\r\n\t\twhile(curr.value !== 'EOF') {\r\n\t\t\tif(groupIs(0, 'ENDSEC')) {\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\r\n\t\t\tif(groupIs(0, 'BLOCK')) {\r\n\t\t\t\tlog.debug('block {');\r\n\t\t\t\tblock = parseBlock();\r\n\t\t\t\tlog.debug('}');\r\n\t\t\t\tensureHandle(block);\r\n                if(!block.name)\r\n                    log.error('block with handle \"' + block.handle + '\" is missing a name.');\r\n\t\t\t\telse\r\n                    blocks[block.name] = block;\r\n\t\t\t} else {\r\n\t\t\t\tlogUnhandledGroup(curr);\r\n\t\t\t\tcurr = scanner.next();\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn blocks;\r\n\t};\r\n\r\n\tvar parseBlock = function() {\r\n\t\tvar block = {};\r\n\t\tcurr = scanner.next();\r\n\r\n\t\twhile(curr.value !== 'EOF') {\r\n\t\t\tswitch(curr.code) {\r\n\t\t\t\tcase 1:\r\n\t\t\t\t\tblock.xrefPath = curr.value;\r\n\t\t\t\t\tcurr = scanner.next();\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 2:\r\n\t\t\t\t\tblock.name = curr.value;\r\n\t\t\t\t\tcurr = scanner.next();\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 3:\r\n\t\t\t\t\tblock.name2 = curr.value;\r\n\t\t\t\t\tcurr = scanner.next();\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 5:\r\n\t\t\t\t\tblock.handle = curr.value;\r\n\t\t\t\t\tcurr = scanner.next();\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 8:\r\n\t\t\t\t\tblock.layer = curr.value;\r\n\t\t\t\t\tcurr = scanner.next();\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 10:\r\n\t\t\t\t\tblock.position = parsePoint();\r\n\t\t\t\t\tcurr = scanner.next();\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 67:\r\n\t\t\t\t\tblock.paperSpace = (curr.value && curr.value == 1) ? true : false;\r\n\t\t\t\t\tcurr = scanner.next();\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 70:\r\n\t\t\t\t\tif (curr.value != 0) {\r\n\t\t\t\t\t\t//if(curr.value & BLOCK_ANONYMOUS_FLAG) console.log('  Anonymous block');\r\n\t\t\t\t\t\t//if(curr.value & BLOCK_NON_CONSTANT_FLAG) console.log('  Non-constant attributes');\r\n\t\t\t\t\t\t//if(curr.value & BLOCK_XREF_FLAG) console.log('  Is xref');\r\n\t\t\t\t\t\t//if(curr.value & BLOCK_XREF_OVERLAY_FLAG) console.log('  Is xref overlay');\r\n\t\t\t\t\t\t//if(curr.value & BLOCK_EXTERNALLY_DEPENDENT_FLAG) console.log('  Is externally dependent');\r\n\t\t\t\t\t\t//if(curr.value & BLOCK_RESOLVED_OR_DEPENDENT_FLAG) console.log('  Is resolved xref or dependent of an xref');\r\n\t\t\t\t\t\t//if(curr.value & BLOCK_REFERENCED_XREF) console.log('  This definition is a referenced xref');\r\n\t\t\t\t\t\tblock.type = curr.value;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tcurr = scanner.next();\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 100:\r\n\t\t\t\t\t// ignore class markers\r\n\t\t\t\t\tcurr = scanner.next();\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 330:\r\n\t\t\t\t\tblock.ownerHandle = curr.value;\r\n\t\t\t\t\tcurr = scanner.next();\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 0:\r\n\t\t\t\t\tif(curr.value == 'ENDBLK')\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tblock.entities = parseEntities(true);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tdefault:\r\n\t\t\t\t\tlogUnhandledGroup(curr);\r\n\t\t\t\t\tcurr = scanner.next();\r\n\t\t\t}\r\n\r\n\t\t\tif(groupIs(0, 'ENDBLK')) {\r\n\t\t\t\tcurr = scanner.next();\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn block;\r\n\t};\r\n\r\n\t/**\r\n\t * parseTables\r\n\t * @return {Object} Object representing tables\r\n\t */\r\n\tvar parseTables = function() {\r\n\t\tvar tables = {};\r\n\t\tcurr = scanner.next();\r\n\t\twhile(curr.value !== 'EOF') {\r\n\t\t\tif(groupIs(0, 'ENDSEC'))\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tif(groupIs(0, 'TABLE')) {\r\n\t\t\t\tcurr = scanner.next();\r\n\r\n\t\t\t\tvar tableDefinition = tableDefinitions[curr.value];\r\n\t\t\t\tif(tableDefinition) {\r\n\t\t\t\t\tlog.debug(curr.value + ' Table {');\r\n\t\t\t\t\ttables[tableDefinitions[curr.value].tableName] = parseTable();\r\n\t\t\t\t\tlog.debug('}');\r\n\t\t\t\t} else {\r\n\t\t\t\t\tlog.debug('Unhandled Table ' + curr.value);\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\t// else ignored\r\n\t\t\t\tcurr = scanner.next();\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tcurr = scanner.next();\r\n\t\treturn tables;\r\n\t};\r\n\r\n\tconst END_OF_TABLE_VALUE = 'ENDTAB';\r\n\r\n\tvar parseTable = function() {\r\n\t\tvar tableDefinition = tableDefinitions[curr.value],\r\n\t\t\ttable = {},\r\n\t\t\texpectedCount = 0,\r\n\t\t\tactualCount;\r\n\r\n\t\tcurr = scanner.next();\r\n\t\twhile(!groupIs(0, END_OF_TABLE_VALUE)) {\r\n\r\n\t\t\tswitch(curr.code) {\r\n\t\t\t\tcase 5:\r\n\t\t\t\t\ttable.handle = curr.value;\r\n\t\t\t\t\tcurr = scanner.next();\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 330:\r\n\t\t\t\t\ttable.ownerHandle = curr.value;\r\n\t\t\t\t\tcurr = scanner.next();\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 100:\r\n\t\t\t\t\tif(curr.value === 'AcDbSymbolTable') {\r\n\t\t\t\t\t\t// ignore\r\n\t\t\t\t\t\tcurr = scanner.next();\r\n\t\t\t\t\t}else{\r\n\t\t\t\t\t\tlogUnhandledGroup(curr);\r\n\t\t\t\t\t\tcurr = scanner.next();\r\n\t\t\t\t\t}\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 70:\r\n\t\t\t\t\texpectedCount = curr.value;\r\n\t\t\t\t\tcurr = scanner.next();\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 0:\r\n\t\t\t\t\tif(curr.value === tableDefinition.dxfSymbolName) {\r\n\t\t\t\t\t\ttable[tableDefinition.tableRecordsProperty] = tableDefinition.parseTableRecords();\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tlogUnhandledGroup(curr);\r\n\t\t\t\t\t\tcurr = scanner.next();\r\n\t\t\t\t\t}\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tdefault:\r\n\t\t\t\t\tlogUnhandledGroup(curr);\r\n\t\t\t\t\tcurr = scanner.next();\r\n\t\t\t}\r\n\t\t}\r\n\t\tvar tableRecords = table[tableDefinition.tableRecordsProperty];\r\n\t\tif(tableRecords) {\r\n\t\t\tif(tableRecords.constructor === Array){\r\n\t\t\t\tactualCount = tableRecords.length;\r\n\t\t\t} else if(typeof(tableRecords) === 'object') {\r\n\t\t\t\tactualCount = Object.keys(tableRecords).length;\r\n\t\t\t}\r\n\t\t\tif(expectedCount !== actualCount) log.warn('Parsed ' + actualCount + ' ' + tableDefinition.dxfSymbolName + '\\'s but expected ' + expectedCount);\r\n\t\t}\r\n\t\tcurr = scanner.next();\r\n\t\treturn table;\r\n\t};\r\n\r\n\tvar parseViewPortRecords = function() {\r\n\t\tvar viewPorts = [], // Multiple table entries may have the same name indicating a multiple viewport configuration\r\n\t\t\tviewPort = {};\r\n\r\n\t\tlog.debug('ViewPort {');\r\n\t\tcurr = scanner.next();\r\n\t\twhile(!groupIs(0, END_OF_TABLE_VALUE)) {\r\n\r\n\t\t\tswitch(curr.code) {\r\n\t\t\t\tcase 2: // layer name\r\n\t\t\t\t\tviewPort.name = curr.value;\r\n\t\t\t\t\tcurr = scanner.next();\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 10:\r\n\t\t\t\t\tviewPort.lowerLeftCorner = parsePoint();\r\n\t\t\t\t\tcurr = scanner.next();\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 11:\r\n\t\t\t\t\tviewPort.upperRightCorner = parsePoint();\r\n\t\t\t\t\tcurr = scanner.next();\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 12:\r\n\t\t\t\t\tviewPort.center = parsePoint();\r\n\t\t\t\t\tcurr = scanner.next();\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 13:\r\n\t\t\t\t\tviewPort.snapBasePoint = parsePoint();\r\n\t\t\t\t\tcurr = scanner.next();\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 14:\r\n\t\t\t\t\tviewPort.snapSpacing = parsePoint();\r\n\t\t\t\t\tcurr = scanner.next();\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 15:\r\n\t\t\t\t\tviewPort.gridSpacing = parsePoint();\r\n\t\t\t\t\tcurr = scanner.next();\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 16:\r\n\t\t\t\t\tviewPort.viewDirectionFromTarget = parsePoint();\r\n\t\t\t\t\tcurr = scanner.next();\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 17:\r\n\t\t\t\t\tviewPort.viewTarget = parsePoint();\r\n\t\t\t\t\tcurr = scanner.next();\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 42:\r\n\t\t\t\t\tviewPort.lensLength = curr.value;\r\n\t\t\t\t\tcurr = scanner.next();\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 43:\r\n\t\t\t\t\tviewPort.frontClippingPlane = curr.value;\r\n\t\t\t\t\tcurr = scanner.next();\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 44:\r\n\t\t\t\t\tviewPort.backClippingPlane = curr.value;\r\n\t\t\t\t\tcurr = scanner.next();\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 45:\r\n\t\t\t\t\tviewPort.viewHeight = curr.value;\r\n\t\t\t\t\tcurr = scanner.next();\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 50:\r\n\t\t\t\t\tviewPort.snapRotationAngle = curr.value;\r\n\t\t\t\t\tcurr = scanner.next();\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 51:\r\n\t\t\t\t\tviewPort.viewTwistAngle = curr.value;\r\n\t\t\t\t\tcurr = scanner.next();\r\n\t\t\t\t\tbreak;\r\n                case 79:\r\n                    viewPort.orthographicType = curr.value;\r\n                    curr = scanner.next();\r\n                    break;\r\n\t\t\t\tcase 110:\r\n\t\t\t\t\tviewPort.ucsOrigin = parsePoint();\r\n\t\t\t\t\tcurr = scanner.next();\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 111:\r\n\t\t\t\t\tviewPort.ucsXAxis = parsePoint();\r\n\t\t\t\t\tcurr = scanner.next();\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 112:\r\n\t\t\t\t\tviewPort.ucsYAxis = parsePoint();\r\n\t\t\t\t\tcurr = scanner.next();\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 110:\r\n\t\t\t\t\tviewPort.ucsOrigin = parsePoint();\r\n\t\t\t\t\tcurr = scanner.next();\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 281:\r\n\t\t\t\t\tviewPort.renderMode = curr.value;\r\n\t\t\t\t\tcurr = scanner.next();\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 281:\r\n\t\t\t\t\t// 0 is one distant light, 1 is two distant lights\r\n\t\t\t\t\tviewPort.defaultLightingType = curr.value;\r\n\t\t\t\t\tcurr = scanner.next();\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 292:\r\n\t\t\t\t\tviewPort.defaultLightingOn = curr.value;\r\n\t\t\t\t\tcurr = scanner.next();\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 330:\r\n\t\t\t\t\tviewPort.ownerHandle = curr.value;\r\n\t\t\t\t\tcurr = scanner.next();\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 63: // These are all ambient color. Perhaps should be a gradient when multiple are set.\r\n\t\t\t\tcase 421:\r\n\t\t\t\tcase 431:\r\n\t\t\t\t\tviewPort.ambientColor = curr.value;\r\n\t\t\t\t\tcurr = scanner.next();\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 0:\r\n\t\t\t\t\t// New ViewPort\r\n\t\t\t\t\tif(curr.value === 'VPORT') {\r\n\t\t\t\t\t\tlog.debug('}');\r\n\t\t\t\t\t\tviewPorts.push(viewPort);\r\n\t\t\t\t\t\tlog.debug('ViewPort {');\r\n\t\t\t\t\t\tviewPort = {};\r\n\t\t\t\t\t\tcurr = scanner.next();\r\n\t\t\t\t\t}\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tdefault:\r\n\t\t\t\t\tlogUnhandledGroup(curr);\r\n\t\t\t\t\tcurr = scanner.next();\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\t\t// Note: do not call scanner.next() here,\r\n\t\t//  parseTable() needs the current group\r\n\t\tlog.debug('}');\r\n\t\tviewPorts.push(viewPort);\r\n\r\n\t\treturn viewPorts;\r\n\t};\r\n\r\n\tvar parseLineTypes = function() {\r\n\t\tvar ltypes = {},\r\n\t\t\tltypeName,\r\n\t\t\tltype = {},\r\n\t\t\tlength;\r\n\r\n\t\tlog.debug('LType {');\r\n\t\tcurr = scanner.next();\r\n\t\twhile(!groupIs(0, 'ENDTAB')) {\r\n\r\n\t\t\tswitch(curr.code) {\r\n\t\t\t\tcase 2:\r\n\t\t\t\t\tltype.name = curr.value;\r\n\t\t\t\t\tltypeName = curr.value;\r\n\t\t\t\t\tcurr = scanner.next();\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 3:\r\n\t\t\t\t\tltype.description = curr.value;\r\n\t\t\t\t\tcurr = scanner.next();\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 73: // Number of elements for this line type (dots, dashes, spaces);\r\n\t\t\t\t\tlength = curr.value;\r\n\t\t\t\t\tif(length > 0) ltype.pattern = [];\r\n\t\t\t\t\tcurr = scanner.next();\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 40: // total pattern length\r\n\t\t\t\t\tltype.patternLength = curr.value;\r\n\t\t\t\t\tcurr = scanner.next();\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 49:\r\n\t\t\t\t\tltype.pattern.push(curr.value);\r\n\t\t\t\t\tcurr = scanner.next();\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 0:\r\n\t\t\t\t\tlog.debug('}');\r\n\t\t\t\t\tif(length > 0 && length !== ltype.pattern.length) log.warn('lengths do not match on LTYPE pattern');\r\n\t\t\t\t\tltypes[ltypeName] = ltype;\r\n\t\t\t\t\tltype = {};\r\n\t\t\t\t\tlog.debug('LType {');\r\n\t\t\t\t\tcurr = scanner.next();\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tdefault:\r\n\t\t\t\t\tcurr = scanner.next();\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tlog.debug('}');\r\n\t\tltypes[ltypeName] = ltype;\r\n\t\treturn ltypes;\r\n\t};\r\n\r\n\tvar parseLayers = function() {\r\n\t\tvar layers = {},\r\n\t\t\tlayerName,\r\n\t\t\tlayer = {};\r\n\r\n\t\tlog.debug('Layer {');\r\n\t\tcurr = scanner.next();\r\n\t\twhile(!groupIs(0, 'ENDTAB')) {\r\n\r\n\t\t\tswitch(curr.code) {\r\n\t\t\t\tcase 2: // layer name\r\n\t\t\t\t\tlayer.name = curr.value;\r\n\t\t\t\t\tlayerName = curr.value;\r\n\t\t\t\t\tcurr = scanner.next();\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 62: // color, visibility\r\n\t\t\t\t\tlayer.visible = curr.value >= 0;\r\n\t\t\t\t\t// TODO 0 and 256 are BYBLOCK and BYLAYER respectively. Need to handle these values for layers?.\r\n\t\t\t\t\tlayer.colorIndex = Math.abs(curr.value);\r\n\t\t\t\t\tlayer.color = getAcadColor(layer.colorIndex);\r\n\t\t\t\t\tcurr = scanner.next();\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 70: // frozen layer\r\n\t\t\t\t\tlayer.frozen = ((curr.value & 1) != 0 || (curr.value & 2) != 0);\r\n\t\t\t\t\tcurr = scanner.next();\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 0:\r\n\t\t\t\t\t// New Layer\r\n\t\t\t\t\tif(curr.value === 'LAYER') {\r\n\t\t\t\t\t\tlog.debug('}');\r\n\t\t\t\t\t\tlayers[layerName] = layer;\r\n\t\t\t\t\t\tlog.debug('Layer {');\r\n\t\t\t\t\t\tlayer = {};\r\n\t\t\t\t\t\tlayerName = undefined;\r\n\t\t\t\t\t\tcurr = scanner.next();\r\n\t\t\t\t\t}\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tdefault:\r\n\t\t\t\t\tlogUnhandledGroup(curr);\r\n\t\t\t\t\tcurr = scanner.next();\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\t\t// Note: do not call scanner.next() here,\r\n\t\t//  parseLayerTable() needs the current group\r\n\t\tlog.debug('}');\r\n\t\tlayers[layerName] = layer;\r\n\r\n\t\treturn layers;\r\n\t};\r\n\r\n\tvar tableDefinitions = {\r\n\t\tVPORT: {\r\n\t\t\ttableRecordsProperty: 'viewPorts',\r\n\t\t\ttableName: 'viewPort',\r\n\t\t\tdxfSymbolName: 'VPORT',\r\n\t\t\tparseTableRecords: parseViewPortRecords\r\n\t\t},\r\n\t\tLTYPE: {\r\n\t\t\ttableRecordsProperty: 'lineTypes',\r\n\t\t\ttableName: 'lineType',\r\n\t\t\tdxfSymbolName: 'LTYPE',\r\n\t\t\tparseTableRecords: parseLineTypes\r\n\t\t},\r\n\t\tLAYER: {\r\n\t\t\ttableRecordsProperty: 'layers',\r\n\t\t\ttableName: 'layer',\r\n\t\t\tdxfSymbolName: 'LAYER',\r\n\t\t\tparseTableRecords: parseLayers\r\n\t\t}\r\n\t};\r\n\r\n\t/**\r\n\t * Is called after the parser first reads the 0:ENTITIES group. The scanner\r\n\t * should be on the start of the first entity already.\r\n\t * @return {Array} the resulting entities\r\n\t */\r\n\tvar parseEntities = function(forBlock) {\r\n\t\tvar entities = [];\r\n\r\n\t\tvar endingOnValue = forBlock ? 'ENDBLK' : 'ENDSEC';\r\n\r\n\t\tif (!forBlock) {\r\n\t\t\tcurr = scanner.next();\r\n\t\t}\r\n\t\twhile(true) {\r\n\r\n\t\t\tif(curr.code === 0) {\r\n\t\t\t\tif(curr.value === endingOnValue) {\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tvar entity;\r\n\t\t\t\tvar handler = self._entityHandlers[curr.value];\r\n\t\t\t\tif(handler != null) {\r\n\t\t\t\t\tlog.debug(curr.value + ' {');\r\n\t\t\t\t\tentity = handler.parseEntity(scanner, curr);\r\n\t\t\t\t\tcurr = scanner.lastReadGroup;\r\n\t\t\t\t\tlog.debug('}');\r\n\t\t\t\t} else {\r\n\t\t\t\t\tlog.warn('Unhandled entity ' + curr.value);\r\n\t\t\t\t\tcurr = scanner.next();\r\n\t\t\t\t\tcontinue;\r\n\t\t\t\t}\r\n\t\t\t\tensureHandle(entity);\r\n\t\t\t\tentities.push(entity);\r\n\t\t\t} else {\r\n\t\t\t\t// ignored lines from unsupported entity\r\n\t\t\t\tcurr = scanner.next();\r\n\t\t\t}\r\n\t\t}\r\n\t\tif(endingOnValue == 'ENDSEC') curr = scanner.next(); // swallow up ENDSEC, but not ENDBLK\r\n\t\treturn entities;\r\n\t};\r\n\r\n\t/**\r\n\t * Parses a 2D or 3D point, returning it as an object with x, y, and\r\n\t * (sometimes) z property if it is 3D. It is assumed the current group\r\n\t * is x of the point being read in, and scanner.next() will return the\r\n\t * y. The parser will determine if there is a z point automatically.\r\n\t * @return {Object} The 2D or 3D point as an object with x, y[, z]\r\n\t */\r\n\tvar parsePoint = function() {\r\n\t\tvar point = {},\r\n\t\t\tcode = curr.code;\r\n\r\n\t\tpoint.x = curr.value;\r\n\r\n\t\tcode += 10;\r\n\t\tcurr = scanner.next();\r\n\t\tif(curr.code != code)\r\n\t\t\tthrow new Error('Expected code for point value to be ' + code +\r\n\t\t\t' but got ' + curr.code + '.');\r\n\t\tpoint.y = curr.value;\r\n\r\n\t\tcode += 10;\r\n\t\tcurr = scanner.next();\r\n\t\tif(curr.code != code)\r\n\t\t{\r\n\t\t\tscanner.rewind();\r\n\t\t\treturn point;\r\n\t\t}\r\n\t\tpoint.z = curr.value;\r\n\t\t\r\n\t\treturn point;\r\n\t};\r\n\r\n\tvar ensureHandle = function(entity) {\r\n\t\tif(!entity) throw new TypeError('entity cannot be undefined or null');\r\n\r\n\t\tif(!entity.handle) entity.handle = lastHandle++;\r\n\t};\r\n\r\n\tparseAll();\r\n\treturn dxf;\r\n};\r\n\r\nfunction logUnhandledGroup(curr) {\r\n\tlog.debug('unhandled group ' + debugCode(curr));\r\n}\r\n\r\n\r\nfunction debugCode(curr) {\r\n\treturn curr.code + ':' + curr.value;\r\n}\r\n\r\n/**\r\n * Returns the truecolor value of the given AutoCad color index value\r\n * @return {Number} truecolor value as a number\r\n */\r\nfunction getAcadColor(index) {\r\n\treturn AUTO_CAD_COLOR_INDEX[index];\r\n}\r\n\r\nconst BLOCK_ANONYMOUS_FLAG = 1;\r\nconst BLOCK_NON_CONSTANT_FLAG = 2;\r\nconst BLOCK_XREF_FLAG = 4;\r\nconst BLOCK_XREF_OVERLAY_FLAG = 8;\r\nconst BLOCK_EXTERNALLY_DEPENDENT_FLAG = 16;\r\nconst BLOCK_RESOLVED_OR_DEPENDENT_FLAG = 32;\r\nconst BLOCK_REFERENCED_XREF = 64;\r\n\r\n\r\n/* Notes */\r\n// Code 6 of an entity indicates inheritance of properties (eg. color).\r\n//   BYBLOCK means inherits from block\r\n//   BYLAYER (default) mean inherits from layer\r\n","import DxfParser from './DxfParser.js';\r\n\r\nexport default DxfParser;","// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\n\nprocess.listeners = function (name) { return [] }\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n","import * as readline from 'readline'\r\nimport * as fs from 'fs'\r\nimport DxfParser from 'dxf-parser'\r\nimport {Line, RodDescription} from '../../types'\r\n\r\n\r\ntype LayersType = { string: Layer } | {};\r\nexport type LinesByLayer = { [Key: string]: Line[] }\r\n\r\nclass Layer {\r\n    name: string\r\n    height: number\r\n\r\n    constructor(name, height) {\r\n        this.height = height\r\n        this.name = name\r\n    }\r\n}\r\n\r\n\r\nclass DxfReader {\r\n    LayersType: LayersType = {}\r\n    dxf: DxfParser\r\n    addButton: HTMLButtonElement\r\n    LayerListElement: HTMLElement\r\n    nameAdd: HTMLInputElement\r\n    heightAdd: HTMLInputElement\r\n\r\n    constructor() {\r\n        this.addButton = <HTMLButtonElement>document.getElementById('AddLayer')\r\n        this.addButton.addEventListener('click', this.listenAddButton.bind(this))\r\n        this.nameAdd = <HTMLInputElement>document.getElementById('layerName')\r\n        this.heightAdd = <HTMLInputElement>document.getElementById('layerHeight')\r\n        this.LayerListElement = <HTMLElement>document.getElementById('LayerList')\r\n    }\r\n\r\n    GetDxfFile(file: string) {\r\n        this.ClearLayers()\r\n        const  parser: DxfParser = new DxfParser()\r\n        this.dxf = parser.parseSync(file)\r\n        const layers = this.dxf.tables.layer.layers\r\n        for (const layerName in layers) {\r\n            this.AddLayer(layerName, 16)\r\n        }\r\n    }\r\n\r\n    listenAddButton() {\r\n        let name: string = this.nameAdd.value\r\n        let height: number = Number(this.heightAdd.value)\r\n        this.AddLayer(name, height)\r\n    }\r\n\r\n\r\n    Line(filePath: string) {\r\n        let rd = readline.createInterface(fs.createReadStream(filePath), process.stdout)\r\n        rd.on('line', function (line) {\r\n            console.log(line)\r\n        })\r\n    }\r\n\r\n    ClearLayers(): void {\r\n        this.LayerListElement.innerHTML = ''\r\n    }\r\n\r\n    GetRods(): RodDescription[] {\r\n        let rods: RodDescription[] = []\r\n        for (const entity of this.dxf.entities) {\r\n            if ((entity['layer'] in this.LayersType) && (entity['type'] === 'CIRCLE')) {\r\n                let ds: RodDescription = {\r\n                    x: 0,\r\n                    y: 0,\r\n                    h: 0\r\n                }\r\n                ds.x = parseFloat(entity['center'].x)\r\n                ds.y = parseFloat(entity['center'].y)\r\n                ds.h = this.LayersType[entity['layer']].height\r\n                rods.push(\r\n                    ds\r\n                )\r\n            }\r\n        }\r\n        return rods\r\n    }\r\n\r\n    getLines(): LinesByLayer {\r\n\r\n        let linesByLayer: LinesByLayer = {}\r\n        for (const entity of this.dxf.entities) {\r\n            if ((entity['type'] === 'LINE')) {\r\n                let ds: Line = {\r\n                    point1: {\r\n                        x: 0,\r\n                        y: 0\r\n                    },\r\n                    point2: {\r\n                        x: 0,\r\n                        y: 0\r\n                    }\r\n                }\r\n                ds.point1.x = parseFloat(entity['vertices'][0].x)\r\n                ds.point2.y = parseFloat(entity['vertices'][0].y)\r\n                ds.point2.x = parseFloat(entity['vertices'][1].x)\r\n                ds.point2.y = parseFloat(entity['vertices'][1].y)\r\n                if (linesByLayer[entity['layer']] === undefined) {\r\n                    linesByLayer[entity['layer']] = []\r\n                }\r\n                linesByLayer[entity['layer']].push(ds)\r\n            }\r\n        }\r\n        return linesByLayer\r\n    }\r\n\r\n    AddLayer(name: string, height: number) {\r\n        let layer = new Layer(name, height)\r\n        let liLayer = <HTMLElement>document.createElement('li')\r\n        liLayer.id = `${layer.name}`\r\n\r\n        let nameInput = <HTMLInputElement>document.createElement('input')\r\n        nameInput.type = 'text'\r\n        nameInput.value = name\r\n\r\n        let heightInput = <HTMLInputElement>document.createElement('input')\r\n        heightInput.type = 'number'\r\n        heightInput.value = height.toString()\r\n\r\n\r\n        let deleteButton = <HTMLButtonElement>document.createElement('button')\r\n        deleteButton.className = 'btn btn-danger'\r\n        deleteButton.innerHTML = 'Delete'\r\n\r\n        liLayer.appendChild(nameInput)\r\n        liLayer.appendChild(heightInput)\r\n        liLayer.appendChild(deleteButton)\r\n\r\n        this.LayerListElement.appendChild(liLayer)\r\n\r\n        this.LayersType[layer.name] = layer\r\n\r\n\r\n        nameInput.addEventListener('change', () => {\r\n            this.LayersType[layer.name].name = nameInput.value\r\n        })\r\n\r\n        heightInput.addEventListener('change', () => {\r\n            this.LayersType[layer.name].height = heightInput.value\r\n\r\n        })\r\n\r\n        deleteButton.addEventListener('click', () => {\r\n            liLayer.remove()\r\n            delete this.LayersType[layer.name]\r\n        })\r\n    }\r\n\r\n}\r\n\r\nexport default DxfReader\r\n","import {Line, Point} from '../../types'\r\n\r\nfunction RotationDirection(p1x, p1y, p2x, p2y, p3x, p3y) {\r\n    if (((p3y - p1y) * (p2x - p1x)) > ((p2y - p1y) * (p3x - p1x)))\r\n        return 1\r\n    else if (((p3y - p1y) * (p2x - p1x)) == ((p2y - p1y) * (p3x - p1x)))\r\n        return 0\r\n\r\n    return -1\r\n}\r\n\r\nfunction containsSegment(x1, y1, x2, y2, sx, sy) {\r\n    if (x1 < x2 && x1 < sx && sx < x2) return true\r\n    else if (x2 < x1 && x2 < sx && sx < x1) return true\r\n    else if (y1 < y2 && y1 < sy && sy < y2) return true\r\n    else if (y2 < y1 && y2 < sy && sy < y1) return true\r\n    else if (x1 == sx && y1 == sy || x2 == sx && y2 == sy) return true\r\n    return false\r\n}\r\n\r\n\r\nconst Utils = {\r\n    GetDistanceBetween2Point: (point1: Point, point2: Point): number => {\r\n        return Math.sqrt((point1.x - point2.x) ** 2 + (point1.y - point2.y) ** 2)\r\n    },\r\n\r\n    GetAngleBetween2points: (\r\n        point1: Point,\r\n        point2: Point\r\n    ): number => {\r\n        const deltaY = point2.y - point1.y\r\n        const deltaX = point2.x - point1.x\r\n        const angle = Math.atan(deltaY / deltaX)\r\n        if (deltaX < 0) return angle - Math.PI\r\n\r\n        return angle\r\n    },\r\n\r\n    GetTangentsCircleByPointOld: (pointC: Point, pointP: Point, r: number): {\r\n        x1: number,\r\n        y1: number,\r\n        x2: number,\r\n        y2: number,\r\n        fi: number\r\n    } => {\r\n        const L: number = Utils.GetDistanceBetween2Point(pointC, pointP) //distance between point and center of circle\r\n        const alpha: number = Utils.GetAngleBetween2points(pointC, pointP)\r\n        const lAspic: number = Math.sqrt(L ** 2 - r ** 2)\r\n        const fi: number = Math.acos(r / lAspic)\r\n\r\n\r\n        const point1 = Utils.GetNewPointComplex(pointP, lAspic, -alpha + fi + Math.PI)\r\n        const point2 = Utils.GetNewPointComplex(pointP, lAspic, -alpha - fi)\r\n\r\n        // console.log('fi', ((-alpha + fi + Math.PI) * 180) / Math.PI)\r\n        // console.log('alpha', ((-alpha - fi + 2 * Math.PI) * 180) / Math.PI)\r\n        const chord: number = Utils.GetDistanceBetween2Point(point1, point2)\r\n        const fiO: number = Math.atan((chord / 2) / r)\r\n\r\n        return {\r\n            x1: point1.x,\r\n            y1: point1.y,\r\n            x2: point2.x,\r\n            y2: point2.y,\r\n            fi: fiO\r\n        }\r\n    },\r\n\r\n    GetTangentsCircleByPoint:\r\n        (\r\n            pointC: Point,\r\n            radius: number,\r\n            pointP: Point\r\n        ): {\r\n            point1: Point,\r\n            point2: Point,\r\n            fi: number\r\n        } => {\r\n\r\n            const dx = pointC.x - pointP.x\r\n            const dy = pointC.y - pointP.y\r\n            const dd = Math.sqrt(dx * dx + dy * dy)\r\n            const a = Math.asin(radius / dd)\r\n            const b = Math.atan2(dy, dx)\r\n\r\n            let t = b - a\r\n            const point1 = {x: radius * Math.sin(t) + pointC.x, y: radius * -Math.cos(t) + pointC.y}\r\n\r\n            t = b + a\r\n            const point2 = {x: radius * -Math.sin(t) + pointC.x, y: radius * Math.cos(t) + pointC.y}\r\n\r\n            const chord: number = Utils.GetDistanceBetween2Point(point1, point2)\r\n            const fiO: number = Math.atan((chord / 2) / radius)\r\n\r\n            return {\r\n                point1,\r\n                point2,\r\n                fi: fiO\r\n            }\r\n        },\r\n    GetNewPointComplex: (point: Point, l: number, fi: number): Point => {\r\n        const dX: number = l * Math.sin(fi)\r\n        const dY: number = l * Math.cos(fi)\r\n        return {\r\n            x: point.x + dX,\r\n            y: point.y + dY\r\n        }\r\n    },\r\n\r\n    LinesHasIntersection: (line1: Line, line2: Line) => {\r\n        // if the lines intersect, the result contains the x and y of the intersection (treating the lines as infinite) and booleans for whether line segment 1 or line segment 2 contain the point\r\n        let denominator, a, b, numerator1, numerator2, result = {\r\n            x: null,\r\n            y: null,\r\n            onLine1: false,\r\n            onLine2: false\r\n        }\r\n        denominator = ((line2.point2.y - line2.point1.y) * (line1.point2.x - line1.point1.x)) - ((line2.point2.x - line2.point1.x) * (line1.point2.y - line1.point1.y))\r\n        if (denominator == 0) {\r\n            return result\r\n        }\r\n        a = line1.point1.y - line2.point1.y\r\n        b = line1.point1.x - line2.point1.x\r\n        numerator1 = ((line2.point2.x - line2.point1.x) * a) - ((line2.point2.y - line2.point1.y) * b)\r\n        numerator2 = ((line1.point2.x - line1.point1.x) * a) - ((line1.point2.y - line1.point1.y) * b)\r\n        a = numerator1 / denominator\r\n        b = numerator2 / denominator\r\n        // if we cast these lines infinitely in both directions, they intersect here:\r\n        result.x = line1.point1.x + (a * (line1.point2.x - line1.point1.x))\r\n        result.y = line1.point1.y + (a * (line1.point2.y - line1.point1.y))\r\n        /*\r\n                // it is worth noting that this should be the same as:\r\n                x = line2.point1.x + (b * (line2.point2.x - line2.point1.x));\r\n                y = line2.point1.x + (b * (line2.point2.y - line2.point1.y));\r\n                */\r\n        // if line1 is a segment and line2 is infinite, they intersect if:\r\n        if (a > 0 && a < 1) {\r\n            result.onLine1 = true\r\n        }\r\n        // if line2 is a segment and line1 is infinite, they intersect if:\r\n        if (b > 0 && b < 1) {\r\n            result.onLine2 = true\r\n        }\r\n        // if line1 and line2 are segments, they intersect if both of the above are true\r\n        return result.onLine1 && result.onLine2\r\n    },\r\n    Rx: (r0: number, h0: number, height: number): number => {\r\n        return (r0 * (h0 - height)) / h0\r\n    },\r\n    Rcx: (r0: number, h0: number, hc: number, height: number): number => {\r\n        return (r0 * (hc - height)) / hc\r\n    }\r\n}\r\n\r\nexport default Utils\r\n","import DxfReader from './dxf-parser/DxfScanner'\r\nimport Utils from './utils/utils'\r\n\r\nconst file = <HTMLInputElement>document.getElementById('file')\r\nconst fileButton = <HTMLButtonElement>document.getElementById('fileButton')\r\nconst LayerDistanceElement = <HTMLOListElement>document.getElementById('distanceOnLayer')\r\nlet reader = new DxfReader()\r\n\r\n\r\nconst ParseLinesDxfFile = () => {\r\n    let fileToLoad = file.files[0]\r\n    let fileReader = new FileReader()\r\n    fileReader.onload = function (fileLoadedEvent) {\r\n        // console.log(fileLoadedEvent.target.result.toString())\r\n        reader.GetDxfFile(fileLoadedEvent.target.result.toString())\r\n        const LinesByLayer = reader.getLines()\r\n        // const distanceBylayer = {}\r\n        console.log(LinesByLayer)\r\n\r\n        for (const layer in LinesByLayer) {\r\n            let distance = 0\r\n            for (const layerLinesKey of LinesByLayer[layer]) {\r\n                distance += Utils.GetDistanceBetween2Point(\r\n                    layerLinesKey.point1,\r\n                    layerLinesKey.point2\r\n                )\r\n            }\r\n            // distanceBylayer[layer] = distance\r\n            console.log(layer)\r\n            let liLayer = <HTMLElement>document.createElement('li')\r\n            liLayer.id = `${layer}`\r\n\r\n            const nameList = <HTMLSpanElement>document.createElement('span')\r\n            nameList.innerText = `${layer}  :`\r\n\r\n            const valueList = <HTMLSpanElement>document.createElement('span')\r\n            valueList.innerText = `${distance}`\r\n\r\n            liLayer.appendChild(nameList)\r\n            liLayer.appendChild(valueList)\r\n\r\n            LayerDistanceElement.appendChild(liLayer)\r\n        }\r\n\r\n\r\n    }\r\n    fileReader.readAsText(fileToLoad, 'UTF-8')\r\n}\r\n\r\nfileButton.addEventListener('click', ParseLinesDxfFile)\r\n","var OVERLAY_ID = '__parcel__error__overlay__';\n\nvar OldModule = module.bundle.Module;\n\nfunction Module(moduleName) {\n  OldModule.call(this, moduleName);\n  this.hot = {\n    data: module.bundle.hotData,\n    _acceptCallbacks: [],\n    _disposeCallbacks: [],\n    accept: function (fn) {\n      this._acceptCallbacks.push(fn || function () {});\n    },\n    dispose: function (fn) {\n      this._disposeCallbacks.push(fn);\n    }\n  };\n\n  module.bundle.hotData = null;\n}\n\nmodule.bundle.Module = Module;\nvar checkedAssets, assetsToAccept;\n\nvar parent = module.bundle.parent;\nif ((!parent || !parent.isParcelRequire) && typeof WebSocket !== 'undefined') {\n  var hostname = process.env.HMR_HOSTNAME || location.hostname;\n  var protocol = location.protocol === 'https:' ? 'wss' : 'ws';\n  var ws = new WebSocket(protocol + '://' + hostname + ':' + process.env.HMR_PORT + '/');\n  ws.onmessage = function(event) {\n    checkedAssets = {};\n    assetsToAccept = [];\n\n    var data = JSON.parse(event.data);\n\n    if (data.type === 'update') {\n      var handled = false;\n      data.assets.forEach(function(asset) {\n        if (!asset.isNew) {\n          var didAccept = hmrAcceptCheck(global.parcelRequire, asset.id);\n          if (didAccept) {\n            handled = true;\n          }\n        }\n      });\n\n      // Enable HMR for CSS by default.\n      handled = handled || data.assets.every(function(asset) {\n        return asset.type === 'css' && asset.generated.js;\n      });\n\n      if (handled) {\n        console.clear();\n\n        data.assets.forEach(function (asset) {\n          hmrApply(global.parcelRequire, asset);\n        });\n\n        assetsToAccept.forEach(function (v) {\n          hmrAcceptRun(v[0], v[1]);\n        });\n      } else if (location.reload) { // `location` global exists in a web worker context but lacks `.reload()` function.\n        location.reload();\n      }\n    }\n\n    if (data.type === 'reload') {\n      ws.close();\n      ws.onclose = function () {\n        location.reload();\n      }\n    }\n\n    if (data.type === 'error-resolved') {\n      console.log('[parcel] ✨ Error resolved');\n\n      removeErrorOverlay();\n    }\n\n    if (data.type === 'error') {\n      console.error('[parcel] 🚨  ' + data.error.message + '\\n' + data.error.stack);\n\n      removeErrorOverlay();\n\n      var overlay = createErrorOverlay(data);\n      document.body.appendChild(overlay);\n    }\n  };\n}\n\nfunction removeErrorOverlay() {\n  var overlay = document.getElementById(OVERLAY_ID);\n  if (overlay) {\n    overlay.remove();\n  }\n}\n\nfunction createErrorOverlay(data) {\n  var overlay = document.createElement('div');\n  overlay.id = OVERLAY_ID;\n\n  // html encode message and stack trace\n  var message = document.createElement('div');\n  var stackTrace = document.createElement('pre');\n  message.innerText = data.error.message;\n  stackTrace.innerText = data.error.stack;\n\n  overlay.innerHTML = (\n    '<div style=\"background: black; font-size: 16px; color: white; position: fixed; height: 100%; width: 100%; top: 0px; left: 0px; padding: 30px; opacity: 0.85; font-family: Menlo, Consolas, monospace; z-index: 9999;\">' +\n      '<span style=\"background: red; padding: 2px 4px; border-radius: 2px;\">ERROR</span>' +\n      '<span style=\"top: 2px; margin-left: 5px; position: relative;\">🚨</span>' +\n      '<div style=\"font-size: 18px; font-weight: bold; margin-top: 20px;\">' + message.innerHTML + '</div>' +\n      '<pre>' + stackTrace.innerHTML + '</pre>' +\n    '</div>'\n  );\n\n  return overlay;\n\n}\n\nfunction getParents(bundle, id) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return [];\n  }\n\n  var parents = [];\n  var k, d, dep;\n\n  for (k in modules) {\n    for (d in modules[k][1]) {\n      dep = modules[k][1][d];\n      if (dep === id || (Array.isArray(dep) && dep[dep.length - 1] === id)) {\n        parents.push(k);\n      }\n    }\n  }\n\n  if (bundle.parent) {\n    parents = parents.concat(getParents(bundle.parent, id));\n  }\n\n  return parents;\n}\n\nfunction hmrApply(bundle, asset) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return;\n  }\n\n  if (modules[asset.id] || !bundle.parent) {\n    var fn = new Function('require', 'module', 'exports', asset.generated.js);\n    asset.isNew = !modules[asset.id];\n    modules[asset.id] = [fn, asset.deps];\n  } else if (bundle.parent) {\n    hmrApply(bundle.parent, asset);\n  }\n}\n\nfunction hmrAcceptCheck(bundle, id) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return;\n  }\n\n  if (!modules[id] && bundle.parent) {\n    return hmrAcceptCheck(bundle.parent, id);\n  }\n\n  if (checkedAssets[id]) {\n    return;\n  }\n  checkedAssets[id] = true;\n\n  var cached = bundle.cache[id];\n\n  assetsToAccept.push([bundle, id]);\n\n  if (cached && cached.hot && cached.hot._acceptCallbacks.length) {\n    return true;\n  }\n\n  return getParents(global.parcelRequire, id).some(function (id) {\n    return hmrAcceptCheck(global.parcelRequire, id)\n  });\n}\n\nfunction hmrAcceptRun(bundle, id) {\n  var cached = bundle.cache[id];\n  bundle.hotData = {};\n  if (cached) {\n    cached.hot.data = bundle.hotData;\n  }\n\n  if (cached && cached.hot && cached.hot._disposeCallbacks.length) {\n    cached.hot._disposeCallbacks.forEach(function (cb) {\n      cb(bundle.hotData);\n    });\n  }\n\n  delete bundle.cache[id];\n  bundle(id);\n\n  cached = bundle.cache[id];\n  if (cached && cached.hot && cached.hot._acceptCallbacks.length) {\n    cached.hot._acceptCallbacks.forEach(function (cb) {\n      cb();\n    });\n    return true;\n  }\n}\n"]}